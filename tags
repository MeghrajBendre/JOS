!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon7
ALT	kern/console.c	222;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/net/ns.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testinput.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testoutput.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echosrv.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echotest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/httpd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testtime.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFFSIZE	obj/user/echosrv.asm	/^#define BUFFSIZE 32$/;"	d
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	289;"	d	file:
CAPSLOCK	kern/console.c	224;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONSBUFSIZE	kern/console.c	388;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon9
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon9
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon9
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	221;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/ns.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testinput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testoutput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echosrv.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echotest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/httpd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testtime.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	228;"	d	file:
E1000_RA	kern/working_e1000.h	22;"	d
E1000_RAH	kern/working_e1000.h	24;"	d
E1000_RAL	kern/working_e1000.h	23;"	d
E1000_RCTL	kern/working_e1000.h	17;"	d
E1000_RDBAL	kern/working_e1000.h	18;"	d
E1000_RDH	kern/working_e1000.h	20;"	d
E1000_RDLEN	kern/working_e1000.h	19;"	d
E1000_RDT	kern/working_e1000.h	21;"	d
E1000_RXD_STA_DD	kern/working_e1000.h	43;"	d
E1000_RXD_STA_EOP	kern/working_e1000.h	44;"	d
E1000_RXD_STA_IXSM	kern/working_e1000.h	45;"	d
E1000_STATUS	kern/working_e1000.h	8;"	d
E1000_TCTL	kern/working_e1000.h	14;"	d
E1000_TCTL_BCE	kern/working_e1000.h	29;"	d
E1000_TCTL_COLD	kern/working_e1000.h	32;"	d
E1000_TCTL_COLD_INIT	kern/working_e1000.h	48;"	d
E1000_TCTL_CT	kern/working_e1000.h	31;"	d
E1000_TCTL_CT_INIT	kern/working_e1000.h	47;"	d
E1000_TCTL_EN	kern/working_e1000.h	28;"	d
E1000_TCTL_MULR	kern/working_e1000.h	37;"	d
E1000_TCTL_NRTU	kern/working_e1000.h	36;"	d
E1000_TCTL_PBE	kern/working_e1000.h	34;"	d
E1000_TCTL_PSP	kern/working_e1000.h	30;"	d
E1000_TCTL_RST	kern/working_e1000.h	27;"	d
E1000_TCTL_RTLC	kern/working_e1000.h	35;"	d
E1000_TCTL_SWXOFF	kern/working_e1000.h	33;"	d
E1000_TDBAL	kern/working_e1000.h	10;"	d
E1000_TDH	kern/working_e1000.h	12;"	d
E1000_TDLEN	kern/working_e1000.h	11;"	d
E1000_TDT	kern/working_e1000.h	13;"	d
E1000_TIPG	kern/working_e1000.h	15;"	d
E1000_TIPG_INIT	kern/working_e1000.h	49;"	d
E1000_TXD_CMD_EOP	kern/working_e1000.h	40;"	d
E1000_TXD_CMD_RS	kern/working_e1000.h	39;"	d
E1000_TXD_STA_DD	kern/working_e1000.h	41;"	d
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENTRY	obj/net/ns.asm	/^#define ENTRY(x) \\$/;"	d
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon6
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon6
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon6
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon6
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon6
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon2
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	,	\/\/ Bad path$/;"	e	enum:__anon2
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon2
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon2
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	,	\/\/ File already exists$/;"	e	enum:__anon2
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon2
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon2
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	,	\/\/ Too many files are open$/;"	e	enum:__anon2
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	,	\/\/ File not a valid executable$/;"	e	enum:__anon2
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	, 	\/\/ File or block not found$/;"	e	enum:__anon2
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	,	\/\/ Operation not supported$/;"	e	enum:__anon2
E_NO_DISK	inc/error.h	/^	E_NO_DISK	,	\/\/ No free space left on disk$/;"	e	enum:__anon2
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon2
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon2
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon2
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FDTABLE	lib/fd.c	8;"	d	file:
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon1
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon1
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon1
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon1
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon1
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon1
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon1
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon1
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_PARTITION_H	inc/partition.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_E1000_H	kern/working_e1000.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=5$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	97;"	d	file:
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	20;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon2
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXNAMELEN	inc/fs.h	17;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPACKETLEN	kern/working_e1000.h	121;"	d
MAXPATHLEN	inc/fs.h	20;"	d
MAXPENDING	obj/user/echosrv.asm	/^#define MAXPENDING 5    \/\/ Max connection requests$/;"	d
MAXPKTLEN	kern/working_e1000.h	117;"	d
MAXRECVDESC	kern/working_e1000.h	122;"	d
MAXTRANDESC	kern/working_e1000.h	123;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	30;"	d	file:
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NHANDLERS	fs/serv.c	319;"	d	file:
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	218;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NRDESC	kern/working_e1000.h	116;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon4
NTDESC	kern/working_e1000.h	115;"	d
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	225;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	126;"	d
O_CREAT	inc/lib.h	128;"	d
O_EXCL	inc/lib.h	130;"	d
O_MKDIR	inc/lib.h	131;"	d
O_RDONLY	inc/lib.h	123;"	d
O_RDWR	inc/lib.h	125;"	d
O_TRUNC	inc/lib.h	129;"	d
O_WRONLY	inc/lib.h	124;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Dec 10 13:42:08 PST 2014$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
PTABLE_MAGIC	inc/partition.h	14;"	d
PTABLE_MAGIC_OFFSET	inc/partition.h	13;"	d
PTABLE_OFFSET	inc/partition.h	11;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_COW	lib/orig_fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	80;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PTYPE_DOS_EXTENDED	inc/partition.h	20;"	d
PTYPE_JOSFS	inc/partition.h	18;"	d
PTYPE_JOS_KERN	inc/partition.h	17;"	d
PTYPE_LINUX_EXTENDED	inc/partition.h	22;"	d
PTYPE_W95_EXTENDED	inc/partition.h	21;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Partitiondesc	inc/partition.h	/^struct Partitiondesc {$/;"	s
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	conf/env.mk	/^QEMU=\/opt\/bin\/qemu-system-i386$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	226;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	220;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	196;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon4
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon4
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon4
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon4
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon4
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon4
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon4
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon4
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon4
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon4
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon4
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon4
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon4
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon4
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TCP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define TCP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UDP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
UDP_LOCAL_PORT_RANGE_START	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_START 4096$/;"	d
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
USED	inc/lib.h	24;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	4;"	d	file:
VER	kern/lapic.c	15;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	96;"	d	file:
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	195;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/ns.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testinput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testoutput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	lib/temp_pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/ns.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testinput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testoutput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/net/ns.asm	/^_start:$/;"	l
_start	obj/net/testinput.asm	/^_start:$/;"	l
_start	obj/net/testoutput.asm	/^_start:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/echosrv.asm	/^_start:$/;"	l
_start	obj/user/echotest.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/httpd.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/testtime.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
acc	obj/net/ns.asm	/^      acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^    acc = FOLD_U32T(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^  acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^  acc = 0;$/;"	d
acc	obj/net/ns.asm	/^  acc = FOLD_U32T(acc);$/;"	d
acceptable	obj/net/ns.asm	/^        acceptable = 1;$/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = 1; $/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = tcp_receive(pcb);$/;"	d
accepted_inseq	obj/net/ns.asm	/^    accepted_inseq = tcp_receive(pcb);$/;"	d
ackno	obj/net/ns.asm	/^    ackno = pcb->rcv_nxt;$/;"	d
ackno	obj/net/ns.asm	/^  ackno = tcphdr->ackno = ntohl(tcphdr->ackno);$/;"	d
addr	kern/working_e1000.h	/^    uint64_t addr;$/;"	m	struct:rx_desc
addr	kern/working_e1000.h	/^    uint64_t addr;$/;"	m	struct:tx_desc
addr	obj/fs/fs.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/net/ns.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/net/ns.asm	/^      addr = (struct ip_addr*)&(sin.sin_addr.s_addr);$/;"	d
addr	obj/net/ns.asm	/^      addr = netbuf_fromaddr(buf);$/;"	d
addr	obj/net/testinput.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/net/testoutput.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/forktree.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/pingpong.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/pingpongs.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/primes.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/primespipe.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/sendpage.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/sh.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/spin.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/stresssched.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testfdsharing.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpipe.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpiperace.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpiperace2.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpteshare.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testshell.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr2test	obj/net/ns.asm	/^  addr2test = addr->addr;$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/net/ns.asm	/^ again:$/;"	l
again	obj/user/sh.asm	/^again:$/;"	l
age_pending	obj/net/ns.asm	/^          age_pending = arp_table[i].ctime;$/;"	d
age_queue	obj/net/ns.asm	/^          age_queue = arp_table[i].ctime;$/;"	d
age_stable	obj/net/ns.asm	/^        age_stable = arp_table[i].ctime;$/;"	d
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/ns.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/ns.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testinput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testinput.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testoutput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testoutput.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echosrv.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echosrv.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echotest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echotest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/httpd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/httpd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testtime.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testtime.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
ap	obj/net/ns.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/net/testinput.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echosrv.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echotest.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/httpd.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
arg	obj/net/ns.asm	/^      arg = tmptimeout->arg;$/;"	d
arg	obj/net/ns.asm	/^  arg = arg;$/;"	d
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/net/ns.asm	/^args_exist:$/;"	l
args_exist	obj/net/testinput.asm	/^args_exist:$/;"	l
args_exist	obj/net/testoutput.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/echosrv.asm	/^args_exist:$/;"	l
args_exist	obj/user/echotest.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/httpd.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/testtime.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
attach_E1000	kern/temp_e1000.c	/^int attach_E1000(struct pci_func *func)$/;"	f
attach_E1000	kern/working_e1000.c	/^int attach_E1000(struct pci_func *pcif)$/;"	f
available	obj/net/ns.asm	/^  available = tcp_sndbuf(conn->pcb.tcp);$/;"	d
backlog	obj/net/ns.asm	/^    backlog = 0xff;$/;"	d
bar_width	obj/kern/kernel.asm	/^				bar_width = 8;$/;"	d
bar_width	obj/kern/kernel.asm	/^		bar_width = 4;$/;"	d
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_IO_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_MEM_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/net/ns.asm	/^			base = 10;$/;"	d
base	obj/net/ns.asm	/^			base = 16;$/;"	d
base	obj/net/ns.asm	/^			base = 8;$/;"	d
base	obj/net/ns.asm	/^		base = 10;$/;"	d
base	obj/net/ns.asm	/^        base = 16;$/;"	d
base	obj/net/ns.asm	/^        base = 8;$/;"	d
base	obj/net/ns.asm	/^    base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 16;$/;"	d
base	obj/net/testinput.asm	/^			base = 8;$/;"	d
base	obj/net/testinput.asm	/^		base = 10;$/;"	d
base	obj/net/testinput.asm	/^        base = 16;$/;"	d
base	obj/net/testinput.asm	/^        base = 8;$/;"	d
base	obj/net/testinput.asm	/^    base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 16;$/;"	d
base	obj/net/testoutput.asm	/^			base = 8;$/;"	d
base	obj/net/testoutput.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^			base = 8;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^			base = 8;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 16;$/;"	d
base	obj/user/echosrv.asm	/^			base = 8;$/;"	d
base	obj/user/echosrv.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^        base = 16;$/;"	d
base	obj/user/echosrv.asm	/^        base = 8;$/;"	d
base	obj/user/echosrv.asm	/^    base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 16;$/;"	d
base	obj/user/echotest.asm	/^			base = 8;$/;"	d
base	obj/user/echotest.asm	/^		base = 10;$/;"	d
base	obj/user/echotest.asm	/^        base = 16;$/;"	d
base	obj/user/echotest.asm	/^        base = 8;$/;"	d
base	obj/user/echotest.asm	/^    base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 16;$/;"	d
base	obj/user/httpd.asm	/^			base = 8;$/;"	d
base	obj/user/httpd.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^        base = 16;$/;"	d
base	obj/user/httpd.asm	/^        base = 8;$/;"	d
base	obj/user/httpd.asm	/^    base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^			base = 8;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^			base = 8;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^			base = 8;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^			base = 8;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^			base = 8;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^			base = 8;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^			base = 8;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^			base = 8;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 16;$/;"	d
base	obj/user/testtime.asm	/^			base = 8;$/;"	d
base	obj/user/testtime.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/net/ns.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "testinput";$/;"	d
binaryname	obj/net/testoutput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "testoutput";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echosrv.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echotest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^	binaryname = "jhttpd";$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testtime.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot	inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
boundary	obj/kern/kernel.asm	/^	boundary = ROUNDUP(size, PGSIZE);$/;"	d
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon8	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/net/ns.asm	/^	buf = vbuf;$/;"	d
buf	obj/net/ns.asm	/^      buf = NULL;$/;"	d
buf	obj/net/ns.asm	/^      buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^      buf = sock->lastdata;$/;"	d
buf	obj/net/ns.asm	/^    buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^  buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/testinput.asm	/^	buf = vbuf;$/;"	d
buf	obj/net/testoutput.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/badsegment.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/breakpoint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/divzero.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/dumbfork.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echosrv.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echotest.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/evilhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/fairness.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultalloc.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultallocbad.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultbadhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultdie.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultevilhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultnostack.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultread.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultreadkernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultregs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwrite.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwritekernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/forktree.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/hello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/httpd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/idle.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpong.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpongs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primes.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sendpage.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/softint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spin.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/stresssched.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testbss.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testtime.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/yield.asm	/^	buf = vbuf;$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf_copy_len	obj/net/ns.asm	/^          buf_copy_len = len;$/;"	d
buf_copy_len	obj/net/ns.asm	/^      buf_copy_len = p->len - offset;$/;"	d
buflen	obj/net/ns.asm	/^      buflen = netbuf_len(sock->lastdata);$/;"	d
buflen	obj/net/ns.asm	/^    buflen = netbuf_len(buf);$/;"	d
bytes	obj/net/ns.asm	/^	    bytes = len - copied;$/;"	d
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/net/ns.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/ns.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/net/ns.asm	/^        c = *++cp;$/;"	d
c	obj/net/ns.asm	/^      c = *++cp;$/;"	d
c	obj/net/ns.asm	/^  c = *cp;$/;"	d
c	obj/net/testinput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/testinput.asm	/^        c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^      c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^  c = *cp;$/;"	d
c	obj/net/testoutput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^        c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^      c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^  c = *cp;$/;"	d
c	obj/user/echotest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echotest.asm	/^        c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^      c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^  c = *cp;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/user/httpd.asm	/^        c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^      c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^  c = *cp;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testtime.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cat	user/cat.c	/^cat(int f, char *s)$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/ns.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testinput.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testoutput.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echosrv.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echotest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/httpd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testtime.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/net/ns.asm	/^char *$/;"	l
char	obj/net/testinput.asm	/^char *$/;"	l
char	obj/net/testoutput.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/echosrv.asm	/^char *$/;"	l
char	obj/user/echotest.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/httpd.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/testtime.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child	obj/user/init.asm	/^	child = r;$/;"	d
child	obj/user/sh.asm	/^	child = r;$/;"	d
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f
chklen	obj/net/ns.asm	/^      chklen = chksum_len;$/;"	d
chklen	obj/net/ns.asm	/^    chklen = q->len;$/;"	d
chs_begin	inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc
chs_end	inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc
class	obj/kern/kernel.asm	/^		class = pci_class[PCI_CLASS(f->dev_class)];$/;"	d
clen	obj/net/ns.asm	/^  clen = pbuf_clen(p);$/;"	d
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	lib/fd.c	/^close(int fdnum)$/;"	f
close_all	lib/fd.c	/^close_all(void)$/;"	f
cmd	kern/working_e1000.h	/^    uint8_t cmd;$/;"	m	struct:tx_desc
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/ns.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testinput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testoutput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echosrv.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echotest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/httpd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testtime.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
code	obj/net/ns.asm	/^  code = *(((u8_t *)p->payload)+1);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback( (protocol == IPPROTO_UDPLITE) ?$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback(NETCONN_TCP, event_callback);$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_proto_and_callback(NETCONN_RAW, (u8_t)protocol, event_callback);$/;"	d
conn	obj/net/ns.asm	/^  conn = (struct netconn *)arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = memp_malloc(MEMP_NETCONN);$/;"	d
conn	obj/net/ns.asm	/^  conn = netconn_alloc(t, callback);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon8	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/net/ns.asm	/^const char *$/;"	l
const	obj/net/ns.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/ns.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testinput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testinput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testoutput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testoutput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/cat.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echosrv.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echosrv.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echotest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echotest.asm	/^const char *msg = "Hello world!\\n";$/;"	l
const	obj/user/echotest.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/httpd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/httpd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testtime.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testtime.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cont	obj/net/ns.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cont	obj/user/httpd.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cop	obj/net/ns.asm	/^    cop = last ? left : nfb * 8;$/;"	d
copy_needed	obj/net/ns.asm	/^          copy_needed = 1;$/;"	d
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
copylen	obj/net/ns.asm	/^      copylen = buflen;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = len;$/;"	d
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
count	obj/net/ns.asm	/^      count = pbuf_free(seg->p);$/;"	d
count	obj/net/ns.asm	/^  count = 0;$/;"	d
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
cseg	obj/net/ns.asm	/^                  cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^                cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^          cseg = pcb->ooseq;$/;"	d
cseg	obj/net/ns.asm	/^  cseg = memp_malloc(MEMP_TCP_SEG);$/;"	d
cso	kern/working_e1000.h	/^    uint16_t cso;$/;"	m	struct:rx_desc
cso	kern/working_e1000.h	/^    uint8_t cso;$/;"	m	struct:tx_desc
css	kern/working_e1000.h	/^    uint8_t css;$/;"	m	struct:tx_desc
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
cur_tc	obj/net/ns.asm	/^    cur_tc = NULL;$/;"	d
cur_tc	obj/net/ns.asm	/^    cur_tc = next_tc;$/;"	d
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/net/ns.asm	/^	d = dst;$/;"	d
d	obj/net/testinput.asm	/^	d = dst;$/;"	d
d	obj/net/testoutput.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/echosrv.asm	/^	d = dst;$/;"	d
d	obj/user/echotest.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/httpd.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
d	obj/user/testtime.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	obj/net/ns.asm	/^  data = (struct lwip_setgetsockopt_data*)arg;$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon10
dataptr	obj/net/ns.asm	/^  dataptr = (u8_t*)conn->write_msg->msg.w.dataptr + conn->write_offset;$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	kern/temp_e1000.c	6;"	d	file:
debug	kern/working_e1000.c	5;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^		default:$/;"	l
default	obj/net/ns.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^      default: \/* unrecognized socket type *\/$/;"	l
default	obj/net/ns.asm	/^      default:$/;"	l
default	obj/net/ns.asm	/^    default:$/;"	l
default	obj/net/ns.asm	/^   default:$/;"	l
default	obj/net/ns.asm	/^  default:$/;"	l
default	obj/net/testinput.asm	/^		default:$/;"	l
default	obj/net/testoutput.asm	/^		default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/cat.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echo.asm	/^		default:$/;"	l
default	obj/user/echosrv.asm	/^		default:$/;"	l
default	obj/user/echotest.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/httpd.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/lsfd.asm	/^		default:$/;"	l
default	obj/user/num.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/primespipe.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spawnhello.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testkbd.asm	/^		default:$/;"	l
default	obj/user/testpipe.asm	/^		default:$/;"	l
default	obj/user/testpiperace.asm	/^		default:$/;"	l
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
default	obj/user/testpteshare.asm	/^		default:$/;"	l
default	obj/user/testshell.asm	/^		default:$/;"	l
default	obj/user/testtime.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dest	obj/net/ns.asm	/^    dest = &(iphdr->dest);$/;"	d
dest	obj/net/ns.asm	/^    dest = &mcastaddr;$/;"	d
dest	obj/net/ns.asm	/^    dest = (struct eth_addr *)&ethbroadcast;$/;"	d
dest	obj/net/ns.asm	/^  dest = NULL;$/;"	d
dest	obj/net/ns.asm	/^  dest = ntohs(udphdr->dest);$/;"	d
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
dhcp	obj/net/ns.asm	/^    dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = netif->dhcp;$/;"	d
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest
done	obj/net/ns.asm	/^        done = 1;$/;"	d
done	obj/net/ns.asm	/^      done = 1;$/;"	d
done	obj/net/ns.asm	/^ done:$/;"	l
dpl	obj/kern/kernel.asm	/^	dpl: 0$/;"	l
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/ns.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testinput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testoutput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echosrv.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echotest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/httpd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testtime.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	lib/orig_fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e1000	kern/working_e1000.h	/^volatile uint32_t *e1000;$/;"	v
e1000addr	obj/kern/kernel.asm	/^	e1000addr = mmio_map_region(func->reg_base[0], func->reg_size[0]);$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
eaten	obj/net/ns.asm	/^          eaten = 1;$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = *(uint32_t*)ebp;$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
echolen	obj/user/echotest.asm	/^	echolen = strlen(msg);$/;"	d
eff_wnd	obj/net/ns.asm	/^          eff_wnd = LWIP_MIN(pcb->cwnd, pcb->snd_wnd);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	obj/kern/kernel.asm	/^		eip = *(uint32_t*)(ebp + 4);$/;"	d
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
empty	obj/net/ns.asm	/^      empty = i;$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
enum	obj/net/ns.asm	/^enum netconn_type$/;"	l
enum	obj/net/ns.asm	/^enum { thread_hash_size = 257 };$/;"	l
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_id	obj/kern/kernel.asm	/^		env_id = ENVX(next_env + i);$/;"	d
env_id	obj/net/ns.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/net/testinput.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/net/testoutput.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/user/forktree.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/user/pingpong.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/user/pingpongs.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/user/primes.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/user/primespipe.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/user/sendpage.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/user/sh.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/user/spin.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/user/stresssched.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/user/testfdsharing.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/user/testpipe.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/user/testpiperace.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/user/testpiperace2.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/user/testpteshare.asm	/^	env_id = sys_exofork();$/;"	d
env_id	obj/user/testshell.asm	/^	env_id = sys_exofork();$/;"	d
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/net/ns.asm	/^envid_t$/;"	l
envid_t	obj/net/testinput.asm	/^envid_t$/;"	l
envid_t	obj/net/testoutput.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/echosrv.asm	/^envid_t$/;"	l
envid_t	obj/user/echotest.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/httpd.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/testtime.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *) boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^				err = -err;$/;"	d
err	obj/net/ns.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^        err = EAFNOSUPPORT;$/;"	d
err	obj/net/ns.asm	/^        err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^        err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^        err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^      err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^      err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^    err = ip_output_if(q, src_ip, dst_ip, pcb->ttl, pcb->tos, IP_PROTO_UDP, netif);    $/;"	d
err	obj/net/ns.asm	/^    err = netconn_connect(sock->conn, &remote_addr, ntohs(remote_port));$/;"	d
err	obj/net/ns.asm	/^    err = netconn_disconnect(sock->conn);$/;"	d
err	obj/net/ns.asm	/^    err = netconn_send(sock->conn, &buf);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output_nagle(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_process(pcb);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_send_ctrl(pcb, TCP_FIN);$/;"	d
err	obj/net/ns.asm	/^    err = udp_bind(pcb, &pcb->local_ip, pcb->local_port);$/;"	d
err	obj/net/ns.asm	/^    err:$/;"	l
err	obj/net/ns.asm	/^  err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^  err = data.err;$/;"	d
err	obj/net/ns.asm	/^  err = ip_output_if (q, src_ip, ipaddr, pcb->ttl, pcb->tos, pcb->protocol, netif);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_bind(sock->conn, &local_addr, ntohs(local_port));$/;"	d
err	obj/net/ns.asm	/^  err = netconn_listen_with_backlog(sock->conn, backlog);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_peer(newconn, &naddr, &port);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_write(sock->conn, data, size, NETCONN_COPY | ((flags & MSG_MORE)?NETCONN_MORE:0));$/;"	d
err	obj/net/ns.asm	/^  err = tcp_close(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^  err = tcp_write(conn->pcb.tcp, dataptr, len, conn->write_msg->msg.w.apiflags);$/;"	d
err	obj/net/ns.asm	/^err:$/;"	l
err	obj/net/testinput.asm	/^				err = -err;$/;"	d
err	obj/net/testinput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testinput.asm	/^    err:$/;"	l
err	obj/net/testinput.asm	/^err:$/;"	l
err	obj/net/testoutput.asm	/^				err = -err;$/;"	d
err	obj/net/testoutput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testoutput.asm	/^    err:$/;"	l
err	obj/net/testoutput.asm	/^err:$/;"	l
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^    err:$/;"	l
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^    err:$/;"	l
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^    err:$/;"	l
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^    err:$/;"	l
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^    err:$/;"	l
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^    err:$/;"	l
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/echosrv.asm	/^				err = -err;$/;"	d
err	obj/user/echosrv.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echosrv.asm	/^    err:$/;"	l
err	obj/user/echosrv.asm	/^err:$/;"	l
err	obj/user/echotest.asm	/^				err = -err;$/;"	d
err	obj/user/echotest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echotest.asm	/^    err:$/;"	l
err	obj/user/echotest.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^    err:$/;"	l
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^    err:$/;"	l
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^    err:$/;"	l
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^    err:$/;"	l
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^    err:$/;"	l
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^    err:$/;"	l
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^    err:$/;"	l
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^    err:$/;"	l
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^    err:$/;"	l
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^    err:$/;"	l
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^    err:$/;"	l
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^    err:$/;"	l
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^    err:$/;"	l
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^    err:$/;"	l
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/httpd.asm	/^				err = -err;$/;"	d
err	obj/user/httpd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/httpd.asm	/^    err:$/;"	l
err	obj/user/httpd.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^    err:$/;"	l
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^    err:$/;"	l
err	obj/user/sendpage.asm	/^err:$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^    err:$/;"	l
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^    err:$/;"	l
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^    err:$/;"	l
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^    err:$/;"	l
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/testtime.asm	/^				err = -err;$/;"	d
err	obj/user/testtime.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testtime.asm	/^    err:$/;"	l
err	obj/user/testtime.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^    err:$/;"	l
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err1	obj/net/ns.asm	/^    err1:$/;"	l
err1	obj/net/testinput.asm	/^    err1:$/;"	l
err1	obj/net/testoutput.asm	/^    err1:$/;"	l
err1	obj/user/badsegment.asm	/^    err1:$/;"	l
err1	obj/user/breakpoint.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello2.asm	/^    err1:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err1	obj/user/divzero.asm	/^    err1:$/;"	l
err1	obj/user/dumbfork.asm	/^    err1:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err1	obj/user/echosrv.asm	/^    err1:$/;"	l
err1	obj/user/echotest.asm	/^    err1:$/;"	l
err1	obj/user/evilhello.asm	/^    err1:$/;"	l
err1	obj/user/fairness.asm	/^    err1:$/;"	l
err1	obj/user/faultalloc.asm	/^    err1:$/;"	l
err1	obj/user/faultallocbad.asm	/^    err1:$/;"	l
err1	obj/user/faultbadhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultdie.asm	/^    err1:$/;"	l
err1	obj/user/faultevilhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultnostack.asm	/^    err1:$/;"	l
err1	obj/user/faultread.asm	/^    err1:$/;"	l
err1	obj/user/faultreadkernel.asm	/^    err1:$/;"	l
err1	obj/user/faultregs.asm	/^    err1:$/;"	l
err1	obj/user/faultwrite.asm	/^    err1:$/;"	l
err1	obj/user/faultwritekernel.asm	/^    err1:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err1	obj/user/hello.asm	/^    err1:$/;"	l
err1	obj/user/httpd.asm	/^    err1:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err1	obj/user/pingpongs.asm	/^    err1:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err1	obj/user/sendpage.asm	/^    err1:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err1	obj/user/softint.asm	/^    err1:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err1	obj/user/spin.asm	/^    err1:$/;"	l
err1	obj/user/stresssched.asm	/^    err1:$/;"	l
err1	obj/user/testbss.asm	/^    err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err1	obj/user/testtime.asm	/^    err1:$/;"	l
err1	obj/user/yield.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err2	obj/net/ns.asm	/^    err2:$/;"	l
err2	obj/net/testinput.asm	/^    err2:$/;"	l
err2	obj/net/testoutput.asm	/^    err2:$/;"	l
err2	obj/user/badsegment.asm	/^    err2:$/;"	l
err2	obj/user/breakpoint.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello2.asm	/^    err2:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err2	obj/user/divzero.asm	/^    err2:$/;"	l
err2	obj/user/dumbfork.asm	/^    err2:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err2	obj/user/echosrv.asm	/^    err2:$/;"	l
err2	obj/user/echotest.asm	/^    err2:$/;"	l
err2	obj/user/evilhello.asm	/^    err2:$/;"	l
err2	obj/user/fairness.asm	/^    err2:$/;"	l
err2	obj/user/faultalloc.asm	/^    err2:$/;"	l
err2	obj/user/faultallocbad.asm	/^    err2:$/;"	l
err2	obj/user/faultbadhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultdie.asm	/^    err2:$/;"	l
err2	obj/user/faultevilhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultnostack.asm	/^    err2:$/;"	l
err2	obj/user/faultread.asm	/^    err2:$/;"	l
err2	obj/user/faultreadkernel.asm	/^    err2:$/;"	l
err2	obj/user/faultregs.asm	/^    err2:$/;"	l
err2	obj/user/faultwrite.asm	/^    err2:$/;"	l
err2	obj/user/faultwritekernel.asm	/^    err2:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err2	obj/user/hello.asm	/^    err2:$/;"	l
err2	obj/user/httpd.asm	/^    err2:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err2	obj/user/pingpongs.asm	/^    err2:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err2	obj/user/sendpage.asm	/^    err2:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err2	obj/user/softint.asm	/^    err2:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err2	obj/user/spin.asm	/^    err2:$/;"	l
err2	obj/user/stresssched.asm	/^    err2:$/;"	l
err2	obj/user/testbss.asm	/^    err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err2	obj/user/testtime.asm	/^    err2:$/;"	l
err2	obj/user/yield.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
err3	obj/net/ns.asm	/^    err3:$/;"	l
err3	obj/net/testinput.asm	/^    err3:$/;"	l
err3	obj/net/testoutput.asm	/^    err3:$/;"	l
err3	obj/user/badsegment.asm	/^    err3:$/;"	l
err3	obj/user/breakpoint.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello2.asm	/^    err3:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
err3	obj/user/divzero.asm	/^    err3:$/;"	l
err3	obj/user/dumbfork.asm	/^    err3:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
err3	obj/user/echosrv.asm	/^    err3:$/;"	l
err3	obj/user/echotest.asm	/^    err3:$/;"	l
err3	obj/user/evilhello.asm	/^    err3:$/;"	l
err3	obj/user/fairness.asm	/^    err3:$/;"	l
err3	obj/user/faultalloc.asm	/^    err3:$/;"	l
err3	obj/user/faultallocbad.asm	/^    err3:$/;"	l
err3	obj/user/faultbadhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultdie.asm	/^    err3:$/;"	l
err3	obj/user/faultevilhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultnostack.asm	/^    err3:$/;"	l
err3	obj/user/faultread.asm	/^    err3:$/;"	l
err3	obj/user/faultreadkernel.asm	/^    err3:$/;"	l
err3	obj/user/faultregs.asm	/^    err3:$/;"	l
err3	obj/user/faultwrite.asm	/^    err3:$/;"	l
err3	obj/user/faultwritekernel.asm	/^    err3:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
err3	obj/user/hello.asm	/^    err3:$/;"	l
err3	obj/user/httpd.asm	/^    err3:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
err3	obj/user/pingpongs.asm	/^    err3:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
err3	obj/user/sendpage.asm	/^    err3:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
err3	obj/user/softint.asm	/^    err3:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
err3	obj/user/spin.asm	/^    err3:$/;"	l
err3	obj/user/stresssched.asm	/^    err3:$/;"	l
err3	obj/user/testbss.asm	/^    err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
err3	obj/user/testtime.asm	/^    err3:$/;"	l
err3	obj/user/yield.asm	/^    err3:$/;"	l
err_t	obj/net/ns.asm	/^err_t $/;"	l
err_t	obj/net/ns.asm	/^err_t$/;"	l
errf	obj/net/ns.asm	/^    errf = pcb->errf;$/;"	d
errf_arg	obj/net/ns.asm	/^    errf_arg = pcb->callback_arg;$/;"	d
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
errs	kern/working_e1000.h	/^    uint8_t errs;$/;"	m	struct:rx_desc
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
etharp_cached_entry	obj/net/ns.asm	/^        etharp_cached_entry = i;$/;"	d
etharp_cached_entry	obj/net/ns.asm	/^  etharp_cached_entry = i;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^      ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : hdr->shwaddr.addr;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^  ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : ethdst_addr->addr;$/;"	d
ethhdr	obj/net/ns.asm	/^    ethhdr = p->payload;$/;"	d
exit	lib/exit.c	/^exit(void)$/;"	f
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extern	obj/net/ns.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testinput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testoutput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 20 12 00       	mov    $0x122000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 20 12 f0       	mov    $0xf0122000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 c7 00 00 00       	call   f0100105 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <test_backtrace>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	53                   	push   %ebx$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010004a	obj/kern/kernel.asm	/^f010004a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010004e	obj/kern/kernel.asm	/^f010004e:	c7 04 24 40 76 10 f0 	movl   $0xf0107640,(%esp)$/;"	l
f0100055	obj/kern/kernel.asm	/^f0100055:	e8 0e 40 00 00       	call   f0104068 <cprintf>$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	85 db                	test   %ebx,%ebx$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	7e 0d                	jle    f010006b <test_backtrace+0x2b>$/;"	l
f010005e	obj/kern/kernel.asm	/^f010005e:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0100061	obj/kern/kernel.asm	/^f0100061:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	e8 d7 ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f0100069	obj/kern/kernel.asm	/^f0100069:	eb 1c                	jmp    f0100087 <test_backtrace+0x47>$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	00 $/;"	l
f0100073	obj/kern/kernel.asm	/^f0100073:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010007a	obj/kern/kernel.asm	/^f010007a:	00 $/;"	l
f010007b	obj/kern/kernel.asm	/^f010007b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	e8 14 09 00 00       	call   f010099b <mon_backtrace>$/;"	l
f0100087	obj/kern/kernel.asm	/^f0100087:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	c7 04 24 5c 76 10 f0 	movl   $0xf010765c,(%esp)$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	e8 d1 3f 00 00       	call   f0104068 <cprintf>$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	83 c4 14             	add    $0x14,%esp$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	5b                   	pop    %ebx$/;"	l
f010009b	obj/kern/kernel.asm	/^f010009b:	5d                   	pop    %ebp$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c:	c3                   	ret    $/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d <_panic>:$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	55                   	push   %ebp$/;"	l
f010009e	obj/kern/kernel.asm	/^f010009e:	89 e5                	mov    %esp,%ebp$/;"	l
f01000a0	obj/kern/kernel.asm	/^f01000a0:	56                   	push   %esi$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	53                   	push   %ebx$/;"	l
f01000a2	obj/kern/kernel.asm	/^f01000a2:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01000a5	obj/kern/kernel.asm	/^f01000a5:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	83 3d 0c fd 2f f0 00 	cmpl   $0x0,0xf02ffd0c$/;"	l
f01000af	obj/kern/kernel.asm	/^f01000af:	75 46                	jne    f01000f7 <_panic+0x5a>$/;"	l
f01000b1	obj/kern/kernel.asm	/^f01000b1:	89 35 0c fd 2f f0    	mov    %esi,0xf02ffd0c$/;"	l
f01000b7	obj/kern/kernel.asm	/^f01000b7:	fa                   	cli    $/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	fc                   	cld    $/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000bc	obj/kern/kernel.asm	/^f01000bc:	e8 28 64 00 00       	call   f01064e9 <cpunum>$/;"	l
f01000c1	obj/kern/kernel.asm	/^f01000c1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01000c8	obj/kern/kernel.asm	/^f01000c8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01000cb	obj/kern/kernel.asm	/^f01000cb:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01000cf	obj/kern/kernel.asm	/^f01000cf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000d3	obj/kern/kernel.asm	/^f01000d3:	c7 04 24 d0 76 10 f0 	movl   $0xf01076d0,(%esp)$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	e8 89 3f 00 00       	call   f0104068 <cprintf>$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01000e3	obj/kern/kernel.asm	/^f01000e3:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01000e6	obj/kern/kernel.asm	/^f01000e6:	e8 4a 3f 00 00       	call   f0104035 <vcprintf>$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	c7 04 24 9f 88 10 f0 	movl   $0xf010889f,(%esp)$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	e8 71 3f 00 00       	call   f0104068 <cprintf>$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	e8 5b 09 00 00       	call   f0100a5e <monitor>$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103:	eb f2                	jmp    f01000f7 <_panic+0x5a>$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105 <i386_init>:$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	55                   	push   %ebp$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	89 e5                	mov    %esp,%ebp$/;"	l
f0100108	obj/kern/kernel.asm	/^f0100108:	53                   	push   %ebx$/;"	l
f0100109	obj/kern/kernel.asm	/^f0100109:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	b8 08 10 34 f0       	mov    $0xf0341008,%eax$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	2d c0 63 2b f0       	sub    $0xf02b63c0,%eax$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	00 $/;"	l
f0100122	obj/kern/kernel.asm	/^f0100122:	c7 04 24 c0 63 2b f0 	movl   $0xf02b63c0,(%esp)$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	e8 69 5d 00 00       	call   f0105e97 <memset>$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	e8 dc 05 00 00       	call   f010070f <cons_init>$/;"	l
f0100133	obj/kern/kernel.asm	/^f0100133:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	00 $/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	c7 04 24 77 76 10 f0 	movl   $0xf0107677,(%esp)$/;"	l
f0100142	obj/kern/kernel.asm	/^f0100142:	e8 21 3f 00 00       	call   f0104068 <cprintf>$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	e8 1f 14 00 00       	call   f010156b <mem_init>$/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	e8 b4 36 00 00       	call   f0103805 <env_init>$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	e8 f2 3f 00 00       	call   f0104148 <trap_init>$/;"	l
f0100156	obj/kern/kernel.asm	/^f0100156:	e8 7f 60 00 00       	call   f01061da <mp_init>$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	90                   	nop$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0100160	obj/kern/kernel.asm	/^f0100160:	e8 9f 63 00 00       	call   f0106504 <lapic_init>$/;"	l
f0100165	obj/kern/kernel.asm	/^f0100165:	e8 1b 3e 00 00       	call   f0103f85 <pic_init>$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	e8 cb 71 00 00       	call   f010733a <time_init>$/;"	l
f010016f	obj/kern/kernel.asm	/^f010016f:	90                   	nop$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	e8 97 71 00 00       	call   f010730c <pci_init>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	c7 04 24 60 44 12 f0 	movl   $0xf0124460,(%esp)$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	e8 e6 65 00 00       	call   f0106767 <spin_lock>$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	83 3d 14 fd 2f f0 07 	cmpl   $0x7,0xf02ffd14$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	77 24                	ja     f01001ae <i386_init+0xa9>$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f0100191	obj/kern/kernel.asm	/^f0100191:	00 $/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f0100199	obj/kern/kernel.asm	/^f0100199:	f0 $/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	c7 44 24 04 79 00 00 	movl   $0x79,0x4(%esp)$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	00 $/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	c7 04 24 92 76 10 f0 	movl   $0xf0107692,(%esp)$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	e8 ef fe ff ff       	call   f010009d <_panic>$/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	b8 12 61 10 f0       	mov    $0xf0106112,%eax$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	2d 98 60 10 f0       	sub    $0xf0106098,%eax$/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	c7 44 24 04 98 60 10 	movl   $0xf0106098,0x4(%esp)$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	f0 $/;"	l
f01001c4	obj/kern/kernel.asm	/^f01001c4:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f01001cb	obj/kern/kernel.asm	/^f01001cb:	e8 14 5d 00 00       	call   f0105ee4 <memmove>$/;"	l
f01001d0	obj/kern/kernel.asm	/^f01001d0:	bb 20 00 30 f0       	mov    $0xf0300020,%ebx$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	eb 4d                	jmp    f0100224 <i386_init+0x11f>$/;"	l
f01001d7	obj/kern/kernel.asm	/^f01001d7:	e8 0d 63 00 00       	call   f01064e9 <cpunum>$/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01001df	obj/kern/kernel.asm	/^f01001df:	05 20 00 30 f0       	add    $0xf0300020,%eax$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	39 c3                	cmp    %eax,%ebx$/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	74 39                	je     f0100221 <i386_init+0x11c>$/;"	l
f01001e8	obj/kern/kernel.asm	/^f01001e8:	89 d8                	mov    %ebx,%eax$/;"	l
f01001ea	obj/kern/kernel.asm	/^f01001ea:	2d 20 00 30 f0       	sub    $0xf0300020,%eax$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01001f2	obj/kern/kernel.asm	/^f01001f2:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f01001f8	obj/kern/kernel.asm	/^f01001f8:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	8d 80 00 90 30 f0    	lea    -0xfcf7000(%eax),%eax$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	a3 10 fd 2f f0       	mov    %eax,0xf02ffd10$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	00 $/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100214	obj/kern/kernel.asm	/^f0100214:	e8 3b 64 00 00       	call   f0106654 <lapic_startap>$/;"	l
f0100219	obj/kern/kernel.asm	/^f0100219:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	75 f8                	jne    f0100219 <i386_init+0x114>$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	83 c3 74             	add    $0x74,%ebx$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	6b 05 c4 03 30 f0 74 	imul   $0x74,0xf03003c4,%eax$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	05 20 00 30 f0       	add    $0xf0300020,%eax$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100232	obj/kern/kernel.asm	/^f0100232:	72 a3                	jb     f01001d7 <i386_init+0xd2>$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f010023b	obj/kern/kernel.asm	/^f010023b:	00 $/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	c7 04 24 7e dd 1d f0 	movl   $0xf01ddd7e,(%esp)$/;"	l
f0100243	obj/kern/kernel.asm	/^f0100243:	e8 bc 37 00 00       	call   f0103a04 <env_create>$/;"	l
f0100248	obj/kern/kernel.asm	/^f0100248:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	00 $/;"	l
f0100250	obj/kern/kernel.asm	/^f0100250:	c7 04 24 e5 89 23 f0 	movl   $0xf02389e5,(%esp)$/;"	l
f0100257	obj/kern/kernel.asm	/^f0100257:	e8 a8 37 00 00       	call   f0103a04 <env_create>$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	00 $/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264:	c7 04 24 cb e7 1f f0 	movl   $0xf01fe7cb,(%esp)$/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b:	e8 94 37 00 00       	call   f0103a04 <env_create>$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	e8 3e 04 00 00       	call   f01006b3 <kbd_intr>$/;"	l
f0100275	obj/kern/kernel.asm	/^f0100275:	e8 ec 47 00 00       	call   f0104a66 <sched_yield>$/;"	l
f010027a	obj/kern/kernel.asm	/^f010027a <mp_main>:$/;"	l
f010027a	obj/kern/kernel.asm	/^f010027a:	55                   	push   %ebp$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	89 e5                	mov    %esp,%ebp$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0100285	obj/kern/kernel.asm	/^f0100285:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	77 20                	ja     f01002ac <mp_main+0x32>$/;"	l
f010028c	obj/kern/kernel.asm	/^f010028c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	f0 $/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	00 $/;"	l
f01002a0	obj/kern/kernel.asm	/^f01002a0:	c7 04 24 92 76 10 f0 	movl   $0xf0107692,(%esp)$/;"	l
f01002a7	obj/kern/kernel.asm	/^f01002a7:	e8 f1 fd ff ff       	call   f010009d <_panic>$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	e8 30 62 00 00       	call   f01064e9 <cpunum>$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01002bd	obj/kern/kernel.asm	/^f01002bd:	c7 04 24 9e 76 10 f0 	movl   $0xf010769e,(%esp)$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	e8 9f 3d 00 00       	call   f0104068 <cprintf>$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	e8 36 62 00 00       	call   f0106504 <lapic_init>$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	e8 08 35 00 00       	call   f01037db <env_init_percpu>$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	e8 b8 3d 00 00       	call   f0104090 <trap_init_percpu>$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	e8 0c 62 00 00       	call   f01064e9 <cpunum>$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	81 c2 20 00 30 f0    	add    $0xf0300020,%edx$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	c7 04 24 60 44 12 f0 	movl   $0xf0124460,(%esp)$/;"	l
f01002f6	obj/kern/kernel.asm	/^f01002f6:	e8 6c 64 00 00       	call   f0106767 <spin_lock>$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	e8 66 47 00 00       	call   f0104a66 <sched_yield>$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300 <_warn>:$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	55                   	push   %ebp$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	89 e5                	mov    %esp,%ebp$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	53                   	push   %ebx$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010030a	obj/kern/kernel.asm	/^f010030a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100314	obj/kern/kernel.asm	/^f0100314:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100318	obj/kern/kernel.asm	/^f0100318:	c7 04 24 b4 76 10 f0 	movl   $0xf01076b4,(%esp)$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	e8 44 3d 00 00       	call   f0104068 <cprintf>$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	e8 02 3d 00 00       	call   f0104035 <vcprintf>$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	c7 04 24 9f 88 10 f0 	movl   $0xf010889f,(%esp)$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	e8 29 3d 00 00       	call   f0104068 <cprintf>$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	5b                   	pop    %ebx$/;"	l
f0100343	obj/kern/kernel.asm	/^f0100343:	5d                   	pop    %ebp$/;"	l
f0100344	obj/kern/kernel.asm	/^f0100344:	c3                   	ret    $/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	66 90                	xchg   %ax,%ax$/;"	l
f0100347	obj/kern/kernel.asm	/^f0100347:	66 90                	xchg   %ax,%ax$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	66 90                	xchg   %ax,%ax$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	66 90                	xchg   %ax,%ax$/;"	l
f010034d	obj/kern/kernel.asm	/^f010034d:	66 90                	xchg   %ax,%ax$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	90                   	nop$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350 <serial_proc_data>:$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	55                   	push   %ebp$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	89 e5                	mov    %esp,%ebp$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	ec                   	in     (%dx),%al$/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	a8 01                	test   $0x1,%al$/;"	l
f010035b	obj/kern/kernel.asm	/^f010035b:	74 08                	je     f0100365 <serial_proc_data+0x15>$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	b2 f8                	mov    $0xf8,%dl$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	ec                   	in     (%dx),%al$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	eb 05                	jmp    f010036a <serial_proc_data+0x1a>$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	5d                   	pop    %ebp$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	c3                   	ret    $/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c <cons_intr>:$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	55                   	push   %ebp$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	89 e5                	mov    %esp,%ebp$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	53                   	push   %ebx$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	89 c3                	mov    %eax,%ebx$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	eb 2a                	jmp    f01003a1 <cons_intr+0x35>$/;"	l
f0100377	obj/kern/kernel.asm	/^f0100377:	85 d2                	test   %edx,%edx$/;"	l
f0100379	obj/kern/kernel.asm	/^f0100379:	74 26                	je     f01003a1 <cons_intr+0x35>$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	a1 24 72 2b f0       	mov    0xf02b7224,%eax$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	89 0d 24 72 2b f0    	mov    %ecx,0xf02b7224$/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	88 90 20 70 2b f0    	mov    %dl,-0xfd48fe0(%eax)$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	75 0a                	jne    f01003a1 <cons_intr+0x35>$/;"	l
f0100397	obj/kern/kernel.asm	/^f0100397:	c7 05 24 72 2b f0 00 	movl   $0x0,0xf02b7224$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	00 00 00 $/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	ff d3                	call   *%ebx$/;"	l
f01003a3	obj/kern/kernel.asm	/^f01003a3:	89 c2                	mov    %eax,%edx$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01003a8	obj/kern/kernel.asm	/^f01003a8:	75 cd                	jne    f0100377 <cons_intr+0xb>$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	83 c4 04             	add    $0x4,%esp$/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	5b                   	pop    %ebx$/;"	l
f01003ae	obj/kern/kernel.asm	/^f01003ae:	5d                   	pop    %ebp$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	c3                   	ret    $/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0 <kbd_proc_data>:$/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01003b5	obj/kern/kernel.asm	/^f01003b5:	ec                   	in     (%dx),%al$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	a8 01                	test   $0x1,%al$/;"	l
f01003b8	obj/kern/kernel.asm	/^f01003b8:	0f 84 ef 00 00 00    	je     f01004ad <kbd_proc_data+0xfd>$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	b2 60                	mov    $0x60,%dl$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	ec                   	in     (%dx),%al$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	89 c2                	mov    %eax,%edx$/;"	l
f01003c3	obj/kern/kernel.asm	/^f01003c3:	3c e0                	cmp    $0xe0,%al$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	75 0d                	jne    f01003d4 <kbd_proc_data+0x24>$/;"	l
f01003c7	obj/kern/kernel.asm	/^f01003c7:	83 0d 00 70 2b f0 40 	orl    $0x40,0xf02b7000$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	c3                   	ret    $/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4:	55                   	push   %ebp$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	53                   	push   %ebx$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01003db	obj/kern/kernel.asm	/^f01003db:	84 c0                	test   %al,%al$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	79 37                	jns    f0100416 <kbd_proc_data+0x66>$/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	8b 0d 00 70 2b f0    	mov    0xf02b7000,%ecx$/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5:	89 cb                	mov    %ecx,%ebx$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	83 e3 40             	and    $0x40,%ebx$/;"	l
f01003ea	obj/kern/kernel.asm	/^f01003ea:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	85 db                	test   %ebx,%ebx$/;"	l
f01003ef	obj/kern/kernel.asm	/^f01003ef:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	0f b6 82 a0 78 10 f0 	movzbl -0xfef8760(%edx),%eax$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	83 c8 40             	or     $0x40,%eax$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	f7 d0                	not    %eax$/;"	l
f0100404	obj/kern/kernel.asm	/^f0100404:	21 c1                	and    %eax,%ecx$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	89 0d 00 70 2b f0    	mov    %ecx,0xf02b7000$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	e9 9d 00 00 00       	jmp    f01004b3 <kbd_proc_data+0x103>$/;"	l
f0100416	obj/kern/kernel.asm	/^f0100416:	8b 0d 00 70 2b f0    	mov    0xf02b7000,%ecx$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	f6 c1 40             	test   $0x40,%cl$/;"	l
f010041f	obj/kern/kernel.asm	/^f010041f:	74 0e                	je     f010042f <kbd_proc_data+0x7f>$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100424	obj/kern/kernel.asm	/^f0100424:	89 c2                	mov    %eax,%edx$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	89 0d 00 70 2b f0    	mov    %ecx,0xf02b7000$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	0f b6 82 a0 78 10 f0 	movzbl -0xfef8760(%edx),%eax$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	0b 05 00 70 2b f0    	or     0xf02b7000,%eax$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	0f b6 8a a0 77 10 f0 	movzbl -0xfef8860(%edx),%ecx$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	31 c8                	xor    %ecx,%eax$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	a3 00 70 2b f0       	mov    %eax,0xf02b7000$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	89 c1                	mov    %eax,%ecx$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	8b 0c 8d 80 77 10 f0 	mov    -0xfef8880(,%ecx,4),%ecx$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	a8 08                	test   $0x8,%al$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	74 1b                	je     f010047f <kbd_proc_data+0xcf>$/;"	l
f0100464	obj/kern/kernel.asm	/^f0100464:	89 da                	mov    %ebx,%edx$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f010046c	obj/kern/kernel.asm	/^f010046c:	77 05                	ja     f0100473 <kbd_proc_data+0xc3>$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	eb 0c                	jmp    f010047f <kbd_proc_data+0xcf>$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	f7 d0                	not    %eax$/;"	l
f0100481	obj/kern/kernel.asm	/^f0100481:	89 c2                	mov    %eax,%edx$/;"	l
f0100483	obj/kern/kernel.asm	/^f0100483:	89 d8                	mov    %ebx,%eax$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	f6 c2 06             	test   $0x6,%dl$/;"	l
f0100488	obj/kern/kernel.asm	/^f0100488:	75 29                	jne    f01004b3 <kbd_proc_data+0x103>$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	75 21                	jne    f01004b3 <kbd_proc_data+0x103>$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	c7 04 24 3c 77 10 f0 	movl   $0xf010773c,(%esp)$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	e8 ca 3b 00 00       	call   f0104068 <cprintf>$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	ee                   	out    %al,(%dx)$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	89 d8                	mov    %ebx,%eax$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	eb 06                	jmp    f01004b3 <kbd_proc_data+0x103>$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01004b2	obj/kern/kernel.asm	/^f01004b2:	c3                   	ret    $/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	83 c4 14             	add    $0x14,%esp$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	5b                   	pop    %ebx$/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	5d                   	pop    %ebp$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	c3                   	ret    $/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9 <cons_putc>:$/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9:	55                   	push   %ebp$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	89 e5                	mov    %esp,%ebp$/;"	l
f01004bc	obj/kern/kernel.asm	/^f01004bc:	57                   	push   %edi$/;"	l
f01004bd	obj/kern/kernel.asm	/^f01004bd:	56                   	push   %esi$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	53                   	push   %ebx$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	89 c7                	mov    %eax,%edi$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01004d3	obj/kern/kernel.asm	/^f01004d3:	eb 06                	jmp    f01004db <cons_putc+0x22>$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	89 ca                	mov    %ecx,%edx$/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	ec                   	in     (%dx),%al$/;"	l
f01004d8	obj/kern/kernel.asm	/^f01004d8:	ec                   	in     (%dx),%al$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	ec                   	in     (%dx),%al$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	ec                   	in     (%dx),%al$/;"	l
f01004db	obj/kern/kernel.asm	/^f01004db:	89 f2                	mov    %esi,%edx$/;"	l
f01004dd	obj/kern/kernel.asm	/^f01004dd:	ec                   	in     (%dx),%al$/;"	l
f01004de	obj/kern/kernel.asm	/^f01004de:	a8 20                	test   $0x20,%al$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	75 05                	jne    f01004e7 <cons_putc+0x2e>$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	75 ee                	jne    f01004d5 <cons_putc+0x1c>$/;"	l
f01004e7	obj/kern/kernel.asm	/^f01004e7:	89 f8                	mov    %edi,%eax$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01004ef	obj/kern/kernel.asm	/^f01004ef:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	ee                   	out    %al,(%dx)$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	eb 06                	jmp    f010050c <cons_putc+0x53>$/;"	l
f0100506	obj/kern/kernel.asm	/^f0100506:	89 ca                	mov    %ecx,%edx$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	ec                   	in     (%dx),%al$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	ec                   	in     (%dx),%al$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	ec                   	in     (%dx),%al$/;"	l
f010050b	obj/kern/kernel.asm	/^f010050b:	ec                   	in     (%dx),%al$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	89 f2                	mov    %esi,%edx$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	ec                   	in     (%dx),%al$/;"	l
f010050f	obj/kern/kernel.asm	/^f010050f:	84 c0                	test   %al,%al$/;"	l
f0100511	obj/kern/kernel.asm	/^f0100511:	78 05                	js     f0100518 <cons_putc+0x5f>$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100516	obj/kern/kernel.asm	/^f0100516:	75 ee                	jne    f0100506 <cons_putc+0x4d>$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
f0100521	obj/kern/kernel.asm	/^f0100521:	ee                   	out    %al,(%dx)$/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	b2 7a                	mov    $0x7a,%dl$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	ee                   	out    %al,(%dx)$/;"	l
f010052a	obj/kern/kernel.asm	/^f010052a:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f010052f	obj/kern/kernel.asm	/^f010052f:	ee                   	out    %al,(%dx)$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	89 fa                	mov    %edi,%edx$/;"	l
f0100532	obj/kern/kernel.asm	/^f0100532:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	89 f8                	mov    %edi,%eax$/;"	l
f010053a	obj/kern/kernel.asm	/^f010053a:	80 cc 07             	or     $0x7,%ah$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	85 d2                	test   %edx,%edx$/;"	l
f010053f	obj/kern/kernel.asm	/^f010053f:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	89 f8                	mov    %edi,%eax$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a:	74 76                	je     f01005c2 <cons_putc+0x109>$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010054f	obj/kern/kernel.asm	/^f010054f:	7f 0a                	jg     f010055b <cons_putc+0xa2>$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100554	obj/kern/kernel.asm	/^f0100554:	74 16                	je     f010056c <cons_putc+0xb3>$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	e9 9b 00 00 00       	jmp    f01005f6 <cons_putc+0x13d>$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010055e	obj/kern/kernel.asm	/^f010055e:	66 90                	xchg   %ax,%ax$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	74 3a                	je     f010059c <cons_putc+0xe3>$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	74 3d                	je     f01005a4 <cons_putc+0xeb>$/;"	l
f0100567	obj/kern/kernel.asm	/^f0100567:	e9 8a 00 00 00       	jmp    f01005f6 <cons_putc+0x13d>$/;"	l
f010056c	obj/kern/kernel.asm	/^f010056c:	0f b7 05 28 72 2b f0 	movzwl 0xf02b7228,%eax$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	66 85 c0             	test   %ax,%ax$/;"	l
f0100576	obj/kern/kernel.asm	/^f0100576:	0f 84 e5 00 00 00    	je     f0100661 <cons_putc+0x1a8>$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010057f	obj/kern/kernel.asm	/^f010057f:	66 a3 28 72 2b f0    	mov    %ax,0xf02b7228$/;"	l
f0100585	obj/kern/kernel.asm	/^f0100585:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	83 cf 20             	or     $0x20,%edi$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	8b 15 2c 72 2b f0    	mov    0xf02b722c,%edx$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f010059a	obj/kern/kernel.asm	/^f010059a:	eb 78                	jmp    f0100614 <cons_putc+0x15b>$/;"	l
f010059c	obj/kern/kernel.asm	/^f010059c:	66 83 05 28 72 2b f0 	addw   $0x50,0xf02b7228$/;"	l
f01005a3	obj/kern/kernel.asm	/^f01005a3:	50 $/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	0f b7 05 28 72 2b f0 	movzwl 0xf02b7228,%eax$/;"	l
f01005ab	obj/kern/kernel.asm	/^f01005ab:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01005ba	obj/kern/kernel.asm	/^f01005ba:	66 a3 28 72 2b f0    	mov    %ax,0xf02b7228$/;"	l
f01005c0	obj/kern/kernel.asm	/^f01005c0:	eb 52                	jmp    f0100614 <cons_putc+0x15b>$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005c7	obj/kern/kernel.asm	/^f01005c7:	e8 ed fe ff ff       	call   f01004b9 <cons_putc>$/;"	l
f01005cc	obj/kern/kernel.asm	/^f01005cc:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005d1	obj/kern/kernel.asm	/^f01005d1:	e8 e3 fe ff ff       	call   f01004b9 <cons_putc>$/;"	l
f01005d6	obj/kern/kernel.asm	/^f01005d6:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005db	obj/kern/kernel.asm	/^f01005db:	e8 d9 fe ff ff       	call   f01004b9 <cons_putc>$/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	e8 cf fe ff ff       	call   f01004b9 <cons_putc>$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005ef	obj/kern/kernel.asm	/^f01005ef:	e8 c5 fe ff ff       	call   f01004b9 <cons_putc>$/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4:	eb 1e                	jmp    f0100614 <cons_putc+0x15b>$/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	0f b7 05 28 72 2b f0 	movzwl 0xf02b7228,%eax$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	66 89 15 28 72 2b f0 	mov    %dx,0xf02b7228$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010060a	obj/kern/kernel.asm	/^f010060a:	8b 15 2c 72 2b f0    	mov    0xf02b722c,%edx$/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	66 81 3d 28 72 2b f0 	cmpw   $0x7cf,0xf02b7228$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	cf 07 $/;"	l
f010061d	obj/kern/kernel.asm	/^f010061d:	76 42                	jbe    f0100661 <cons_putc+0x1a8>$/;"	l
f010061f	obj/kern/kernel.asm	/^f010061f:	a1 2c 72 2b f0       	mov    0xf02b722c,%eax$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	00 $/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100639	obj/kern/kernel.asm	/^f0100639:	e8 a6 58 00 00       	call   f0105ee4 <memmove>$/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	8b 15 2c 72 2b f0    	mov    0xf02b722c,%edx$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	75 f0                	jne    f0100649 <cons_putc+0x190>$/;"	l
f0100659	obj/kern/kernel.asm	/^f0100659:	66 83 2d 28 72 2b f0 	subw   $0x50,0xf02b7228$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	50 $/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	8b 0d 30 72 2b f0    	mov    0xf02b7230,%ecx$/;"	l
f0100667	obj/kern/kernel.asm	/^f0100667:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c:	89 ca                	mov    %ecx,%edx$/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	ee                   	out    %al,(%dx)$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	0f b7 1d 28 72 2b f0 	movzwl 0xf02b7228,%ebx$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100679	obj/kern/kernel.asm	/^f0100679:	89 d8                	mov    %ebx,%eax$/;"	l
f010067b	obj/kern/kernel.asm	/^f010067b:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	89 f2                	mov    %esi,%edx$/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	ee                   	out    %al,(%dx)$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	89 ca                	mov    %ecx,%edx$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	ee                   	out    %al,(%dx)$/;"	l
f010068a	obj/kern/kernel.asm	/^f010068a:	89 d8                	mov    %ebx,%eax$/;"	l
f010068c	obj/kern/kernel.asm	/^f010068c:	89 f2                	mov    %esi,%edx$/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	ee                   	out    %al,(%dx)$/;"	l
f010068f	obj/kern/kernel.asm	/^f010068f:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	5b                   	pop    %ebx$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	5e                   	pop    %esi$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	5f                   	pop    %edi$/;"	l
f0100695	obj/kern/kernel.asm	/^f0100695:	5d                   	pop    %ebp$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	c3                   	ret    $/;"	l
f0100697	obj/kern/kernel.asm	/^f0100697 <serial_intr>:$/;"	l
f0100697	obj/kern/kernel.asm	/^f0100697:	80 3d 34 72 2b f0 00 	cmpb   $0x0,0xf02b7234$/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	74 11                	je     f01006b1 <serial_intr+0x1a>$/;"	l
f01006a0	obj/kern/kernel.asm	/^f01006a0:	55                   	push   %ebp$/;"	l
f01006a1	obj/kern/kernel.asm	/^f01006a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	b8 50 03 10 f0       	mov    $0xf0100350,%eax$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	e8 bc fc ff ff       	call   f010036c <cons_intr>$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	c9                   	leave  $/;"	l
f01006b1	obj/kern/kernel.asm	/^f01006b1:	f3 c3                	repz ret $/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3 <kbd_intr>:$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	55                   	push   %ebp$/;"	l
f01006b4	obj/kern/kernel.asm	/^f01006b4:	89 e5                	mov    %esp,%ebp$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	b8 b0 03 10 f0       	mov    $0xf01003b0,%eax$/;"	l
f01006be	obj/kern/kernel.asm	/^f01006be:	e8 a9 fc ff ff       	call   f010036c <cons_intr>$/;"	l
f01006c3	obj/kern/kernel.asm	/^f01006c3:	c9                   	leave  $/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	c3                   	ret    $/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5 <cons_getc>:$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	55                   	push   %ebp$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006cb	obj/kern/kernel.asm	/^f01006cb:	e8 c7 ff ff ff       	call   f0100697 <serial_intr>$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	e8 de ff ff ff       	call   f01006b3 <kbd_intr>$/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	a1 20 72 2b f0       	mov    0xf02b7220,%eax$/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da:	3b 05 24 72 2b f0    	cmp    0xf02b7224,%eax$/;"	l
f01006e0	obj/kern/kernel.asm	/^f01006e0:	74 26                	je     f0100708 <cons_getc+0x43>$/;"	l
f01006e2	obj/kern/kernel.asm	/^f01006e2:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01006e5	obj/kern/kernel.asm	/^f01006e5:	89 15 20 72 2b f0    	mov    %edx,0xf02b7220$/;"	l
f01006eb	obj/kern/kernel.asm	/^f01006eb:	0f b6 88 20 70 2b f0 	movzbl -0xfd48fe0(%eax),%ecx$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	89 c8                	mov    %ecx,%eax$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	75 11                	jne    f010070d <cons_getc+0x48>$/;"	l
f01006fc	obj/kern/kernel.asm	/^f01006fc:	c7 05 20 72 2b f0 00 	movl   $0x0,0xf02b7220$/;"	l
f0100703	obj/kern/kernel.asm	/^f0100703:	00 00 00 $/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	eb 05                	jmp    f010070d <cons_getc+0x48>$/;"	l
f0100708	obj/kern/kernel.asm	/^f0100708:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	c9                   	leave  $/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	c3                   	ret    $/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f <cons_init>:$/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f:	55                   	push   %ebp$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	89 e5                	mov    %esp,%ebp$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	57                   	push   %edi$/;"	l
f0100713	obj/kern/kernel.asm	/^f0100713:	56                   	push   %esi$/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714:	53                   	push   %ebx$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	5a a5 $/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100733	obj/kern/kernel.asm	/^f0100733:	74 11                	je     f0100746 <cons_init+0x37>$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	c7 05 30 72 2b f0 b4 	movl   $0x3b4,0xf02b7230$/;"	l
f010073c	obj/kern/kernel.asm	/^f010073c:	03 00 00 $/;"	l
f010073f	obj/kern/kernel.asm	/^f010073f:	bf 00 00 0b f0       	mov    $0xf00b0000,%edi$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	eb 16                	jmp    f010075c <cons_init+0x4d>$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f010074d	obj/kern/kernel.asm	/^f010074d:	c7 05 30 72 2b f0 d4 	movl   $0x3d4,0xf02b7230$/;"	l
f0100754	obj/kern/kernel.asm	/^f0100754:	03 00 00 $/;"	l
f0100757	obj/kern/kernel.asm	/^f0100757:	bf 00 80 0b f0       	mov    $0xf00b8000,%edi$/;"	l
f010075c	obj/kern/kernel.asm	/^f010075c:	8b 0d 30 72 2b f0    	mov    0xf02b7230,%ecx$/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	89 ca                	mov    %ecx,%edx$/;"	l
f0100769	obj/kern/kernel.asm	/^f0100769:	ee                   	out    %al,(%dx)$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	89 da                	mov    %ebx,%edx$/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	ec                   	in     (%dx),%al$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	0f b6 f0             	movzbl %al,%esi$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	89 ca                	mov    %ecx,%edx$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	ee                   	out    %al,(%dx)$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	89 da                	mov    %ebx,%edx$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	ec                   	in     (%dx),%al$/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781:	89 3d 2c 72 2b f0    	mov    %edi,0xf02b722c$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	09 de                	or     %ebx,%esi$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	66 89 35 28 72 2b f0 	mov    %si,0xf02b7228$/;"	l
f0100793	obj/kern/kernel.asm	/^f0100793:	e8 1b ff ff ff       	call   f01006b3 <kbd_intr>$/;"	l
f0100798	obj/kern/kernel.asm	/^f0100798:	0f b7 05 a8 43 12 f0 	movzwl 0xf01243a8,%eax$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01007a7	obj/kern/kernel.asm	/^f01007a7:	e8 6a 37 00 00       	call   f0103f16 <irq_setmask_8259A>$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	89 f2                	mov    %esi,%edx$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	ee                   	out    %al,(%dx)$/;"	l
f01007b9	obj/kern/kernel.asm	/^f01007b9:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01007bb	obj/kern/kernel.asm	/^f01007bb:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f01007c0	obj/kern/kernel.asm	/^f01007c0:	ee                   	out    %al,(%dx)$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	89 da                	mov    %ebx,%edx$/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	ee                   	out    %al,(%dx)$/;"	l
f01007ce	obj/kern/kernel.asm	/^f01007ce:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	ee                   	out    %al,(%dx)$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	ee                   	out    %al,(%dx)$/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	b2 fc                	mov    $0xfc,%dl$/;"	l
f01007e0	obj/kern/kernel.asm	/^f01007e0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	ee                   	out    %al,(%dx)$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	ee                   	out    %al,(%dx)$/;"	l
f01007ee	obj/kern/kernel.asm	/^f01007ee:	b2 fd                	mov    $0xfd,%dl$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	ec                   	in     (%dx),%al$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	3c ff                	cmp    $0xff,%al$/;"	l
f01007f3	obj/kern/kernel.asm	/^f01007f3:	0f 95 c1             	setne  %cl$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	88 0d 34 72 2b f0    	mov    %cl,0xf02b7234$/;"	l
f01007fc	obj/kern/kernel.asm	/^f01007fc:	89 f2                	mov    %esi,%edx$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	ec                   	in     (%dx),%al$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	89 da                	mov    %ebx,%edx$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	ec                   	in     (%dx),%al$/;"	l
f0100802	obj/kern/kernel.asm	/^f0100802:	84 c9                	test   %cl,%cl$/;"	l
f0100804	obj/kern/kernel.asm	/^f0100804:	74 1d                	je     f0100823 <cons_init+0x114>$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	0f b7 05 a8 43 12 f0 	movzwl 0xf01243a8,%eax$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	e8 fc 36 00 00       	call   f0103f16 <irq_setmask_8259A>$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	80 3d 34 72 2b f0 00 	cmpb   $0x0,0xf02b7234$/;"	l
f0100821	obj/kern/kernel.asm	/^f0100821:	75 0c                	jne    f010082f <cons_init+0x120>$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	c7 04 24 48 77 10 f0 	movl   $0xf0107748,(%esp)$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	e8 39 38 00 00       	call   f0104068 <cprintf>$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100832	obj/kern/kernel.asm	/^f0100832:	5b                   	pop    %ebx$/;"	l
f0100833	obj/kern/kernel.asm	/^f0100833:	5e                   	pop    %esi$/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834:	5f                   	pop    %edi$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	5d                   	pop    %ebp$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	c3                   	ret    $/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837 <cputchar>:$/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	55                   	push   %ebp$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	89 e5                	mov    %esp,%ebp$/;"	l
f010083a	obj/kern/kernel.asm	/^f010083a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100840	obj/kern/kernel.asm	/^f0100840:	e8 74 fc ff ff       	call   f01004b9 <cons_putc>$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	c9                   	leave  $/;"	l
f0100846	obj/kern/kernel.asm	/^f0100846:	c3                   	ret    $/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847 <getchar>:$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	55                   	push   %ebp$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	89 e5                	mov    %esp,%ebp$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010084d	obj/kern/kernel.asm	/^f010084d:	e8 73 fe ff ff       	call   f01006c5 <cons_getc>$/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	85 c0                	test   %eax,%eax$/;"	l
f0100854	obj/kern/kernel.asm	/^f0100854:	74 f7                	je     f010084d <getchar+0x6>$/;"	l
f0100856	obj/kern/kernel.asm	/^f0100856:	c9                   	leave  $/;"	l
f0100857	obj/kern/kernel.asm	/^f0100857:	c3                   	ret    $/;"	l
f0100858	obj/kern/kernel.asm	/^f0100858 <iscons>:$/;"	l
f0100858	obj/kern/kernel.asm	/^f0100858:	55                   	push   %ebp$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	89 e5                	mov    %esp,%ebp$/;"	l
f010085b	obj/kern/kernel.asm	/^f010085b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	5d                   	pop    %ebp$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	c3                   	ret    $/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	66 90                	xchg   %ax,%ax$/;"	l
f0100864	obj/kern/kernel.asm	/^f0100864:	66 90                	xchg   %ax,%ax$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	66 90                	xchg   %ax,%ax$/;"	l
f0100868	obj/kern/kernel.asm	/^f0100868:	66 90                	xchg   %ax,%ax$/;"	l
f010086a	obj/kern/kernel.asm	/^f010086a:	66 90                	xchg   %ax,%ax$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	66 90                	xchg   %ax,%ax$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	66 90                	xchg   %ax,%ax$/;"	l
f0100870	obj/kern/kernel.asm	/^f0100870 <mon_help>:$/;"	l
f0100870	obj/kern/kernel.asm	/^f0100870:	55                   	push   %ebp$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	89 e5                	mov    %esp,%ebp$/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	c7 44 24 08 a0 79 10 	movl   $0xf01079a0,0x8(%esp)$/;"	l
f010087d	obj/kern/kernel.asm	/^f010087d:	f0 $/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	c7 44 24 04 be 79 10 	movl   $0xf01079be,0x4(%esp)$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	f0 $/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	c7 04 24 c3 79 10 f0 	movl   $0xf01079c3,(%esp)$/;"	l
f010088d	obj/kern/kernel.asm	/^f010088d:	e8 d6 37 00 00       	call   f0104068 <cprintf>$/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	c7 44 24 08 5c 7a 10 	movl   $0xf0107a5c,0x8(%esp)$/;"	l
f0100899	obj/kern/kernel.asm	/^f0100899:	f0 $/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	c7 44 24 04 cc 79 10 	movl   $0xf01079cc,0x4(%esp)$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	f0 $/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	c7 04 24 c3 79 10 f0 	movl   $0xf01079c3,(%esp)$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	e8 ba 37 00 00       	call   f0104068 <cprintf>$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	c7 44 24 08 84 7a 10 	movl   $0xf0107a84,0x8(%esp)$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	f0 $/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	c7 44 24 04 d5 79 10 	movl   $0xf01079d5,0x4(%esp)$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	f0 $/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	c7 04 24 c3 79 10 f0 	movl   $0xf01079c3,(%esp)$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	e8 9e 37 00 00       	call   f0104068 <cprintf>$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	c9                   	leave  $/;"	l
f01008d0	obj/kern/kernel.asm	/^f01008d0:	c3                   	ret    $/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1 <mon_kerninfo>:$/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1:	55                   	push   %ebp$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	89 e5                	mov    %esp,%ebp$/;"	l
f01008d4	obj/kern/kernel.asm	/^f01008d4:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	c7 04 24 df 79 10 f0 	movl   $0xf01079df,(%esp)$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	e8 85 37 00 00       	call   f0104068 <cprintf>$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f01008ea	obj/kern/kernel.asm	/^f01008ea:	00 $/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	c7 04 24 ac 7a 10 f0 	movl   $0xf0107aac,(%esp)$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	e8 71 37 00 00       	call   f0104068 <cprintf>$/;"	l
f01008f7	obj/kern/kernel.asm	/^f01008f7:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f01008fe	obj/kern/kernel.asm	/^f01008fe:	00 $/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	f0 $/;"	l
f0100907	obj/kern/kernel.asm	/^f0100907:	c7 04 24 d4 7a 10 f0 	movl   $0xf0107ad4,(%esp)$/;"	l
f010090e	obj/kern/kernel.asm	/^f010090e:	e8 55 37 00 00       	call   f0104068 <cprintf>$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	c7 44 24 08 27 76 10 	movl   $0x107627,0x8(%esp)$/;"	l
f010091a	obj/kern/kernel.asm	/^f010091a:	00 $/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	c7 44 24 04 27 76 10 	movl   $0xf0107627,0x4(%esp)$/;"	l
f0100922	obj/kern/kernel.asm	/^f0100922:	f0 $/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	c7 04 24 f8 7a 10 f0 	movl   $0xf0107af8,(%esp)$/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	e8 39 37 00 00       	call   f0104068 <cprintf>$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	c7 44 24 08 c0 63 2b 	movl   $0x2b63c0,0x8(%esp)$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	00 $/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	c7 44 24 04 c0 63 2b 	movl   $0xf02b63c0,0x4(%esp)$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	f0 $/;"	l
f010093f	obj/kern/kernel.asm	/^f010093f:	c7 04 24 1c 7b 10 f0 	movl   $0xf0107b1c,(%esp)$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	e8 1d 37 00 00       	call   f0104068 <cprintf>$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	c7 44 24 08 08 10 34 	movl   $0x341008,0x8(%esp)$/;"	l
f0100952	obj/kern/kernel.asm	/^f0100952:	00 $/;"	l
f0100953	obj/kern/kernel.asm	/^f0100953:	c7 44 24 04 08 10 34 	movl   $0xf0341008,0x4(%esp)$/;"	l
f010095a	obj/kern/kernel.asm	/^f010095a:	f0 $/;"	l
f010095b	obj/kern/kernel.asm	/^f010095b:	c7 04 24 40 7b 10 f0 	movl   $0xf0107b40,(%esp)$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	e8 01 37 00 00       	call   f0104068 <cprintf>$/;"	l
f0100967	obj/kern/kernel.asm	/^f0100967:	b8 07 14 34 f0       	mov    $0xf0341407,%eax$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100971	obj/kern/kernel.asm	/^f0100971:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f010097c	obj/kern/kernel.asm	/^f010097c:	85 c0                	test   %eax,%eax$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100988	obj/kern/kernel.asm	/^f0100988:	c7 04 24 64 7b 10 f0 	movl   $0xf0107b64,(%esp)$/;"	l
f010098f	obj/kern/kernel.asm	/^f010098f:	e8 d4 36 00 00       	call   f0104068 <cprintf>$/;"	l
f0100994	obj/kern/kernel.asm	/^f0100994:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100999	obj/kern/kernel.asm	/^f0100999:	c9                   	leave  $/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	c3                   	ret    $/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b <mon_backtrace>:$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	55                   	push   %ebp$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	89 e5                	mov    %esp,%ebp$/;"	l
f010099e	obj/kern/kernel.asm	/^f010099e:	57                   	push   %edi$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	56                   	push   %esi$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	53                   	push   %ebx$/;"	l
f01009a1	obj/kern/kernel.asm	/^f01009a1:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f01009a4	obj/kern/kernel.asm	/^f01009a4:	89 eb                	mov    %ebp,%ebx$/;"	l
f01009a6	obj/kern/kernel.asm	/^f01009a6:	c7 04 24 f8 79 10 f0 	movl   $0xf01079f8,(%esp)$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	e8 b6 36 00 00       	call   f0104068 <cprintf>$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	e9 92 00 00 00       	jmp    f0100a49 <mon_backtrace+0xae>$/;"	l
f01009b7	obj/kern/kernel.asm	/^f01009b7:	8b 73 04             	mov    0x4(%ebx),%esi$/;"	l
f01009ba	obj/kern/kernel.asm	/^f01009ba:	8d 43 08             	lea    0x8(%ebx),%eax$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	8d 4b 1c             	lea    0x1c(%ebx),%ecx$/;"	l
f01009c0	obj/kern/kernel.asm	/^f01009c0:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	29 da                	sub    %ebx,%edx$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	8b 38                	mov    (%eax),%edi$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	89 7c 02 f8          	mov    %edi,-0x8(%edx,%eax,1)$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	83 c0 04             	add    $0x4,%eax$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	39 c8                	cmp    %ecx,%eax$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	75 f3                	jne    f01009c5 <mon_backtrace+0x2a>$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01009e3	obj/kern/kernel.asm	/^f01009e3:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	c7 04 24 90 7b 10 f0 	movl   $0xf0107b90,(%esp)$/;"	l
f0100a04	obj/kern/kernel.asm	/^f0100a04:	e8 5f 36 00 00       	call   f0104068 <cprintf>$/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	8d 45 bc             	lea    -0x44(%ebp),%eax$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100a13	obj/kern/kernel.asm	/^f0100a13:	e8 30 49 00 00       	call   f0105348 <debuginfo_eip>$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	2b 75 cc             	sub    -0x34(%ebp),%esi$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f0100a1f	obj/kern/kernel.asm	/^f0100a1f:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0100a22	obj/kern/kernel.asm	/^f0100a22:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100a26	obj/kern/kernel.asm	/^f0100a26:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0100a30	obj/kern/kernel.asm	/^f0100a30:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0100a37	obj/kern/kernel.asm	/^f0100a37:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	c7 04 24 0a 7a 10 f0 	movl   $0xf0107a0a,(%esp)$/;"	l
f0100a42	obj/kern/kernel.asm	/^f0100a42:	e8 21 36 00 00       	call   f0104068 <cprintf>$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	85 db                	test   %ebx,%ebx$/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	0f 85 66 ff ff ff    	jne    f01009b7 <mon_backtrace+0x1c>$/;"	l
f0100a51	obj/kern/kernel.asm	/^f0100a51:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	5b                   	pop    %ebx$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	5e                   	pop    %esi$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	5f                   	pop    %edi$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	5d                   	pop    %ebp$/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d:	c3                   	ret    $/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e <monitor>:$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	55                   	push   %ebp$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a61	obj/kern/kernel.asm	/^f0100a61:	57                   	push   %edi$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	56                   	push   %esi$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	53                   	push   %ebx$/;"	l
f0100a64	obj/kern/kernel.asm	/^f0100a64:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	c7 04 24 c8 7b 10 f0 	movl   $0xf0107bc8,(%esp)$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	e8 f5 35 00 00       	call   f0104068 <cprintf>$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	c7 04 24 ec 7b 10 f0 	movl   $0xf0107bec,(%esp)$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	e8 e9 35 00 00       	call   f0104068 <cprintf>$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	74 0b                	je     f0100a90 <monitor+0x32>$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	e8 4e 38 00 00       	call   f01042de <print_trapframe>$/;"	l
f0100a90	obj/kern/kernel.asm	/^f0100a90:	c7 04 24 1e 7a 10 f0 	movl   $0xf0107a1e,(%esp)$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	e8 94 51 00 00       	call   f0105c30 <readline>$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	85 c0                	test   %eax,%eax$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	74 ee                	je     f0100a90 <monitor+0x32>$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100aae	obj/kern/kernel.asm	/^f0100aae:	eb 0a                	jmp    f0100aba <monitor+0x5c>$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100ab3	obj/kern/kernel.asm	/^f0100ab3:	89 f7                	mov    %esi,%edi$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	89 fe                	mov    %edi,%esi$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	84 c0                	test   %al,%al$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	74 63                	je     f0100b24 <monitor+0xc6>$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	0f be c0             	movsbl %al,%eax$/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	c7 04 24 22 7a 10 f0 	movl   $0xf0107a22,(%esp)$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	e8 86 53 00 00       	call   f0105e5a <strchr>$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	85 c0                	test   %eax,%eax$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	75 d8                	jne    f0100ab0 <monitor+0x52>$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	74 47                	je     f0100b24 <monitor+0xc6>$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100ae0	obj/kern/kernel.asm	/^f0100ae0:	75 16                	jne    f0100af8 <monitor+0x9a>$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	00 $/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	c7 04 24 27 7a 10 f0 	movl   $0xf0107a27,(%esp)$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	e8 72 35 00 00       	call   f0104068 <cprintf>$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	eb 98                	jmp    f0100a90 <monitor+0x32>$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	eb 03                	jmp    f0100b04 <monitor+0xa6>$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	84 c0                	test   %al,%al$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	74 ad                	je     f0100ab8 <monitor+0x5a>$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	0f be c0             	movsbl %al,%eax$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	c7 04 24 22 7a 10 f0 	movl   $0xf0107a22,(%esp)$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	e8 3c 53 00 00       	call   f0105e5a <strchr>$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	85 c0                	test   %eax,%eax$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	74 df                	je     f0100b01 <monitor+0xa3>$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	eb 94                	jmp    f0100ab8 <monitor+0x5a>$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	00 $/;"	l
f0100b2c	obj/kern/kernel.asm	/^f0100b2c:	85 f6                	test   %esi,%esi$/;"	l
f0100b2e	obj/kern/kernel.asm	/^f0100b2e:	0f 84 5c ff ff ff    	je     f0100a90 <monitor+0x32>$/;"	l
f0100b34	obj/kern/kernel.asm	/^f0100b34:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	8b 04 85 20 7c 10 f0 	mov    -0xfef83e0(,%eax,4),%eax$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	e8 aa 52 00 00       	call   f0105dfc <strcmp>$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	85 c0                	test   %eax,%eax$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	75 24                	jne    f0100b7a <monitor+0x11c>$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	8d 4d a8             	lea    -0x58(%ebp),%ecx$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	ff 14 85 28 7c 10 f0 	call   *-0xfef83d8(,%eax,4)$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	85 c0                	test   %eax,%eax$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	78 25                	js     f0100b9a <monitor+0x13c>$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	e9 16 ff ff ff       	jmp    f0100a90 <monitor+0x32>$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100b7d	obj/kern/kernel.asm	/^f0100b7d:	83 fb 03             	cmp    $0x3,%ebx$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	75 b7                	jne    f0100b39 <monitor+0xdb>$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b89	obj/kern/kernel.asm	/^f0100b89:	c7 04 24 44 7a 10 f0 	movl   $0xf0107a44,(%esp)$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	e8 d3 34 00 00       	call   f0104068 <cprintf>$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	e9 f6 fe ff ff       	jmp    f0100a90 <monitor+0x32>$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	5b                   	pop    %ebx$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	5e                   	pop    %esi$/;"	l
f0100b9f	obj/kern/kernel.asm	/^f0100b9f:	5f                   	pop    %edi$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	5d                   	pop    %ebp$/;"	l
f0100ba1	obj/kern/kernel.asm	/^f0100ba1:	c3                   	ret    $/;"	l
f0100ba2	obj/kern/kernel.asm	/^f0100ba2:	66 90                	xchg   %ax,%ax$/;"	l
f0100ba4	obj/kern/kernel.asm	/^f0100ba4:	66 90                	xchg   %ax,%ax$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	66 90                	xchg   %ax,%ax$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	66 90                	xchg   %ax,%ax$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	66 90                	xchg   %ax,%ax$/;"	l
f0100bac	obj/kern/kernel.asm	/^f0100bac:	66 90                	xchg   %ax,%ax$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	66 90                	xchg   %ax,%ax$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0 <page2kva>:$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0:	2b 05 1c fd 2f f0    	sub    0xf02ffd1c,%eax$/;"	l
f0100bb6	obj/kern/kernel.asm	/^f0100bb6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	89 c2                	mov    %eax,%edx$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	3b 15 14 fd 2f f0    	cmp    0xf02ffd14,%edx$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	72 26                	jb     f0100bef <page2kva+0x3f>$/;"	l
f0100bc9	obj/kern/kernel.asm	/^f0100bc9:	55                   	push   %ebp$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	f0 $/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	00 $/;"	l
f0100be3	obj/kern/kernel.asm	/^f0100be3:	c7 04 24 a1 85 10 f0 	movl   $0xf01085a1,(%esp)$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	e8 ae f4 ff ff       	call   f010009d <_panic>$/;"	l
f0100bef	obj/kern/kernel.asm	/^f0100bef:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	c3                   	ret    $/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5 <check_va2pa>:$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	89 d1                	mov    %edx,%ecx$/;"	l
f0100bf7	obj/kern/kernel.asm	/^f0100bf7:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	a8 01                	test   $0x1,%al$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	74 5d                	je     f0100c5e <check_va2pa+0x69>$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	89 c1                	mov    %eax,%ecx$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100c0b	obj/kern/kernel.asm	/^f0100c0b:	3b 0d 14 fd 2f f0    	cmp    0xf02ffd14,%ecx$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	72 26                	jb     f0100c39 <check_va2pa+0x44>$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	55                   	push   %ebp$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	f0 $/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	c7 44 24 04 b8 03 00 	movl   $0x3b8,0x4(%esp)$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	00 $/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	e8 64 f4 ff ff       	call   f010009d <_panic>$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	89 c2                	mov    %eax,%edx$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100c4e	obj/kern/kernel.asm	/^f0100c4e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	85 d2                	test   %edx,%edx$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	c3                   	ret    $/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	c3                   	ret    $/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64 <boot_alloc>:$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	55                   	push   %ebp$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	83 3d 38 72 2b f0 00 	cmpl   $0x0,0xf02b7238$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	75 11                	jne    f0100c84 <boot_alloc+0x20>$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	ba 07 20 34 f0       	mov    $0xf0342007,%edx$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	89 15 38 72 2b f0    	mov    %edx,0xf02b7238$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	85 c0                	test   %eax,%eax$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	75 07                	jne    f0100c8f <boot_alloc+0x2b>$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	a1 38 72 2b f0       	mov    0xf02b7238,%eax$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	eb 71                	jmp    f0100d00 <boot_alloc+0x9c>$/;"	l
f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	8b 0d 38 72 2b f0    	mov    0xf02b7238,%ecx$/;"	l
f0100c95	obj/kern/kernel.asm	/^f0100c95:	8d 94 01 ff 0f 00 00 	lea    0xfff(%ecx,%eax,1),%edx$/;"	l
f0100c9c	obj/kern/kernel.asm	/^f0100c9c:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	89 15 38 72 2b f0    	mov    %edx,0xf02b7238$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0100cae	obj/kern/kernel.asm	/^f0100cae:	77 20                	ja     f0100cd0 <boot_alloc+0x6c>$/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100cb4	obj/kern/kernel.asm	/^f0100cb4:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	f0 $/;"	l
f0100cbc	obj/kern/kernel.asm	/^f0100cbc:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	00 $/;"	l
f0100cc4	obj/kern/kernel.asm	/^f0100cc4:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	e8 cd f3 ff ff       	call   f010009d <_panic>$/;"	l
f0100cd0	obj/kern/kernel.asm	/^f0100cd0:	a1 14 fd 2f f0       	mov    0xf02ffd14,%eax$/;"	l
f0100cd5	obj/kern/kernel.asm	/^f0100cd5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0100cde	obj/kern/kernel.asm	/^f0100cde:	39 d0                	cmp    %edx,%eax$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	73 1c                	jae    f0100cfe <boot_alloc+0x9a>$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	c7 44 24 08 bb 85 10 	movl   $0xf01085bb,0x8(%esp)$/;"	l
f0100ce9	obj/kern/kernel.asm	/^f0100ce9:	f0 $/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	c7 44 24 04 71 00 00 	movl   $0x71,0x4(%esp)$/;"	l
f0100cf1	obj/kern/kernel.asm	/^f0100cf1:	00 $/;"	l
f0100cf2	obj/kern/kernel.asm	/^f0100cf2:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	e8 9f f3 ff ff       	call   f010009d <_panic>$/;"	l
f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	89 c8                	mov    %ecx,%eax$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	c9                   	leave  $/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	c3                   	ret    $/;"	l
f0100d02	obj/kern/kernel.asm	/^f0100d02 <check_page_free_list>:$/;"	l
f0100d02	obj/kern/kernel.asm	/^f0100d02:	55                   	push   %ebp$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	57                   	push   %edi$/;"	l
f0100d06	obj/kern/kernel.asm	/^f0100d06:	56                   	push   %esi$/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	53                   	push   %ebx$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b:	84 c0                	test   %al,%al$/;"	l
f0100d0d	obj/kern/kernel.asm	/^f0100d0d:	0f 85 31 03 00 00    	jne    f0101044 <check_page_free_list+0x342>$/;"	l
f0100d13	obj/kern/kernel.asm	/^f0100d13:	e9 3e 03 00 00       	jmp    f0101056 <check_page_free_list+0x354>$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	c7 44 24 08 44 7c 10 	movl   $0xf0107c44,0x8(%esp)$/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f:	f0 $/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	c7 44 24 04 ed 02 00 	movl   $0x2ed,0x4(%esp)$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	00 $/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	e8 69 f3 ff ff       	call   f010009d <_panic>$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100d3d	obj/kern/kernel.asm	/^f0100d3d:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	89 c2                	mov    %eax,%edx$/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	2b 15 1c fd 2f f0    	sub    0xf02ffd1c,%edx$/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	0f 95 c2             	setne  %dl$/;"	l
f0100d51	obj/kern/kernel.asm	/^f0100d51:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100d58	obj/kern/kernel.asm	/^f0100d58:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100d5a	obj/kern/kernel.asm	/^f0100d5a:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	8b 00                	mov    (%eax),%eax$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	85 c0                	test   %eax,%eax$/;"	l
f0100d62	obj/kern/kernel.asm	/^f0100d62:	75 dc                	jne    f0100d40 <check_page_free_list+0x3e>$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	89 10                	mov    %edx,(%eax)$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100d78	obj/kern/kernel.asm	/^f0100d78:	a3 40 72 2b f0       	mov    %eax,0xf02b7240$/;"	l
f0100d7d	obj/kern/kernel.asm	/^f0100d7d:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100d82	obj/kern/kernel.asm	/^f0100d82:	8b 1d 40 72 2b f0    	mov    0xf02b7240,%ebx$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	eb 63                	jmp    f0100ded <check_page_free_list+0xeb>$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	89 d8                	mov    %ebx,%eax$/;"	l
f0100d8c	obj/kern/kernel.asm	/^f0100d8c:	2b 05 1c fd 2f f0    	sub    0xf02ffd1c,%eax$/;"	l
f0100d92	obj/kern/kernel.asm	/^f0100d92:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100d98	obj/kern/kernel.asm	/^f0100d98:	89 c2                	mov    %eax,%edx$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	39 f2                	cmp    %esi,%edx$/;"	l
f0100d9f	obj/kern/kernel.asm	/^f0100d9f:	73 4a                	jae    f0100deb <check_page_free_list+0xe9>$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	89 c2                	mov    %eax,%edx$/;"	l
f0100da3	obj/kern/kernel.asm	/^f0100da3:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100da6	obj/kern/kernel.asm	/^f0100da6:	3b 15 14 fd 2f f0    	cmp    0xf02ffd14,%edx$/;"	l
f0100dac	obj/kern/kernel.asm	/^f0100dac:	72 20                	jb     f0100dce <check_page_free_list+0xcc>$/;"	l
f0100dae	obj/kern/kernel.asm	/^f0100dae:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	f0 $/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	00 $/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	c7 04 24 a1 85 10 f0 	movl   $0xf01085a1,(%esp)$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	e8 cf f2 ff ff       	call   f010009d <_panic>$/;"	l
f0100dce	obj/kern/kernel.asm	/^f0100dce:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0100dd5	obj/kern/kernel.asm	/^f0100dd5:	00 $/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	00 $/;"	l
f0100dde	obj/kern/kernel.asm	/^f0100dde:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100de3	obj/kern/kernel.asm	/^f0100de3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100de6	obj/kern/kernel.asm	/^f0100de6:	e8 ac 50 00 00       	call   f0105e97 <memset>$/;"	l
f0100deb	obj/kern/kernel.asm	/^f0100deb:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	85 db                	test   %ebx,%ebx$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	75 99                	jne    f0100d8a <check_page_free_list+0x88>$/;"	l
f0100df1	obj/kern/kernel.asm	/^f0100df1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	e8 69 fe ff ff       	call   f0100c64 <boot_alloc>$/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	8b 15 40 72 2b f0    	mov    0xf02b7240,%edx$/;"	l
f0100e04	obj/kern/kernel.asm	/^f0100e04:	8b 0d 1c fd 2f f0    	mov    0xf02ffd1c,%ecx$/;"	l
f0100e0a	obj/kern/kernel.asm	/^f0100e0a:	a1 14 fd 2f f0       	mov    0xf02ffd14,%eax$/;"	l
f0100e0f	obj/kern/kernel.asm	/^f0100e0f:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100e18	obj/kern/kernel.asm	/^f0100e18:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	e9 c4 01 00 00       	jmp    f0100fec <check_page_free_list+0x2ea>$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b:	73 24                	jae    f0100e51 <check_page_free_list+0x14f>$/;"	l
f0100e2d	obj/kern/kernel.asm	/^f0100e2d:	c7 44 24 0c d5 85 10 	movl   $0xf01085d5,0xc(%esp)$/;"	l
f0100e34	obj/kern/kernel.asm	/^f0100e34:	f0 $/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0100e3c	obj/kern/kernel.asm	/^f0100e3c:	f0 $/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	c7 44 24 04 07 03 00 	movl   $0x307,0x4(%esp)$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	00 $/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0100e4c	obj/kern/kernel.asm	/^f0100e4c:	e8 4c f2 ff ff       	call   f010009d <_panic>$/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	72 24                	jb     f0100e7a <check_page_free_list+0x178>$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	c7 44 24 0c f6 85 10 	movl   $0xf01085f6,0xc(%esp)$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	f0 $/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	f0 $/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	c7 44 24 04 08 03 00 	movl   $0x308,0x4(%esp)$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	00 $/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	e8 23 f2 ff ff       	call   f010009d <_panic>$/;"	l
f0100e7a	obj/kern/kernel.asm	/^f0100e7a:	89 d0                	mov    %edx,%eax$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f0100e7f	obj/kern/kernel.asm	/^f0100e7f:	a8 07                	test   $0x7,%al$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	74 24                	je     f0100ea7 <check_page_free_list+0x1a5>$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	c7 44 24 0c 68 7c 10 	movl   $0xf0107c68,0xc(%esp)$/;"	l
f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	f0 $/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	f0 $/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	c7 44 24 04 09 03 00 	movl   $0x309,0x4(%esp)$/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	00 $/;"	l
f0100e9b	obj/kern/kernel.asm	/^f0100e9b:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0100ea2	obj/kern/kernel.asm	/^f0100ea2:	e8 f6 f1 ff ff       	call   f010009d <_panic>$/;"	l
f0100ea7	obj/kern/kernel.asm	/^f0100ea7:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100eaa	obj/kern/kernel.asm	/^f0100eaa:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100ead	obj/kern/kernel.asm	/^f0100ead:	85 c0                	test   %eax,%eax$/;"	l
f0100eaf	obj/kern/kernel.asm	/^f0100eaf:	75 24                	jne    f0100ed5 <check_page_free_list+0x1d3>$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	c7 44 24 0c 0a 86 10 	movl   $0xf010860a,0xc(%esp)$/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	f0 $/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0100ec0	obj/kern/kernel.asm	/^f0100ec0:	f0 $/;"	l
f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	c7 44 24 04 0c 03 00 	movl   $0x30c,0x4(%esp)$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	00 $/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0100ed0	obj/kern/kernel.asm	/^f0100ed0:	e8 c8 f1 ff ff       	call   f010009d <_panic>$/;"	l
f0100ed5	obj/kern/kernel.asm	/^f0100ed5:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100eda	obj/kern/kernel.asm	/^f0100eda:	75 24                	jne    f0100f00 <check_page_free_list+0x1fe>$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	c7 44 24 0c 1b 86 10 	movl   $0xf010861b,0xc(%esp)$/;"	l
f0100ee3	obj/kern/kernel.asm	/^f0100ee3:	f0 $/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	f0 $/;"	l
f0100eec	obj/kern/kernel.asm	/^f0100eec:	c7 44 24 04 0d 03 00 	movl   $0x30d,0x4(%esp)$/;"	l
f0100ef3	obj/kern/kernel.asm	/^f0100ef3:	00 $/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	e8 9d f1 ff ff       	call   f010009d <_panic>$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	75 24                	jne    f0100f2b <check_page_free_list+0x229>$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	c7 44 24 0c 9c 7c 10 	movl   $0xf0107c9c,0xc(%esp)$/;"	l
f0100f0e	obj/kern/kernel.asm	/^f0100f0e:	f0 $/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	f0 $/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	c7 44 24 04 0e 03 00 	movl   $0x30e,0x4(%esp)$/;"	l
f0100f1e	obj/kern/kernel.asm	/^f0100f1e:	00 $/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	e8 72 f1 ff ff       	call   f010009d <_panic>$/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100f30	obj/kern/kernel.asm	/^f0100f30:	75 24                	jne    f0100f56 <check_page_free_list+0x254>$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	c7 44 24 0c 34 86 10 	movl   $0xf0108634,0xc(%esp)$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	f0 $/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0100f41	obj/kern/kernel.asm	/^f0100f41:	f0 $/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	c7 44 24 04 0f 03 00 	movl   $0x30f,0x4(%esp)$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	00 $/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	e8 47 f1 ff ff       	call   f010009d <_panic>$/;"	l
f0100f56	obj/kern/kernel.asm	/^f0100f56:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100f5b	obj/kern/kernel.asm	/^f0100f5b:	0f 86 1c 01 00 00    	jbe    f010107d <check_page_free_list+0x37b>$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	89 c1                	mov    %eax,%ecx$/;"	l
f0100f63	obj/kern/kernel.asm	/^f0100f63:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100f66	obj/kern/kernel.asm	/^f0100f66:	39 4d c4             	cmp    %ecx,-0x3c(%ebp)$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	77 20                	ja     f0100f8b <check_page_free_list+0x289>$/;"	l
f0100f6b	obj/kern/kernel.asm	/^f0100f6b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100f6f	obj/kern/kernel.asm	/^f0100f6f:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f0100f76	obj/kern/kernel.asm	/^f0100f76:	f0 $/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	00 $/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	c7 04 24 a1 85 10 f0 	movl   $0xf01085a1,(%esp)$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	e8 12 f1 ff ff       	call   f010009d <_panic>$/;"	l
f0100f8b	obj/kern/kernel.asm	/^f0100f8b:	8d 88 00 00 00 f0    	lea    -0x10000000(%eax),%ecx$/;"	l
f0100f91	obj/kern/kernel.asm	/^f0100f91:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	0f 86 d3 00 00 00    	jbe    f010106d <check_page_free_list+0x36b>$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	c7 44 24 0c c0 7c 10 	movl   $0xf0107cc0,0xc(%esp)$/;"	l
f0100fa1	obj/kern/kernel.asm	/^f0100fa1:	f0 $/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	f0 $/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	c7 44 24 04 10 03 00 	movl   $0x310,0x4(%esp)$/;"	l
f0100fb1	obj/kern/kernel.asm	/^f0100fb1:	00 $/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	e8 df f0 ff ff       	call   f010009d <_panic>$/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	c7 44 24 0c 4e 86 10 	movl   $0xf010864e,0xc(%esp)$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	f0 $/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	f0 $/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	c7 44 24 04 12 03 00 	movl   $0x312,0x4(%esp)$/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	00 $/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	e8 bb f0 ff ff       	call   f010009d <_panic>$/;"	l
f0100fe2	obj/kern/kernel.asm	/^f0100fe2:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	eb 03                	jmp    f0100fea <check_page_free_list+0x2e8>$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100fea	obj/kern/kernel.asm	/^f0100fea:	8b 12                	mov    (%edx),%edx$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	85 d2                	test   %edx,%edx$/;"	l
f0100fee	obj/kern/kernel.asm	/^f0100fee:	0f 85 34 fe ff ff    	jne    f0100e28 <check_page_free_list+0x126>$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	85 db                	test   %ebx,%ebx$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	7f 24                	jg     f010101c <check_page_free_list+0x31a>$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	c7 44 24 0c 6b 86 10 	movl   $0xf010866b,0xc(%esp)$/;"	l
f0100fff	obj/kern/kernel.asm	/^f0100fff:	f0 $/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	f0 $/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	c7 44 24 04 1a 03 00 	movl   $0x31a,0x4(%esp)$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	00 $/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	e8 81 f0 ff ff       	call   f010009d <_panic>$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	85 ff                	test   %edi,%edi$/;"	l
f010101e	obj/kern/kernel.asm	/^f010101e:	7f 6d                	jg     f010108d <check_page_free_list+0x38b>$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	c7 44 24 0c 7d 86 10 	movl   $0xf010867d,0xc(%esp)$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	f0 $/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010102f	obj/kern/kernel.asm	/^f010102f:	f0 $/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	c7 44 24 04 1b 03 00 	movl   $0x31b,0x4(%esp)$/;"	l
f0101037	obj/kern/kernel.asm	/^f0101037:	00 $/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	e8 59 f0 ff ff       	call   f010009d <_panic>$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	a1 40 72 2b f0       	mov    0xf02b7240,%eax$/;"	l
f0101049	obj/kern/kernel.asm	/^f0101049:	85 c0                	test   %eax,%eax$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	0f 85 e3 fc ff ff    	jne    f0100d34 <check_page_free_list+0x32>$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	e9 c2 fc ff ff       	jmp    f0100d18 <check_page_free_list+0x16>$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	83 3d 40 72 2b f0 00 	cmpl   $0x0,0xf02b7240$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	0f 84 b5 fc ff ff    	je     f0100d18 <check_page_free_list+0x16>$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	e9 15 fd ff ff       	jmp    f0100d82 <check_page_free_list+0x80>$/;"	l
f010106d	obj/kern/kernel.asm	/^f010106d:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	0f 85 6f ff ff ff    	jne    f0100fe7 <check_page_free_list+0x2e5>$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	e9 41 ff ff ff       	jmp    f0100fbe <check_page_free_list+0x2bc>$/;"	l
f010107d	obj/kern/kernel.asm	/^f010107d:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	0f 85 5a ff ff ff    	jne    f0100fe2 <check_page_free_list+0x2e0>$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	e9 31 ff ff ff       	jmp    f0100fbe <check_page_free_list+0x2bc>$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0101090	obj/kern/kernel.asm	/^f0101090:	5b                   	pop    %ebx$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	5e                   	pop    %esi$/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	5f                   	pop    %edi$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	5d                   	pop    %ebp$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	c3                   	ret    $/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095 <page_init>:$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	55                   	push   %ebp$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	89 e5                	mov    %esp,%ebp$/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	56                   	push   %esi$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	53                   	push   %ebx$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	8b 35 44 72 2b f0    	mov    0xf02b7244,%esi$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	8b 1d 40 72 2b f0    	mov    0xf02b7240,%ebx$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01010ab	obj/kern/kernel.asm	/^f01010ab:	eb 2f                	jmp    f01010dc <page_init+0x47>$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	89 c2                	mov    %eax,%edx$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	81 fa 00 70 00 00    	cmp    $0x7000,%edx$/;"	l
f01010b8	obj/kern/kernel.asm	/^f01010b8:	74 1f                	je     f01010d9 <page_init+0x44>$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	89 d1                	mov    %edx,%ecx$/;"	l
f01010c3	obj/kern/kernel.asm	/^f01010c3:	03 0d 1c fd 2f f0    	add    0xf02ffd1c,%ecx$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	89 19                	mov    %ebx,(%ecx)$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	89 d3                	mov    %edx,%ebx$/;"	l
f01010d3	obj/kern/kernel.asm	/^f01010d3:	03 1d 1c fd 2f f0    	add    0xf02ffd1c,%ebx$/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	83 c0 01             	add    $0x1,%eax$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	39 f0                	cmp    %esi,%eax$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	72 cd                	jb     f01010ad <page_init+0x18>$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	a1 1c fd 2f f0       	mov    0xf02ffd1c,%eax$/;"	l
f01010e5	obj/kern/kernel.asm	/^f01010e5:	8b 15 14 fd 2f f0    	mov    0xf02ffd14,%edx$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	8d 94 d0 ff 0f 00 10 	lea    0x10000fff(%eax,%edx,8),%edx$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01010f8	obj/kern/kernel.asm	/^f01010f8:	81 c2 00 f0 01 00    	add    $0x1f000,%edx$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
f0101108	obj/kern/kernel.asm	/^f0101108:	eb 1e                	jmp    f0101128 <page_init+0x93>$/;"	l
f010110a	obj/kern/kernel.asm	/^f010110a:	89 c1                	mov    %eax,%ecx$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	03 0d 1c fd 2f f0    	add    0xf02ffd1c,%ecx$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	89 19                	mov    %ebx,(%ecx)$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	89 c3                	mov    %eax,%ebx$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	03 1d 1c fd 2f f0    	add    0xf02ffd1c,%ebx$/;"	l
f0101122	obj/kern/kernel.asm	/^f0101122:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101125	obj/kern/kernel.asm	/^f0101125:	83 c0 08             	add    $0x8,%eax$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	3b 15 14 fd 2f f0    	cmp    0xf02ffd14,%edx$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	72 da                	jb     f010110a <page_init+0x75>$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	89 1d 40 72 2b f0    	mov    %ebx,0xf02b7240$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	5b                   	pop    %ebx$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	5e                   	pop    %esi$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	5d                   	pop    %ebp$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	c3                   	ret    $/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a <page_alloc>:$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	55                   	push   %ebp$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	89 e5                	mov    %esp,%ebp$/;"	l
f010113d	obj/kern/kernel.asm	/^f010113d:	53                   	push   %ebx$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	8b 1d 40 72 2b f0    	mov    0xf02b7240,%ebx$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	85 db                	test   %ebx,%ebx$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	74 74                	je     f01011bf <page_alloc+0x85>$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	74 58                	je     f01011a9 <page_alloc+0x6f>$/;"	l
f0101151	obj/kern/kernel.asm	/^f0101151:	89 d8                	mov    %ebx,%eax$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	2b 05 1c fd 2f f0    	sub    0xf02ffd1c,%eax$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010115c	obj/kern/kernel.asm	/^f010115c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010115f	obj/kern/kernel.asm	/^f010115f:	89 c2                	mov    %eax,%edx$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	3b 15 14 fd 2f f0    	cmp    0xf02ffd14,%edx$/;"	l
f010116a	obj/kern/kernel.asm	/^f010116a:	72 20                	jb     f010118c <page_alloc+0x52>$/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101170	obj/kern/kernel.asm	/^f0101170:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	f0 $/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	00 $/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	c7 04 24 a1 85 10 f0 	movl   $0xf01085a1,(%esp)$/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	e8 11 ef ff ff       	call   f010009d <_panic>$/;"	l
f010118c	obj/kern/kernel.asm	/^f010118c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	00 $/;"	l
f0101194	obj/kern/kernel.asm	/^f0101194:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	00 $/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01011a1	obj/kern/kernel.asm	/^f01011a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	e8 ee 4c 00 00       	call   f0105e97 <memset>$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	a1 40 72 2b f0       	mov    0xf02b7240,%eax$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	8b 00                	mov    (%eax),%eax$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	a3 40 72 2b f0       	mov    %eax,0xf02b7240$/;"	l
f01011b5	obj/kern/kernel.asm	/^f01011b5:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	89 d8                	mov    %ebx,%eax$/;"	l
f01011bd	obj/kern/kernel.asm	/^f01011bd:	eb 05                	jmp    f01011c4 <page_alloc+0x8a>$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011c4	obj/kern/kernel.asm	/^f01011c4:	83 c4 14             	add    $0x14,%esp$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	5b                   	pop    %ebx$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	5d                   	pop    %ebp$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	c3                   	ret    $/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca <page_free>:$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	55                   	push   %ebp$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	89 e5                	mov    %esp,%ebp$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01011d3	obj/kern/kernel.asm	/^f01011d3:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	75 05                	jne    f01011df <page_free+0x15>$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	74 24                	je     f0101203 <page_free+0x39>$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	c7 44 24 0c 08 7d 10 	movl   $0xf0107d08,0xc(%esp)$/;"	l
f01011e6	obj/kern/kernel.asm	/^f01011e6:	f0 $/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01011ee	obj/kern/kernel.asm	/^f01011ee:	f0 $/;"	l
f01011ef	obj/kern/kernel.asm	/^f01011ef:	c7 44 24 04 86 01 00 	movl   $0x186,0x4(%esp)$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	00 $/;"	l
f01011f7	obj/kern/kernel.asm	/^f01011f7:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01011fe	obj/kern/kernel.asm	/^f01011fe:	e8 9a ee ff ff       	call   f010009d <_panic>$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	8b 15 40 72 2b f0    	mov    0xf02b7240,%edx$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	89 10                	mov    %edx,(%eax)$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	a3 40 72 2b f0       	mov    %eax,0xf02b7240$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	c9                   	leave  $/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	c3                   	ret    $/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212 <page_decref>:$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	55                   	push   %ebp$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	89 e5                	mov    %esp,%ebp$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101218	obj/kern/kernel.asm	/^f0101218:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	0f b7 48 04          	movzwl 0x4(%eax),%ecx$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	8d 51 ff             	lea    -0x1(%ecx),%edx$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	66 85 d2             	test   %dx,%dx$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	75 08                	jne    f0101233 <page_decref+0x21>$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010122e	obj/kern/kernel.asm	/^f010122e:	e8 97 ff ff ff       	call   f01011ca <page_free>$/;"	l
f0101233	obj/kern/kernel.asm	/^f0101233:	c9                   	leave  $/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	c3                   	ret    $/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235 <pgdir_walk>:$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	55                   	push   %ebp$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	89 e5                	mov    %esp,%ebp$/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	56                   	push   %esi$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	53                   	push   %ebx$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	89 de                	mov    %ebx,%esi$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	c1 ee 16             	shr    $0x16,%esi$/;"	l
f0101245	obj/kern/kernel.asm	/^f0101245:	c1 e6 02             	shl    $0x2,%esi$/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	03 75 08             	add    0x8(%ebp),%esi$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	8b 06                	mov    (%esi),%eax$/;"	l
f010124d	obj/kern/kernel.asm	/^f010124d:	85 c0                	test   %eax,%eax$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	74 44                	je     f0101295 <pgdir_walk+0x60>$/;"	l
f0101251	obj/kern/kernel.asm	/^f0101251:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	89 c2                	mov    %eax,%edx$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	3b 15 14 fd 2f f0    	cmp    0xf02ffd14,%edx$/;"	l
f0101261	obj/kern/kernel.asm	/^f0101261:	72 20                	jb     f0101283 <pgdir_walk+0x4e>$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	f0 $/;"	l
f010126f	obj/kern/kernel.asm	/^f010126f:	c7 44 24 04 b8 01 00 	movl   $0x1b8,0x4(%esp)$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	00 $/;"	l
f0101277	obj/kern/kernel.asm	/^f0101277:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010127e	obj/kern/kernel.asm	/^f010127e:	e8 1a ee ff ff       	call   f010009d <_panic>$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	8d 84 18 00 00 00 f0 	lea    -0x10000000(%eax,%ebx,1),%eax$/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293:	eb 79                	jmp    f010130e <pgdir_walk+0xd9>$/;"	l
f0101295	obj/kern/kernel.asm	/^f0101295:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	74 67                	je     f0101302 <pgdir_walk+0xcd>$/;"	l
f010129b	obj/kern/kernel.asm	/^f010129b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	e8 93 fe ff ff       	call   f010113a <page_alloc>$/;"	l
f01012a7	obj/kern/kernel.asm	/^f01012a7:	85 c0                	test   %eax,%eax$/;"	l
f01012a9	obj/kern/kernel.asm	/^f01012a9:	74 5e                	je     f0101309 <pgdir_walk+0xd4>$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	2b 05 1c fd 2f f0    	sub    0xf02ffd1c,%eax$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	89 c2                	mov    %eax,%edx$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	83 ca 07             	or     $0x7,%edx$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	89 16                	mov    %edx,(%esi)$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	89 c2                	mov    %eax,%edx$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01012c8	obj/kern/kernel.asm	/^f01012c8:	3b 15 14 fd 2f f0    	cmp    0xf02ffd14,%edx$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	72 20                	jb     f01012f0 <pgdir_walk+0xbb>$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	f0 $/;"	l
f01012dc	obj/kern/kernel.asm	/^f01012dc:	c7 44 24 04 ca 01 00 	movl   $0x1ca,0x4(%esp)$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	00 $/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	e8 ad ed ff ff       	call   f010009d <_panic>$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9:	8d 84 18 00 00 00 f0 	lea    -0x10000000(%eax,%ebx,1),%eax$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	eb 0c                	jmp    f010130e <pgdir_walk+0xd9>$/;"	l
f0101302	obj/kern/kernel.asm	/^f0101302:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	eb 05                	jmp    f010130e <pgdir_walk+0xd9>$/;"	l
f0101309	obj/kern/kernel.asm	/^f0101309:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101311	obj/kern/kernel.asm	/^f0101311:	5b                   	pop    %ebx$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	5e                   	pop    %esi$/;"	l
f0101313	obj/kern/kernel.asm	/^f0101313:	5d                   	pop    %ebp$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	c3                   	ret    $/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315 <boot_map_region>:$/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315:	55                   	push   %ebp$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	89 e5                	mov    %esp,%ebp$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	57                   	push   %edi$/;"	l
f0101319	obj/kern/kernel.asm	/^f0101319:	56                   	push   %esi$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	53                   	push   %ebx$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	8d 04 0a             	lea    (%edx,%ecx,1),%eax$/;"	l
f0101324	obj/kern/kernel.asm	/^f0101324:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	89 d3                	mov    %edx,%ebx$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010132c	obj/kern/kernel.asm	/^f010132c:	29 d7                	sub    %edx,%edi$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101331	obj/kern/kernel.asm	/^f0101331:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	eb 4a                	jmp    f0101383 <boot_map_region+0x6e>$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	00 $/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010134b	obj/kern/kernel.asm	/^f010134b:	e8 e5 fe ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	85 c0                	test   %eax,%eax$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	75 24                	jne    f0101378 <boot_map_region+0x63>$/;"	l
f0101354	obj/kern/kernel.asm	/^f0101354:	c7 44 24 0c 8e 86 10 	movl   $0xf010868e,0xc(%esp)$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	f0 $/;"	l
f010135c	obj/kern/kernel.asm	/^f010135c:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	f0 $/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	c7 44 24 04 e7 01 00 	movl   $0x1e7,0x4(%esp)$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	00 $/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	e8 25 ed ff ff       	call   f010009d <_panic>$/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	89 30                	mov    %esi,(%eax)$/;"	l
f010137d	obj/kern/kernel.asm	/^f010137d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	8d 34 1f             	lea    (%edi,%ebx,1),%esi$/;"	l
f0101386	obj/kern/kernel.asm	/^f0101386:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	72 ae                	jb     f0101339 <boot_map_region+0x24>$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010138e	obj/kern/kernel.asm	/^f010138e:	5b                   	pop    %ebx$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	5e                   	pop    %esi$/;"	l
f0101390	obj/kern/kernel.asm	/^f0101390:	5f                   	pop    %edi$/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	5d                   	pop    %ebp$/;"	l
f0101392	obj/kern/kernel.asm	/^f0101392:	c3                   	ret    $/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393 <page_lookup>:$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	55                   	push   %ebp$/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	89 e5                	mov    %esp,%ebp$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	53                   	push   %ebx$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010139a	obj/kern/kernel.asm	/^f010139a:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	00 $/;"	l
f01013a5	obj/kern/kernel.asm	/^f01013a5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	e8 7e fe ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f01013b7	obj/kern/kernel.asm	/^f01013b7:	85 c0                	test   %eax,%eax$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	74 3a                	je     f01013f5 <page_lookup+0x62>$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	85 db                	test   %ebx,%ebx$/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	74 02                	je     f01013c1 <page_lookup+0x2e>$/;"	l
f01013bf	obj/kern/kernel.asm	/^f01013bf:	89 03                	mov    %eax,(%ebx)$/;"	l
f01013c1	obj/kern/kernel.asm	/^f01013c1:	8b 00                	mov    (%eax),%eax$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01013c6	obj/kern/kernel.asm	/^f01013c6:	3b 05 14 fd 2f f0    	cmp    0xf02ffd14,%eax$/;"	l
f01013cc	obj/kern/kernel.asm	/^f01013cc:	72 1c                	jb     f01013ea <page_lookup+0x57>$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	c7 44 24 08 34 7d 10 	movl   $0xf0107d34,0x8(%esp)$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	f0 $/;"	l
f01013d6	obj/kern/kernel.asm	/^f01013d6:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	00 $/;"	l
f01013de	obj/kern/kernel.asm	/^f01013de:	c7 04 24 a1 85 10 f0 	movl   $0xf01085a1,(%esp)$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	e8 b3 ec ff ff       	call   f010009d <_panic>$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	8b 15 1c fd 2f f0    	mov    0xf02ffd1c,%edx$/;"	l
f01013f0	obj/kern/kernel.asm	/^f01013f0:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f01013f3	obj/kern/kernel.asm	/^f01013f3:	eb 05                	jmp    f01013fa <page_lookup+0x67>$/;"	l
f01013f5	obj/kern/kernel.asm	/^f01013f5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	83 c4 14             	add    $0x14,%esp$/;"	l
f01013fd	obj/kern/kernel.asm	/^f01013fd:	5b                   	pop    %ebx$/;"	l
f01013fe	obj/kern/kernel.asm	/^f01013fe:	5d                   	pop    %ebp$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	c3                   	ret    $/;"	l
f0101400	obj/kern/kernel.asm	/^f0101400 <tlb_invalidate>:$/;"	l
f0101400	obj/kern/kernel.asm	/^f0101400:	55                   	push   %ebp$/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	89 e5                	mov    %esp,%ebp$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101406	obj/kern/kernel.asm	/^f0101406:	e8 de 50 00 00       	call   f01064e9 <cpunum>$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010140e	obj/kern/kernel.asm	/^f010140e:	83 b8 28 00 30 f0 00 	cmpl   $0x0,-0xfcfffd8(%eax)$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	74 16                	je     f010142d <tlb_invalidate+0x2d>$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	e8 cd 50 00 00       	call   f01064e9 <cpunum>$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	75 06                	jne    f0101433 <tlb_invalidate+0x33>$/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	0f 01 38             	invlpg (%eax)$/;"	l
f0101433	obj/kern/kernel.asm	/^f0101433:	c9                   	leave  $/;"	l
f0101434	obj/kern/kernel.asm	/^f0101434:	c3                   	ret    $/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435 <page_remove>:$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	55                   	push   %ebp$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	89 e5                	mov    %esp,%ebp$/;"	l
f0101438	obj/kern/kernel.asm	/^f0101438:	56                   	push   %esi$/;"	l
f0101439	obj/kern/kernel.asm	/^f0101439:	53                   	push   %ebx$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	83 ec 20             	sub    $0x20,%esp$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451:	e8 3d ff ff ff       	call   f0101393 <page_lookup>$/;"	l
f0101456	obj/kern/kernel.asm	/^f0101456:	85 c0                	test   %eax,%eax$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	74 1d                	je     f0101477 <page_remove+0x42>$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	e8 b0 fd ff ff       	call   f0101212 <page_decref>$/;"	l
f0101462	obj/kern/kernel.asm	/^f0101462:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101465	obj/kern/kernel.asm	/^f0101465:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101472	obj/kern/kernel.asm	/^f0101472:	e8 89 ff ff ff       	call   f0101400 <tlb_invalidate>$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	83 c4 20             	add    $0x20,%esp$/;"	l
f010147a	obj/kern/kernel.asm	/^f010147a:	5b                   	pop    %ebx$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	5e                   	pop    %esi$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	5d                   	pop    %ebp$/;"	l
f010147d	obj/kern/kernel.asm	/^f010147d:	c3                   	ret    $/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e <page_insert>:$/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e:	55                   	push   %ebp$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	57                   	push   %edi$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	56                   	push   %esi$/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483:	53                   	push   %ebx$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010148d	obj/kern/kernel.asm	/^f010148d:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	00 $/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010149c	obj/kern/kernel.asm	/^f010149c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	e8 91 fd ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f01014a4	obj/kern/kernel.asm	/^f01014a4:	89 c3                	mov    %eax,%ebx$/;"	l
f01014a6	obj/kern/kernel.asm	/^f01014a6:	85 c0                	test   %eax,%eax$/;"	l
f01014a8	obj/kern/kernel.asm	/^f01014a8:	74 45                	je     f01014ef <page_insert+0x71>$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	74 0f                	je     f01014c3 <page_insert+0x45>$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01014b8	obj/kern/kernel.asm	/^f01014b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01014bb	obj/kern/kernel.asm	/^f01014bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	e8 72 ff ff ff       	call   f0101435 <page_remove>$/;"	l
f01014c3	obj/kern/kernel.asm	/^f01014c3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	83 c8 01             	or     $0x1,%eax$/;"	l
f01014c9	obj/kern/kernel.asm	/^f01014c9:	2b 35 1c fd 2f f0    	sub    0xf02ffd1c,%esi$/;"	l
f01014cf	obj/kern/kernel.asm	/^f01014cf:	c1 fe 03             	sar    $0x3,%esi$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	09 c6                	or     %eax,%esi$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	89 33                	mov    %esi,(%ebx)$/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01014e0	obj/kern/kernel.asm	/^f01014e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01014e3	obj/kern/kernel.asm	/^f01014e3:	e8 18 ff ff ff       	call   f0101400 <tlb_invalidate>$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	eb 05                	jmp    f01014f4 <page_insert+0x76>$/;"	l
f01014ef	obj/kern/kernel.asm	/^f01014ef:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01014f7	obj/kern/kernel.asm	/^f01014f7:	5b                   	pop    %ebx$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	5e                   	pop    %esi$/;"	l
f01014f9	obj/kern/kernel.asm	/^f01014f9:	5f                   	pop    %edi$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	5d                   	pop    %ebp$/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	c3                   	ret    $/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc <mmio_map_region>:$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	55                   	push   %ebp$/;"	l
f01014fd	obj/kern/kernel.asm	/^f01014fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01014ff	obj/kern/kernel.asm	/^f01014ff:	53                   	push   %ebx$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx$/;"	l
f010150c	obj/kern/kernel.asm	/^f010150c:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	8b 15 00 43 12 f0    	mov    0xf0124300,%edx$/;"	l
f0101518	obj/kern/kernel.asm	/^f0101518:	8d 04 13             	lea    (%ebx,%edx,1),%eax$/;"	l
f010151b	obj/kern/kernel.asm	/^f010151b:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f0101520	obj/kern/kernel.asm	/^f0101520:	76 1c                	jbe    f010153e <mmio_map_region+0x42>$/;"	l
f0101522	obj/kern/kernel.asm	/^f0101522:	c7 44 24 08 54 7d 10 	movl   $0xf0107d54,0x8(%esp)$/;"	l
f0101529	obj/kern/kernel.asm	/^f0101529:	f0 $/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	c7 44 24 04 90 02 00 	movl   $0x290,0x4(%esp)$/;"	l
f0101531	obj/kern/kernel.asm	/^f0101531:	00 $/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101539	obj/kern/kernel.asm	/^f0101539:	e8 5f eb ff ff       	call   f010009d <_panic>$/;"	l
f010153e	obj/kern/kernel.asm	/^f010153e:	c7 44 24 04 1b 00 00 	movl   $0x1b,0x4(%esp)$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	00 $/;"	l
f0101546	obj/kern/kernel.asm	/^f0101546:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	89 d9                	mov    %ebx,%ecx$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	e8 bd fd ff ff       	call   f0101315 <boot_map_region>$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	a1 00 43 12 f0       	mov    0xf0124300,%eax$/;"	l
f010155d	obj/kern/kernel.asm	/^f010155d:	01 c3                	add    %eax,%ebx$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	89 1d 00 43 12 f0    	mov    %ebx,0xf0124300$/;"	l
f0101565	obj/kern/kernel.asm	/^f0101565:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	5b                   	pop    %ebx$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	5d                   	pop    %ebp$/;"	l
f010156a	obj/kern/kernel.asm	/^f010156a:	c3                   	ret    $/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b <mem_init>:$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	55                   	push   %ebp$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	89 e5                	mov    %esp,%ebp$/;"	l
f010156e	obj/kern/kernel.asm	/^f010156e:	57                   	push   %edi$/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	56                   	push   %esi$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	53                   	push   %ebx$/;"	l
f0101571	obj/kern/kernel.asm	/^f0101571:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0101574	obj/kern/kernel.asm	/^f0101574:	c7 04 24 15 00 00 00 	movl   $0x15,(%esp)$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	e8 6c 29 00 00       	call   f0103eec <mc146818_read>$/;"	l
f0101580	obj/kern/kernel.asm	/^f0101580:	89 c3                	mov    %eax,%ebx$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	c7 04 24 16 00 00 00 	movl   $0x16,(%esp)$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	e8 5e 29 00 00       	call   f0103eec <mc146818_read>$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	09 c3                	or     %eax,%ebx$/;"	l
f0101593	obj/kern/kernel.asm	/^f0101593:	89 d8                	mov    %ebx,%eax$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101598	obj/kern/kernel.asm	/^f0101598:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e:	85 c0                	test   %eax,%eax$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01015a3	obj/kern/kernel.asm	/^f01015a3:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f01015a6	obj/kern/kernel.asm	/^f01015a6:	a3 44 72 2b f0       	mov    %eax,0xf02b7244$/;"	l
f01015ab	obj/kern/kernel.asm	/^f01015ab:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	e8 35 29 00 00       	call   f0103eec <mc146818_read>$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	89 c3                	mov    %eax,%ebx$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	e8 27 29 00 00       	call   f0103eec <mc146818_read>$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01015c8	obj/kern/kernel.asm	/^f01015c8:	09 c3                	or     %eax,%ebx$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	89 d8                	mov    %ebx,%eax$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	85 c0                	test   %eax,%eax$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	85 c0                	test   %eax,%eax$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	74 0e                	je     f01015ef <mem_init+0x84>$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	89 15 14 fd 2f f0    	mov    %edx,0xf02ffd14$/;"	l
f01015ed	obj/kern/kernel.asm	/^f01015ed:	eb 0c                	jmp    f01015fb <mem_init+0x90>$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	8b 15 44 72 2b f0    	mov    0xf02b7244,%edx$/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5:	89 15 14 fd 2f f0    	mov    %edx,0xf02ffd14$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101601	obj/kern/kernel.asm	/^f0101601:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	a1 44 72 2b f0       	mov    0xf02b7244,%eax$/;"	l
f010160a	obj/kern/kernel.asm	/^f010160a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101610	obj/kern/kernel.asm	/^f0101610:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	a1 14 fd 2f f0       	mov    0xf02ffd14,%eax$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	c7 04 24 88 7d 10 f0 	movl   $0xf0107d88,(%esp)$/;"	l
f010162a	obj/kern/kernel.asm	/^f010162a:	e8 39 2a 00 00       	call   f0104068 <cprintf>$/;"	l
f010162f	obj/kern/kernel.asm	/^f010162f:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	e8 2b f6 ff ff       	call   f0100c64 <boot_alloc>$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	a3 18 fd 2f f0       	mov    %eax,0xf02ffd18$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645:	00 $/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010164d	obj/kern/kernel.asm	/^f010164d:	00 $/;"	l
f010164e	obj/kern/kernel.asm	/^f010164e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	e8 41 48 00 00       	call   f0105e97 <memset>$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f010165b	obj/kern/kernel.asm	/^f010165b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	77 20                	ja     f0101682 <mem_init+0x117>$/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	f0 $/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	c7 44 24 04 95 00 00 	movl   $0x95,0x4(%esp)$/;"	l
f0101675	obj/kern/kernel.asm	/^f0101675:	00 $/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	e8 1b ea ff ff       	call   f010009d <_panic>$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101688	obj/kern/kernel.asm	/^f0101688:	83 ca 05             	or     $0x5,%edx$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	a1 14 fd 2f f0       	mov    0xf02ffd14,%eax$/;"	l
f0101696	obj/kern/kernel.asm	/^f0101696:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101699	obj/kern/kernel.asm	/^f0101699:	e8 c6 f5 ff ff       	call   f0100c64 <boot_alloc>$/;"	l
f010169e	obj/kern/kernel.asm	/^f010169e:	a3 1c fd 2f f0       	mov    %eax,0xf02ffd1c$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	8b 0d 14 fd 2f f0    	mov    0xf02ffd14,%ecx$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	8d 14 cd 00 00 00 00 	lea    0x0(,%ecx,8),%edx$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01016b4	obj/kern/kernel.asm	/^f01016b4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	00 $/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	e8 d3 47 00 00       	call   f0105e97 <memset>$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	e8 96 f5 ff ff       	call   f0100c64 <boot_alloc>$/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	a3 48 72 2b f0       	mov    %eax,0xf02b7248$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	c7 44 24 08 00 f0 01 	movl   $0x1f000,0x8(%esp)$/;"	l
f01016da	obj/kern/kernel.asm	/^f01016da:	00 $/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	00 $/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01016e6	obj/kern/kernel.asm	/^f01016e6:	e8 ac 47 00 00       	call   f0105e97 <memset>$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	e8 a5 f9 ff ff       	call   f0101095 <page_init>$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5:	e8 08 f6 ff ff       	call   f0100d02 <check_page_free_list>$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	83 3d 1c fd 2f f0 00 	cmpl   $0x0,0xf02ffd1c$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	75 1c                	jne    f010171f <mem_init+0x1b4>$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	c7 44 24 08 92 86 10 	movl   $0xf0108692,0x8(%esp)$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	f0 $/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	c7 44 24 04 2c 03 00 	movl   $0x32c,0x4(%esp)$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	00 $/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	e8 7e e9 ff ff       	call   f010009d <_panic>$/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	a1 40 72 2b f0       	mov    0xf02b7240,%eax$/;"	l
f0101724	obj/kern/kernel.asm	/^f0101724:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101729	obj/kern/kernel.asm	/^f0101729:	eb 05                	jmp    f0101730 <mem_init+0x1c5>$/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010172e	obj/kern/kernel.asm	/^f010172e:	8b 00                	mov    (%eax),%eax$/;"	l
f0101730	obj/kern/kernel.asm	/^f0101730:	85 c0                	test   %eax,%eax$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	75 f7                	jne    f010172b <mem_init+0x1c0>$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	e8 fa f9 ff ff       	call   f010113a <page_alloc>$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	89 c7                	mov    %eax,%edi$/;"	l
f0101742	obj/kern/kernel.asm	/^f0101742:	85 c0                	test   %eax,%eax$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	75 24                	jne    f010176a <mem_init+0x1ff>$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	c7 44 24 0c ad 86 10 	movl   $0xf01086ad,0xc(%esp)$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	f0 $/;"	l
f010174e	obj/kern/kernel.asm	/^f010174e:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	f0 $/;"	l
f0101756	obj/kern/kernel.asm	/^f0101756:	c7 44 24 04 34 03 00 	movl   $0x334,0x4(%esp)$/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	00 $/;"	l
f010175e	obj/kern/kernel.asm	/^f010175e:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	e8 33 e9 ff ff       	call   f010009d <_panic>$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	e8 c4 f9 ff ff       	call   f010113a <page_alloc>$/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	89 c6                	mov    %eax,%esi$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	85 c0                	test   %eax,%eax$/;"	l
f010177a	obj/kern/kernel.asm	/^f010177a:	75 24                	jne    f01017a0 <mem_init+0x235>$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	c7 44 24 0c c3 86 10 	movl   $0xf01086c3,0xc(%esp)$/;"	l
f0101783	obj/kern/kernel.asm	/^f0101783:	f0 $/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	f0 $/;"	l
f010178c	obj/kern/kernel.asm	/^f010178c:	c7 44 24 04 35 03 00 	movl   $0x335,0x4(%esp)$/;"	l
f0101793	obj/kern/kernel.asm	/^f0101793:	00 $/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	e8 fd e8 ff ff       	call   f010009d <_panic>$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	e8 8e f9 ff ff       	call   f010113a <page_alloc>$/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	85 c0                	test   %eax,%eax$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	75 24                	jne    f01017d7 <mem_init+0x26c>$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	c7 44 24 0c d9 86 10 	movl   $0xf01086d9,0xc(%esp)$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	f0 $/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	f0 $/;"	l
f01017c3	obj/kern/kernel.asm	/^f01017c3:	c7 44 24 04 36 03 00 	movl   $0x336,0x4(%esp)$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	00 $/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	e8 c6 e8 ff ff       	call   f010009d <_panic>$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	39 f7                	cmp    %esi,%edi$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	75 24                	jne    f01017ff <mem_init+0x294>$/;"	l
f01017db	obj/kern/kernel.asm	/^f01017db:	c7 44 24 0c ef 86 10 	movl   $0xf01086ef,0xc(%esp)$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	f0 $/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	f0 $/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	c7 44 24 04 39 03 00 	movl   $0x339,0x4(%esp)$/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	00 $/;"	l
f01017f3	obj/kern/kernel.asm	/^f01017f3:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	e8 9e e8 ff ff       	call   f010009d <_panic>$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	39 c6                	cmp    %eax,%esi$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	74 04                	je     f010180a <mem_init+0x29f>$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	39 c7                	cmp    %eax,%edi$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	75 24                	jne    f010182e <mem_init+0x2c3>$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	c7 44 24 0c c4 7d 10 	movl   $0xf0107dc4,0xc(%esp)$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	f0 $/;"	l
f0101812	obj/kern/kernel.asm	/^f0101812:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101819	obj/kern/kernel.asm	/^f0101819:	f0 $/;"	l
f010181a	obj/kern/kernel.asm	/^f010181a:	c7 44 24 04 3a 03 00 	movl   $0x33a,0x4(%esp)$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	00 $/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101829	obj/kern/kernel.asm	/^f0101829:	e8 6f e8 ff ff       	call   f010009d <_panic>$/;"	l
f010182e	obj/kern/kernel.asm	/^f010182e:	8b 15 1c fd 2f f0    	mov    0xf02ffd1c,%edx$/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	a1 14 fd 2f f0       	mov    0xf02ffd14,%eax$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010183c	obj/kern/kernel.asm	/^f010183c:	89 f9                	mov    %edi,%ecx$/;"	l
f010183e	obj/kern/kernel.asm	/^f010183e:	29 d1                	sub    %edx,%ecx$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101846	obj/kern/kernel.asm	/^f0101846:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	72 24                	jb     f010186e <mem_init+0x303>$/;"	l
f010184a	obj/kern/kernel.asm	/^f010184a:	c7 44 24 0c 01 87 10 	movl   $0xf0108701,0xc(%esp)$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	f0 $/;"	l
f0101852	obj/kern/kernel.asm	/^f0101852:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	f0 $/;"	l
f010185a	obj/kern/kernel.asm	/^f010185a:	c7 44 24 04 3b 03 00 	movl   $0x33b,0x4(%esp)$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	00 $/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	e8 2f e8 ff ff       	call   f010009d <_panic>$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	89 f1                	mov    %esi,%ecx$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	29 d1                	sub    %edx,%ecx$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	39 c8                	cmp    %ecx,%eax$/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	77 24                	ja     f01018a0 <mem_init+0x335>$/;"	l
f010187c	obj/kern/kernel.asm	/^f010187c:	c7 44 24 0c 1e 87 10 	movl   $0xf010871e,0xc(%esp)$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	f0 $/;"	l
f0101884	obj/kern/kernel.asm	/^f0101884:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	f0 $/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c:	c7 44 24 04 3c 03 00 	movl   $0x33c,0x4(%esp)$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	00 $/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	e8 fd e7 ff ff       	call   f010009d <_panic>$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01018a3	obj/kern/kernel.asm	/^f01018a3:	29 d1                	sub    %edx,%ecx$/;"	l
f01018a5	obj/kern/kernel.asm	/^f01018a5:	89 ca                	mov    %ecx,%edx$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	39 d0                	cmp    %edx,%eax$/;"	l
f01018af	obj/kern/kernel.asm	/^f01018af:	77 24                	ja     f01018d5 <mem_init+0x36a>$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	c7 44 24 0c 3b 87 10 	movl   $0xf010873b,0xc(%esp)$/;"	l
f01018b8	obj/kern/kernel.asm	/^f01018b8:	f0 $/;"	l
f01018b9	obj/kern/kernel.asm	/^f01018b9:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	f0 $/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	c7 44 24 04 3d 03 00 	movl   $0x33d,0x4(%esp)$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	00 $/;"	l
f01018c9	obj/kern/kernel.asm	/^f01018c9:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0:	e8 c8 e7 ff ff       	call   f010009d <_panic>$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	a1 40 72 2b f0       	mov    0xf02b7240,%eax$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	c7 05 40 72 2b f0 00 	movl   $0x0,0xf02b7240$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	00 00 00 $/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	e8 47 f8 ff ff       	call   f010113a <page_alloc>$/;"	l
f01018f3	obj/kern/kernel.asm	/^f01018f3:	85 c0                	test   %eax,%eax$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	74 24                	je     f010191b <mem_init+0x3b0>$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	c7 44 24 0c 58 87 10 	movl   $0xf0108758,0xc(%esp)$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	f0 $/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101906	obj/kern/kernel.asm	/^f0101906:	f0 $/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	c7 44 24 04 44 03 00 	movl   $0x344,0x4(%esp)$/;"	l
f010190e	obj/kern/kernel.asm	/^f010190e:	00 $/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	e8 82 e7 ff ff       	call   f010009d <_panic>$/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010191e	obj/kern/kernel.asm	/^f010191e:	e8 a7 f8 ff ff       	call   f01011ca <page_free>$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	e8 9f f8 ff ff       	call   f01011ca <page_free>$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	e8 94 f8 ff ff       	call   f01011ca <page_free>$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010193d	obj/kern/kernel.asm	/^f010193d:	e8 f8 f7 ff ff       	call   f010113a <page_alloc>$/;"	l
f0101942	obj/kern/kernel.asm	/^f0101942:	89 c6                	mov    %eax,%esi$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	85 c0                	test   %eax,%eax$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	75 24                	jne    f010196c <mem_init+0x401>$/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	c7 44 24 0c ad 86 10 	movl   $0xf01086ad,0xc(%esp)$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	f0 $/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	f0 $/;"	l
f0101958	obj/kern/kernel.asm	/^f0101958:	c7 44 24 04 4b 03 00 	movl   $0x34b,0x4(%esp)$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	00 $/;"	l
f0101960	obj/kern/kernel.asm	/^f0101960:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101967	obj/kern/kernel.asm	/^f0101967:	e8 31 e7 ff ff       	call   f010009d <_panic>$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	e8 c2 f7 ff ff       	call   f010113a <page_alloc>$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	89 c7                	mov    %eax,%edi$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	85 c0                	test   %eax,%eax$/;"	l
f010197c	obj/kern/kernel.asm	/^f010197c:	75 24                	jne    f01019a2 <mem_init+0x437>$/;"	l
f010197e	obj/kern/kernel.asm	/^f010197e:	c7 44 24 0c c3 86 10 	movl   $0xf01086c3,0xc(%esp)$/;"	l
f0101985	obj/kern/kernel.asm	/^f0101985:	f0 $/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	f0 $/;"	l
f010198e	obj/kern/kernel.asm	/^f010198e:	c7 44 24 04 4c 03 00 	movl   $0x34c,0x4(%esp)$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	00 $/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010199d	obj/kern/kernel.asm	/^f010199d:	e8 fb e6 ff ff       	call   f010009d <_panic>$/;"	l
f01019a2	obj/kern/kernel.asm	/^f01019a2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	e8 8c f7 ff ff       	call   f010113a <page_alloc>$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01019b1	obj/kern/kernel.asm	/^f01019b1:	85 c0                	test   %eax,%eax$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	75 24                	jne    f01019d9 <mem_init+0x46e>$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	c7 44 24 0c d9 86 10 	movl   $0xf01086d9,0xc(%esp)$/;"	l
f01019bc	obj/kern/kernel.asm	/^f01019bc:	f0 $/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01019c4	obj/kern/kernel.asm	/^f01019c4:	f0 $/;"	l
f01019c5	obj/kern/kernel.asm	/^f01019c5:	c7 44 24 04 4d 03 00 	movl   $0x34d,0x4(%esp)$/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc:	00 $/;"	l
f01019cd	obj/kern/kernel.asm	/^f01019cd:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	e8 c4 e6 ff ff       	call   f010009d <_panic>$/;"	l
f01019d9	obj/kern/kernel.asm	/^f01019d9:	39 fe                	cmp    %edi,%esi$/;"	l
f01019db	obj/kern/kernel.asm	/^f01019db:	75 24                	jne    f0101a01 <mem_init+0x496>$/;"	l
f01019dd	obj/kern/kernel.asm	/^f01019dd:	c7 44 24 0c ef 86 10 	movl   $0xf01086ef,0xc(%esp)$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	f0 $/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	f0 $/;"	l
f01019ed	obj/kern/kernel.asm	/^f01019ed:	c7 44 24 04 4f 03 00 	movl   $0x34f,0x4(%esp)$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	00 $/;"	l
f01019f5	obj/kern/kernel.asm	/^f01019f5:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01019fc	obj/kern/kernel.asm	/^f01019fc:	e8 9c e6 ff ff       	call   f010009d <_panic>$/;"	l
f0101a01	obj/kern/kernel.asm	/^f0101a01:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101a04	obj/kern/kernel.asm	/^f0101a04:	39 c7                	cmp    %eax,%edi$/;"	l
f0101a06	obj/kern/kernel.asm	/^f0101a06:	74 04                	je     f0101a0c <mem_init+0x4a1>$/;"	l
f0101a08	obj/kern/kernel.asm	/^f0101a08:	39 c6                	cmp    %eax,%esi$/;"	l
f0101a0a	obj/kern/kernel.asm	/^f0101a0a:	75 24                	jne    f0101a30 <mem_init+0x4c5>$/;"	l
f0101a0c	obj/kern/kernel.asm	/^f0101a0c:	c7 44 24 0c c4 7d 10 	movl   $0xf0107dc4,0xc(%esp)$/;"	l
f0101a13	obj/kern/kernel.asm	/^f0101a13:	f0 $/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101a1b	obj/kern/kernel.asm	/^f0101a1b:	f0 $/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	c7 44 24 04 50 03 00 	movl   $0x350,0x4(%esp)$/;"	l
f0101a23	obj/kern/kernel.asm	/^f0101a23:	00 $/;"	l
f0101a24	obj/kern/kernel.asm	/^f0101a24:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101a2b	obj/kern/kernel.asm	/^f0101a2b:	e8 6d e6 ff ff       	call   f010009d <_panic>$/;"	l
f0101a30	obj/kern/kernel.asm	/^f0101a30:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101a37	obj/kern/kernel.asm	/^f0101a37:	e8 fe f6 ff ff       	call   f010113a <page_alloc>$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	85 c0                	test   %eax,%eax$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	74 24                	je     f0101a64 <mem_init+0x4f9>$/;"	l
f0101a40	obj/kern/kernel.asm	/^f0101a40:	c7 44 24 0c 58 87 10 	movl   $0xf0108758,0xc(%esp)$/;"	l
f0101a47	obj/kern/kernel.asm	/^f0101a47:	f0 $/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	f0 $/;"	l
f0101a50	obj/kern/kernel.asm	/^f0101a50:	c7 44 24 04 51 03 00 	movl   $0x351,0x4(%esp)$/;"	l
f0101a57	obj/kern/kernel.asm	/^f0101a57:	00 $/;"	l
f0101a58	obj/kern/kernel.asm	/^f0101a58:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	e8 39 e6 ff ff       	call   f010009d <_panic>$/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	89 f0                	mov    %esi,%eax$/;"	l
f0101a66	obj/kern/kernel.asm	/^f0101a66:	2b 05 1c fd 2f f0    	sub    0xf02ffd1c,%eax$/;"	l
f0101a6c	obj/kern/kernel.asm	/^f0101a6c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101a72	obj/kern/kernel.asm	/^f0101a72:	89 c2                	mov    %eax,%edx$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101a77	obj/kern/kernel.asm	/^f0101a77:	3b 15 14 fd 2f f0    	cmp    0xf02ffd14,%edx$/;"	l
f0101a7d	obj/kern/kernel.asm	/^f0101a7d:	72 20                	jb     f0101a9f <mem_init+0x534>$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101a83	obj/kern/kernel.asm	/^f0101a83:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	f0 $/;"	l
f0101a8b	obj/kern/kernel.asm	/^f0101a8b:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	00 $/;"	l
f0101a93	obj/kern/kernel.asm	/^f0101a93:	c7 04 24 a1 85 10 f0 	movl   $0xf01085a1,(%esp)$/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a:	e8 fe e5 ff ff       	call   f010009d <_panic>$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101aa6	obj/kern/kernel.asm	/^f0101aa6:	00 $/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	00 $/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ab7	obj/kern/kernel.asm	/^f0101ab7:	e8 db 43 00 00       	call   f0105e97 <memset>$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101abf	obj/kern/kernel.asm	/^f0101abf:	e8 06 f7 ff ff       	call   f01011ca <page_free>$/;"	l
f0101ac4	obj/kern/kernel.asm	/^f0101ac4:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	e8 6a f6 ff ff       	call   f010113a <page_alloc>$/;"	l
f0101ad0	obj/kern/kernel.asm	/^f0101ad0:	85 c0                	test   %eax,%eax$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	75 24                	jne    f0101af8 <mem_init+0x58d>$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	c7 44 24 0c 67 87 10 	movl   $0xf0108767,0xc(%esp)$/;"	l
f0101adb	obj/kern/kernel.asm	/^f0101adb:	f0 $/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	f0 $/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	c7 44 24 04 56 03 00 	movl   $0x356,0x4(%esp)$/;"	l
f0101aeb	obj/kern/kernel.asm	/^f0101aeb:	00 $/;"	l
f0101aec	obj/kern/kernel.asm	/^f0101aec:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	e8 a5 e5 ff ff       	call   f010009d <_panic>$/;"	l
f0101af8	obj/kern/kernel.asm	/^f0101af8:	39 c6                	cmp    %eax,%esi$/;"	l
f0101afa	obj/kern/kernel.asm	/^f0101afa:	74 24                	je     f0101b20 <mem_init+0x5b5>$/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	c7 44 24 0c 85 87 10 	movl   $0xf0108785,0xc(%esp)$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	f0 $/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	f0 $/;"	l
f0101b0c	obj/kern/kernel.asm	/^f0101b0c:	c7 44 24 04 57 03 00 	movl   $0x357,0x4(%esp)$/;"	l
f0101b13	obj/kern/kernel.asm	/^f0101b13:	00 $/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101b1b	obj/kern/kernel.asm	/^f0101b1b:	e8 7d e5 ff ff       	call   f010009d <_panic>$/;"	l
f0101b20	obj/kern/kernel.asm	/^f0101b20:	89 f0                	mov    %esi,%eax$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	2b 05 1c fd 2f f0    	sub    0xf02ffd1c,%eax$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101b2e	obj/kern/kernel.asm	/^f0101b2e:	89 c2                	mov    %eax,%edx$/;"	l
f0101b30	obj/kern/kernel.asm	/^f0101b30:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101b33	obj/kern/kernel.asm	/^f0101b33:	3b 15 14 fd 2f f0    	cmp    0xf02ffd14,%edx$/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	72 20                	jb     f0101b5b <mem_init+0x5f0>$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101b3f	obj/kern/kernel.asm	/^f0101b3f:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f0101b46	obj/kern/kernel.asm	/^f0101b46:	f0 $/;"	l
f0101b47	obj/kern/kernel.asm	/^f0101b47:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101b4e	obj/kern/kernel.asm	/^f0101b4e:	00 $/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	c7 04 24 a1 85 10 f0 	movl   $0xf01085a1,(%esp)$/;"	l
f0101b56	obj/kern/kernel.asm	/^f0101b56:	e8 42 e5 ff ff       	call   f010009d <_panic>$/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101b61	obj/kern/kernel.asm	/^f0101b61:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101b6a	obj/kern/kernel.asm	/^f0101b6a:	74 24                	je     f0101b90 <mem_init+0x625>$/;"	l
f0101b6c	obj/kern/kernel.asm	/^f0101b6c:	c7 44 24 0c 95 87 10 	movl   $0xf0108795,0xc(%esp)$/;"	l
f0101b73	obj/kern/kernel.asm	/^f0101b73:	f0 $/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101b7b	obj/kern/kernel.asm	/^f0101b7b:	f0 $/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	c7 44 24 04 5a 03 00 	movl   $0x35a,0x4(%esp)$/;"	l
f0101b83	obj/kern/kernel.asm	/^f0101b83:	00 $/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	e8 0d e5 ff ff       	call   f010009d <_panic>$/;"	l
f0101b90	obj/kern/kernel.asm	/^f0101b90:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	75 d0                	jne    f0101b67 <mem_init+0x5fc>$/;"	l
f0101b97	obj/kern/kernel.asm	/^f0101b97:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	a3 40 72 2b f0       	mov    %eax,0xf02b7240$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101ba2	obj/kern/kernel.asm	/^f0101ba2:	e8 23 f6 ff ff       	call   f01011ca <page_free>$/;"	l
f0101ba7	obj/kern/kernel.asm	/^f0101ba7:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101baa	obj/kern/kernel.asm	/^f0101baa:	e8 1b f6 ff ff       	call   f01011ca <page_free>$/;"	l
f0101baf	obj/kern/kernel.asm	/^f0101baf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101bb2	obj/kern/kernel.asm	/^f0101bb2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	e8 10 f6 ff ff       	call   f01011ca <page_free>$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	a1 40 72 2b f0       	mov    0xf02b7240,%eax$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	eb 05                	jmp    f0101bc6 <mem_init+0x65b>$/;"	l
f0101bc1	obj/kern/kernel.asm	/^f0101bc1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	8b 00                	mov    (%eax),%eax$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	85 c0                	test   %eax,%eax$/;"	l
f0101bc8	obj/kern/kernel.asm	/^f0101bc8:	75 f7                	jne    f0101bc1 <mem_init+0x656>$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	85 db                	test   %ebx,%ebx$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	74 24                	je     f0101bf2 <mem_init+0x687>$/;"	l
f0101bce	obj/kern/kernel.asm	/^f0101bce:	c7 44 24 0c 9f 87 10 	movl   $0xf010879f,0xc(%esp)$/;"	l
f0101bd5	obj/kern/kernel.asm	/^f0101bd5:	f0 $/;"	l
f0101bd6	obj/kern/kernel.asm	/^f0101bd6:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101bdd	obj/kern/kernel.asm	/^f0101bdd:	f0 $/;"	l
f0101bde	obj/kern/kernel.asm	/^f0101bde:	c7 44 24 04 67 03 00 	movl   $0x367,0x4(%esp)$/;"	l
f0101be5	obj/kern/kernel.asm	/^f0101be5:	00 $/;"	l
f0101be6	obj/kern/kernel.asm	/^f0101be6:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101bed	obj/kern/kernel.asm	/^f0101bed:	e8 ab e4 ff ff       	call   f010009d <_panic>$/;"	l
f0101bf2	obj/kern/kernel.asm	/^f0101bf2:	c7 04 24 e4 7d 10 f0 	movl   $0xf0107de4,(%esp)$/;"	l
f0101bf9	obj/kern/kernel.asm	/^f0101bf9:	e8 6a 24 00 00       	call   f0104068 <cprintf>$/;"	l
f0101bfe	obj/kern/kernel.asm	/^f0101bfe:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c05	obj/kern/kernel.asm	/^f0101c05:	e8 30 f5 ff ff       	call   f010113a <page_alloc>$/;"	l
f0101c0a	obj/kern/kernel.asm	/^f0101c0a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101c0d	obj/kern/kernel.asm	/^f0101c0d:	85 c0                	test   %eax,%eax$/;"	l
f0101c0f	obj/kern/kernel.asm	/^f0101c0f:	75 24                	jne    f0101c35 <mem_init+0x6ca>$/;"	l
f0101c11	obj/kern/kernel.asm	/^f0101c11:	c7 44 24 0c ad 86 10 	movl   $0xf01086ad,0xc(%esp)$/;"	l
f0101c18	obj/kern/kernel.asm	/^f0101c18:	f0 $/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	f0 $/;"	l
f0101c21	obj/kern/kernel.asm	/^f0101c21:	c7 44 24 04 cd 03 00 	movl   $0x3cd,0x4(%esp)$/;"	l
f0101c28	obj/kern/kernel.asm	/^f0101c28:	00 $/;"	l
f0101c29	obj/kern/kernel.asm	/^f0101c29:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101c30	obj/kern/kernel.asm	/^f0101c30:	e8 68 e4 ff ff       	call   f010009d <_panic>$/;"	l
f0101c35	obj/kern/kernel.asm	/^f0101c35:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c3c	obj/kern/kernel.asm	/^f0101c3c:	e8 f9 f4 ff ff       	call   f010113a <page_alloc>$/;"	l
f0101c41	obj/kern/kernel.asm	/^f0101c41:	89 c3                	mov    %eax,%ebx$/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	85 c0                	test   %eax,%eax$/;"	l
f0101c45	obj/kern/kernel.asm	/^f0101c45:	75 24                	jne    f0101c6b <mem_init+0x700>$/;"	l
f0101c47	obj/kern/kernel.asm	/^f0101c47:	c7 44 24 0c c3 86 10 	movl   $0xf01086c3,0xc(%esp)$/;"	l
f0101c4e	obj/kern/kernel.asm	/^f0101c4e:	f0 $/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101c56	obj/kern/kernel.asm	/^f0101c56:	f0 $/;"	l
f0101c57	obj/kern/kernel.asm	/^f0101c57:	c7 44 24 04 ce 03 00 	movl   $0x3ce,0x4(%esp)$/;"	l
f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	00 $/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101c66	obj/kern/kernel.asm	/^f0101c66:	e8 32 e4 ff ff       	call   f010009d <_panic>$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c72	obj/kern/kernel.asm	/^f0101c72:	e8 c3 f4 ff ff       	call   f010113a <page_alloc>$/;"	l
f0101c77	obj/kern/kernel.asm	/^f0101c77:	89 c6                	mov    %eax,%esi$/;"	l
f0101c79	obj/kern/kernel.asm	/^f0101c79:	85 c0                	test   %eax,%eax$/;"	l
f0101c7b	obj/kern/kernel.asm	/^f0101c7b:	75 24                	jne    f0101ca1 <mem_init+0x736>$/;"	l
f0101c7d	obj/kern/kernel.asm	/^f0101c7d:	c7 44 24 0c d9 86 10 	movl   $0xf01086d9,0xc(%esp)$/;"	l
f0101c84	obj/kern/kernel.asm	/^f0101c84:	f0 $/;"	l
f0101c85	obj/kern/kernel.asm	/^f0101c85:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101c8c	obj/kern/kernel.asm	/^f0101c8c:	f0 $/;"	l
f0101c8d	obj/kern/kernel.asm	/^f0101c8d:	c7 44 24 04 cf 03 00 	movl   $0x3cf,0x4(%esp)$/;"	l
f0101c94	obj/kern/kernel.asm	/^f0101c94:	00 $/;"	l
f0101c95	obj/kern/kernel.asm	/^f0101c95:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101c9c	obj/kern/kernel.asm	/^f0101c9c:	e8 fc e3 ff ff       	call   f010009d <_panic>$/;"	l
f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0101ca4	obj/kern/kernel.asm	/^f0101ca4:	75 24                	jne    f0101cca <mem_init+0x75f>$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	c7 44 24 0c ef 86 10 	movl   $0xf01086ef,0xc(%esp)$/;"	l
f0101cad	obj/kern/kernel.asm	/^f0101cad:	f0 $/;"	l
f0101cae	obj/kern/kernel.asm	/^f0101cae:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101cb5	obj/kern/kernel.asm	/^f0101cb5:	f0 $/;"	l
f0101cb6	obj/kern/kernel.asm	/^f0101cb6:	c7 44 24 04 d2 03 00 	movl   $0x3d2,0x4(%esp)$/;"	l
f0101cbd	obj/kern/kernel.asm	/^f0101cbd:	00 $/;"	l
f0101cbe	obj/kern/kernel.asm	/^f0101cbe:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101cc5	obj/kern/kernel.asm	/^f0101cc5:	e8 d3 e3 ff ff       	call   f010009d <_panic>$/;"	l
f0101cca	obj/kern/kernel.asm	/^f0101cca:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101ccc	obj/kern/kernel.asm	/^f0101ccc:	74 05                	je     f0101cd3 <mem_init+0x768>$/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0101cd1	obj/kern/kernel.asm	/^f0101cd1:	75 24                	jne    f0101cf7 <mem_init+0x78c>$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	c7 44 24 0c c4 7d 10 	movl   $0xf0107dc4,0xc(%esp)$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	f0 $/;"	l
f0101cdb	obj/kern/kernel.asm	/^f0101cdb:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101ce2	obj/kern/kernel.asm	/^f0101ce2:	f0 $/;"	l
f0101ce3	obj/kern/kernel.asm	/^f0101ce3:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	00 $/;"	l
f0101ceb	obj/kern/kernel.asm	/^f0101ceb:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101cf2	obj/kern/kernel.asm	/^f0101cf2:	e8 a6 e3 ff ff       	call   f010009d <_panic>$/;"	l
f0101cf7	obj/kern/kernel.asm	/^f0101cf7:	a1 40 72 2b f0       	mov    0xf02b7240,%eax$/;"	l
f0101cfc	obj/kern/kernel.asm	/^f0101cfc:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101cff	obj/kern/kernel.asm	/^f0101cff:	c7 05 40 72 2b f0 00 	movl   $0x0,0xf02b7240$/;"	l
f0101d06	obj/kern/kernel.asm	/^f0101d06:	00 00 00 $/;"	l
f0101d09	obj/kern/kernel.asm	/^f0101d09:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d10	obj/kern/kernel.asm	/^f0101d10:	e8 25 f4 ff ff       	call   f010113a <page_alloc>$/;"	l
f0101d15	obj/kern/kernel.asm	/^f0101d15:	85 c0                	test   %eax,%eax$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	74 24                	je     f0101d3d <mem_init+0x7d2>$/;"	l
f0101d19	obj/kern/kernel.asm	/^f0101d19:	c7 44 24 0c 58 87 10 	movl   $0xf0108758,0xc(%esp)$/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	f0 $/;"	l
f0101d21	obj/kern/kernel.asm	/^f0101d21:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101d28	obj/kern/kernel.asm	/^f0101d28:	f0 $/;"	l
f0101d29	obj/kern/kernel.asm	/^f0101d29:	c7 44 24 04 da 03 00 	movl   $0x3da,0x4(%esp)$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	00 $/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101d38	obj/kern/kernel.asm	/^f0101d38:	e8 60 e3 ff ff       	call   f010009d <_panic>$/;"	l
f0101d3d	obj/kern/kernel.asm	/^f0101d3d:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101d40	obj/kern/kernel.asm	/^f0101d40:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101d44	obj/kern/kernel.asm	/^f0101d44:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101d4b	obj/kern/kernel.asm	/^f0101d4b:	00 $/;"	l
f0101d4c	obj/kern/kernel.asm	/^f0101d4c:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0101d51	obj/kern/kernel.asm	/^f0101d51:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101d54	obj/kern/kernel.asm	/^f0101d54:	e8 3a f6 ff ff       	call   f0101393 <page_lookup>$/;"	l
f0101d59	obj/kern/kernel.asm	/^f0101d59:	85 c0                	test   %eax,%eax$/;"	l
f0101d5b	obj/kern/kernel.asm	/^f0101d5b:	74 24                	je     f0101d81 <mem_init+0x816>$/;"	l
f0101d5d	obj/kern/kernel.asm	/^f0101d5d:	c7 44 24 0c 04 7e 10 	movl   $0xf0107e04,0xc(%esp)$/;"	l
f0101d64	obj/kern/kernel.asm	/^f0101d64:	f0 $/;"	l
f0101d65	obj/kern/kernel.asm	/^f0101d65:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	f0 $/;"	l
f0101d6d	obj/kern/kernel.asm	/^f0101d6d:	c7 44 24 04 dd 03 00 	movl   $0x3dd,0x4(%esp)$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	00 $/;"	l
f0101d75	obj/kern/kernel.asm	/^f0101d75:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101d7c	obj/kern/kernel.asm	/^f0101d7c:	e8 1c e3 ff ff       	call   f010009d <_panic>$/;"	l
f0101d81	obj/kern/kernel.asm	/^f0101d81:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101d88	obj/kern/kernel.asm	/^f0101d88:	00 $/;"	l
f0101d89	obj/kern/kernel.asm	/^f0101d89:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	00 $/;"	l
f0101d91	obj/kern/kernel.asm	/^f0101d91:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0101d9a	obj/kern/kernel.asm	/^f0101d9a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	e8 dc f6 ff ff       	call   f010147e <page_insert>$/;"	l
f0101da2	obj/kern/kernel.asm	/^f0101da2:	85 c0                	test   %eax,%eax$/;"	l
f0101da4	obj/kern/kernel.asm	/^f0101da4:	78 24                	js     f0101dca <mem_init+0x85f>$/;"	l
f0101da6	obj/kern/kernel.asm	/^f0101da6:	c7 44 24 0c 3c 7e 10 	movl   $0xf0107e3c,0xc(%esp)$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	f0 $/;"	l
f0101dae	obj/kern/kernel.asm	/^f0101dae:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101db5	obj/kern/kernel.asm	/^f0101db5:	f0 $/;"	l
f0101db6	obj/kern/kernel.asm	/^f0101db6:	c7 44 24 04 e0 03 00 	movl   $0x3e0,0x4(%esp)$/;"	l
f0101dbd	obj/kern/kernel.asm	/^f0101dbd:	00 $/;"	l
f0101dbe	obj/kern/kernel.asm	/^f0101dbe:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101dc5	obj/kern/kernel.asm	/^f0101dc5:	e8 d3 e2 ff ff       	call   f010009d <_panic>$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101dcd	obj/kern/kernel.asm	/^f0101dcd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101dd0	obj/kern/kernel.asm	/^f0101dd0:	e8 f5 f3 ff ff       	call   f01011ca <page_free>$/;"	l
f0101dd5	obj/kern/kernel.asm	/^f0101dd5:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101ddc	obj/kern/kernel.asm	/^f0101ddc:	00 $/;"	l
f0101ddd	obj/kern/kernel.asm	/^f0101ddd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101de4	obj/kern/kernel.asm	/^f0101de4:	00 $/;"	l
f0101de5	obj/kern/kernel.asm	/^f0101de5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101de9	obj/kern/kernel.asm	/^f0101de9:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0101dee	obj/kern/kernel.asm	/^f0101dee:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101df1	obj/kern/kernel.asm	/^f0101df1:	e8 88 f6 ff ff       	call   f010147e <page_insert>$/;"	l
f0101df6	obj/kern/kernel.asm	/^f0101df6:	85 c0                	test   %eax,%eax$/;"	l
f0101df8	obj/kern/kernel.asm	/^f0101df8:	74 24                	je     f0101e1e <mem_init+0x8b3>$/;"	l
f0101dfa	obj/kern/kernel.asm	/^f0101dfa:	c7 44 24 0c 6c 7e 10 	movl   $0xf0107e6c,0xc(%esp)$/;"	l
f0101e01	obj/kern/kernel.asm	/^f0101e01:	f0 $/;"	l
f0101e02	obj/kern/kernel.asm	/^f0101e02:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	f0 $/;"	l
f0101e0a	obj/kern/kernel.asm	/^f0101e0a:	c7 44 24 04 e4 03 00 	movl   $0x3e4,0x4(%esp)$/;"	l
f0101e11	obj/kern/kernel.asm	/^f0101e11:	00 $/;"	l
f0101e12	obj/kern/kernel.asm	/^f0101e12:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101e19	obj/kern/kernel.asm	/^f0101e19:	e8 7f e2 ff ff       	call   f010009d <_panic>$/;"	l
f0101e1e	obj/kern/kernel.asm	/^f0101e1e:	8b 3d 18 fd 2f f0    	mov    0xf02ffd18,%edi$/;"	l
f0101e24	obj/kern/kernel.asm	/^f0101e24:	a1 1c fd 2f f0       	mov    0xf02ffd1c,%eax$/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101e2c	obj/kern/kernel.asm	/^f0101e2c:	8b 17                	mov    (%edi),%edx$/;"	l
f0101e2e	obj/kern/kernel.asm	/^f0101e2e:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101e34	obj/kern/kernel.asm	/^f0101e34:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101e37	obj/kern/kernel.asm	/^f0101e37:	29 c1                	sub    %eax,%ecx$/;"	l
f0101e39	obj/kern/kernel.asm	/^f0101e39:	89 c8                	mov    %ecx,%eax$/;"	l
f0101e3b	obj/kern/kernel.asm	/^f0101e3b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e41	obj/kern/kernel.asm	/^f0101e41:	39 c2                	cmp    %eax,%edx$/;"	l
f0101e43	obj/kern/kernel.asm	/^f0101e43:	74 24                	je     f0101e69 <mem_init+0x8fe>$/;"	l
f0101e45	obj/kern/kernel.asm	/^f0101e45:	c7 44 24 0c 9c 7e 10 	movl   $0xf0107e9c,0xc(%esp)$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	f0 $/;"	l
f0101e4d	obj/kern/kernel.asm	/^f0101e4d:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101e54	obj/kern/kernel.asm	/^f0101e54:	f0 $/;"	l
f0101e55	obj/kern/kernel.asm	/^f0101e55:	c7 44 24 04 e5 03 00 	movl   $0x3e5,0x4(%esp)$/;"	l
f0101e5c	obj/kern/kernel.asm	/^f0101e5c:	00 $/;"	l
f0101e5d	obj/kern/kernel.asm	/^f0101e5d:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101e64	obj/kern/kernel.asm	/^f0101e64:	e8 34 e2 ff ff       	call   f010009d <_panic>$/;"	l
f0101e69	obj/kern/kernel.asm	/^f0101e69:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101e6e	obj/kern/kernel.asm	/^f0101e6e:	89 f8                	mov    %edi,%eax$/;"	l
f0101e70	obj/kern/kernel.asm	/^f0101e70:	e8 80 ed ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0101e75	obj/kern/kernel.asm	/^f0101e75:	89 da                	mov    %ebx,%edx$/;"	l
f0101e77	obj/kern/kernel.asm	/^f0101e77:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0101e7a	obj/kern/kernel.asm	/^f0101e7a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101e80	obj/kern/kernel.asm	/^f0101e80:	39 d0                	cmp    %edx,%eax$/;"	l
f0101e82	obj/kern/kernel.asm	/^f0101e82:	74 24                	je     f0101ea8 <mem_init+0x93d>$/;"	l
f0101e84	obj/kern/kernel.asm	/^f0101e84:	c7 44 24 0c c4 7e 10 	movl   $0xf0107ec4,0xc(%esp)$/;"	l
f0101e8b	obj/kern/kernel.asm	/^f0101e8b:	f0 $/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101e93	obj/kern/kernel.asm	/^f0101e93:	f0 $/;"	l
f0101e94	obj/kern/kernel.asm	/^f0101e94:	c7 44 24 04 e6 03 00 	movl   $0x3e6,0x4(%esp)$/;"	l
f0101e9b	obj/kern/kernel.asm	/^f0101e9b:	00 $/;"	l
f0101e9c	obj/kern/kernel.asm	/^f0101e9c:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101ea3	obj/kern/kernel.asm	/^f0101ea3:	e8 f5 e1 ff ff       	call   f010009d <_panic>$/;"	l
f0101ea8	obj/kern/kernel.asm	/^f0101ea8:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101ead	obj/kern/kernel.asm	/^f0101ead:	74 24                	je     f0101ed3 <mem_init+0x968>$/;"	l
f0101eaf	obj/kern/kernel.asm	/^f0101eaf:	c7 44 24 0c aa 87 10 	movl   $0xf01087aa,0xc(%esp)$/;"	l
f0101eb6	obj/kern/kernel.asm	/^f0101eb6:	f0 $/;"	l
f0101eb7	obj/kern/kernel.asm	/^f0101eb7:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101ebe	obj/kern/kernel.asm	/^f0101ebe:	f0 $/;"	l
f0101ebf	obj/kern/kernel.asm	/^f0101ebf:	c7 44 24 04 e7 03 00 	movl   $0x3e7,0x4(%esp)$/;"	l
f0101ec6	obj/kern/kernel.asm	/^f0101ec6:	00 $/;"	l
f0101ec7	obj/kern/kernel.asm	/^f0101ec7:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101ece	obj/kern/kernel.asm	/^f0101ece:	e8 ca e1 ff ff       	call   f010009d <_panic>$/;"	l
f0101ed3	obj/kern/kernel.asm	/^f0101ed3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ed6	obj/kern/kernel.asm	/^f0101ed6:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101edb	obj/kern/kernel.asm	/^f0101edb:	74 24                	je     f0101f01 <mem_init+0x996>$/;"	l
f0101edd	obj/kern/kernel.asm	/^f0101edd:	c7 44 24 0c bb 87 10 	movl   $0xf01087bb,0xc(%esp)$/;"	l
f0101ee4	obj/kern/kernel.asm	/^f0101ee4:	f0 $/;"	l
f0101ee5	obj/kern/kernel.asm	/^f0101ee5:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101eec	obj/kern/kernel.asm	/^f0101eec:	f0 $/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	c7 44 24 04 e8 03 00 	movl   $0x3e8,0x4(%esp)$/;"	l
f0101ef4	obj/kern/kernel.asm	/^f0101ef4:	00 $/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101efc	obj/kern/kernel.asm	/^f0101efc:	e8 9c e1 ff ff       	call   f010009d <_panic>$/;"	l
f0101f01	obj/kern/kernel.asm	/^f0101f01:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101f08	obj/kern/kernel.asm	/^f0101f08:	00 $/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101f10	obj/kern/kernel.asm	/^f0101f10:	00 $/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101f15	obj/kern/kernel.asm	/^f0101f15:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	e8 61 f5 ff ff       	call   f010147e <page_insert>$/;"	l
f0101f1d	obj/kern/kernel.asm	/^f0101f1d:	85 c0                	test   %eax,%eax$/;"	l
f0101f1f	obj/kern/kernel.asm	/^f0101f1f:	74 24                	je     f0101f45 <mem_init+0x9da>$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	c7 44 24 0c f4 7e 10 	movl   $0xf0107ef4,0xc(%esp)$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	f0 $/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101f30	obj/kern/kernel.asm	/^f0101f30:	f0 $/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	c7 44 24 04 eb 03 00 	movl   $0x3eb,0x4(%esp)$/;"	l
f0101f38	obj/kern/kernel.asm	/^f0101f38:	00 $/;"	l
f0101f39	obj/kern/kernel.asm	/^f0101f39:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101f40	obj/kern/kernel.asm	/^f0101f40:	e8 58 e1 ff ff       	call   f010009d <_panic>$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f4a	obj/kern/kernel.asm	/^f0101f4a:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	e8 a1 ec ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0101f54	obj/kern/kernel.asm	/^f0101f54:	89 f2                	mov    %esi,%edx$/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	2b 15 1c fd 2f f0    	sub    0xf02ffd1c,%edx$/;"	l
f0101f5c	obj/kern/kernel.asm	/^f0101f5c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f64	obj/kern/kernel.asm	/^f0101f64:	74 24                	je     f0101f8a <mem_init+0xa1f>$/;"	l
f0101f66	obj/kern/kernel.asm	/^f0101f66:	c7 44 24 0c 30 7f 10 	movl   $0xf0107f30,0xc(%esp)$/;"	l
f0101f6d	obj/kern/kernel.asm	/^f0101f6d:	f0 $/;"	l
f0101f6e	obj/kern/kernel.asm	/^f0101f6e:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101f75	obj/kern/kernel.asm	/^f0101f75:	f0 $/;"	l
f0101f76	obj/kern/kernel.asm	/^f0101f76:	c7 44 24 04 ec 03 00 	movl   $0x3ec,0x4(%esp)$/;"	l
f0101f7d	obj/kern/kernel.asm	/^f0101f7d:	00 $/;"	l
f0101f7e	obj/kern/kernel.asm	/^f0101f7e:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101f85	obj/kern/kernel.asm	/^f0101f85:	e8 13 e1 ff ff       	call   f010009d <_panic>$/;"	l
f0101f8a	obj/kern/kernel.asm	/^f0101f8a:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101f8f	obj/kern/kernel.asm	/^f0101f8f:	74 24                	je     f0101fb5 <mem_init+0xa4a>$/;"	l
f0101f91	obj/kern/kernel.asm	/^f0101f91:	c7 44 24 0c cc 87 10 	movl   $0xf01087cc,0xc(%esp)$/;"	l
f0101f98	obj/kern/kernel.asm	/^f0101f98:	f0 $/;"	l
f0101f99	obj/kern/kernel.asm	/^f0101f99:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101fa0	obj/kern/kernel.asm	/^f0101fa0:	f0 $/;"	l
f0101fa1	obj/kern/kernel.asm	/^f0101fa1:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)$/;"	l
f0101fa8	obj/kern/kernel.asm	/^f0101fa8:	00 $/;"	l
f0101fa9	obj/kern/kernel.asm	/^f0101fa9:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101fb0	obj/kern/kernel.asm	/^f0101fb0:	e8 e8 e0 ff ff       	call   f010009d <_panic>$/;"	l
f0101fb5	obj/kern/kernel.asm	/^f0101fb5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101fbc	obj/kern/kernel.asm	/^f0101fbc:	e8 79 f1 ff ff       	call   f010113a <page_alloc>$/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	85 c0                	test   %eax,%eax$/;"	l
f0101fc3	obj/kern/kernel.asm	/^f0101fc3:	74 24                	je     f0101fe9 <mem_init+0xa7e>$/;"	l
f0101fc5	obj/kern/kernel.asm	/^f0101fc5:	c7 44 24 0c 58 87 10 	movl   $0xf0108758,0xc(%esp)$/;"	l
f0101fcc	obj/kern/kernel.asm	/^f0101fcc:	f0 $/;"	l
f0101fcd	obj/kern/kernel.asm	/^f0101fcd:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0101fd4	obj/kern/kernel.asm	/^f0101fd4:	f0 $/;"	l
f0101fd5	obj/kern/kernel.asm	/^f0101fd5:	c7 44 24 04 f0 03 00 	movl   $0x3f0,0x4(%esp)$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	00 $/;"	l
f0101fdd	obj/kern/kernel.asm	/^f0101fdd:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0101fe4	obj/kern/kernel.asm	/^f0101fe4:	e8 b4 e0 ff ff       	call   f010009d <_panic>$/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101ff0	obj/kern/kernel.asm	/^f0101ff0:	00 $/;"	l
f0101ff1	obj/kern/kernel.asm	/^f0101ff1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101ff8	obj/kern/kernel.asm	/^f0101ff8:	00 $/;"	l
f0101ff9	obj/kern/kernel.asm	/^f0101ff9:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102002	obj/kern/kernel.asm	/^f0102002:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102005	obj/kern/kernel.asm	/^f0102005:	e8 74 f4 ff ff       	call   f010147e <page_insert>$/;"	l
f010200a	obj/kern/kernel.asm	/^f010200a:	85 c0                	test   %eax,%eax$/;"	l
f010200c	obj/kern/kernel.asm	/^f010200c:	74 24                	je     f0102032 <mem_init+0xac7>$/;"	l
f010200e	obj/kern/kernel.asm	/^f010200e:	c7 44 24 0c f4 7e 10 	movl   $0xf0107ef4,0xc(%esp)$/;"	l
f0102015	obj/kern/kernel.asm	/^f0102015:	f0 $/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010201d	obj/kern/kernel.asm	/^f010201d:	f0 $/;"	l
f010201e	obj/kern/kernel.asm	/^f010201e:	c7 44 24 04 f3 03 00 	movl   $0x3f3,0x4(%esp)$/;"	l
f0102025	obj/kern/kernel.asm	/^f0102025:	00 $/;"	l
f0102026	obj/kern/kernel.asm	/^f0102026:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010202d	obj/kern/kernel.asm	/^f010202d:	e8 6b e0 ff ff       	call   f010009d <_panic>$/;"	l
f0102032	obj/kern/kernel.asm	/^f0102032:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102037	obj/kern/kernel.asm	/^f0102037:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f010203c	obj/kern/kernel.asm	/^f010203c:	e8 b4 eb ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102041	obj/kern/kernel.asm	/^f0102041:	89 f2                	mov    %esi,%edx$/;"	l
f0102043	obj/kern/kernel.asm	/^f0102043:	2b 15 1c fd 2f f0    	sub    0xf02ffd1c,%edx$/;"	l
f0102049	obj/kern/kernel.asm	/^f0102049:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010204f	obj/kern/kernel.asm	/^f010204f:	39 d0                	cmp    %edx,%eax$/;"	l
f0102051	obj/kern/kernel.asm	/^f0102051:	74 24                	je     f0102077 <mem_init+0xb0c>$/;"	l
f0102053	obj/kern/kernel.asm	/^f0102053:	c7 44 24 0c 30 7f 10 	movl   $0xf0107f30,0xc(%esp)$/;"	l
f010205a	obj/kern/kernel.asm	/^f010205a:	f0 $/;"	l
f010205b	obj/kern/kernel.asm	/^f010205b:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102062	obj/kern/kernel.asm	/^f0102062:	f0 $/;"	l
f0102063	obj/kern/kernel.asm	/^f0102063:	c7 44 24 04 f4 03 00 	movl   $0x3f4,0x4(%esp)$/;"	l
f010206a	obj/kern/kernel.asm	/^f010206a:	00 $/;"	l
f010206b	obj/kern/kernel.asm	/^f010206b:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102072	obj/kern/kernel.asm	/^f0102072:	e8 26 e0 ff ff       	call   f010009d <_panic>$/;"	l
f0102077	obj/kern/kernel.asm	/^f0102077:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010207c	obj/kern/kernel.asm	/^f010207c:	74 24                	je     f01020a2 <mem_init+0xb37>$/;"	l
f010207e	obj/kern/kernel.asm	/^f010207e:	c7 44 24 0c cc 87 10 	movl   $0xf01087cc,0xc(%esp)$/;"	l
f0102085	obj/kern/kernel.asm	/^f0102085:	f0 $/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010208d	obj/kern/kernel.asm	/^f010208d:	f0 $/;"	l
f010208e	obj/kern/kernel.asm	/^f010208e:	c7 44 24 04 f5 03 00 	movl   $0x3f5,0x4(%esp)$/;"	l
f0102095	obj/kern/kernel.asm	/^f0102095:	00 $/;"	l
f0102096	obj/kern/kernel.asm	/^f0102096:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010209d	obj/kern/kernel.asm	/^f010209d:	e8 fb df ff ff       	call   f010009d <_panic>$/;"	l
f01020a2	obj/kern/kernel.asm	/^f01020a2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01020a9	obj/kern/kernel.asm	/^f01020a9:	e8 8c f0 ff ff       	call   f010113a <page_alloc>$/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	85 c0                	test   %eax,%eax$/;"	l
f01020b0	obj/kern/kernel.asm	/^f01020b0:	74 24                	je     f01020d6 <mem_init+0xb6b>$/;"	l
f01020b2	obj/kern/kernel.asm	/^f01020b2:	c7 44 24 0c 58 87 10 	movl   $0xf0108758,0xc(%esp)$/;"	l
f01020b9	obj/kern/kernel.asm	/^f01020b9:	f0 $/;"	l
f01020ba	obj/kern/kernel.asm	/^f01020ba:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	f0 $/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	c7 44 24 04 f9 03 00 	movl   $0x3f9,0x4(%esp)$/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	00 $/;"	l
f01020ca	obj/kern/kernel.asm	/^f01020ca:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	e8 c7 df ff ff       	call   f010009d <_panic>$/;"	l
f01020d6	obj/kern/kernel.asm	/^f01020d6:	8b 15 18 fd 2f f0    	mov    0xf02ffd18,%edx$/;"	l
f01020dc	obj/kern/kernel.asm	/^f01020dc:	8b 02                	mov    (%edx),%eax$/;"	l
f01020de	obj/kern/kernel.asm	/^f01020de:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01020e3	obj/kern/kernel.asm	/^f01020e3:	89 c1                	mov    %eax,%ecx$/;"	l
f01020e5	obj/kern/kernel.asm	/^f01020e5:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01020e8	obj/kern/kernel.asm	/^f01020e8:	3b 0d 14 fd 2f f0    	cmp    0xf02ffd14,%ecx$/;"	l
f01020ee	obj/kern/kernel.asm	/^f01020ee:	72 20                	jb     f0102110 <mem_init+0xba5>$/;"	l
f01020f0	obj/kern/kernel.asm	/^f01020f0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f01020fb	obj/kern/kernel.asm	/^f01020fb:	f0 $/;"	l
f01020fc	obj/kern/kernel.asm	/^f01020fc:	c7 44 24 04 fc 03 00 	movl   $0x3fc,0x4(%esp)$/;"	l
f0102103	obj/kern/kernel.asm	/^f0102103:	00 $/;"	l
f0102104	obj/kern/kernel.asm	/^f0102104:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010210b	obj/kern/kernel.asm	/^f010210b:	e8 8d df ff ff       	call   f010009d <_panic>$/;"	l
f0102110	obj/kern/kernel.asm	/^f0102110:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102115	obj/kern/kernel.asm	/^f0102115:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102118	obj/kern/kernel.asm	/^f0102118:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	00 $/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	00 $/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010212b	obj/kern/kernel.asm	/^f010212b:	e8 05 f1 ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0102133	obj/kern/kernel.asm	/^f0102133:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0102136	obj/kern/kernel.asm	/^f0102136:	39 d0                	cmp    %edx,%eax$/;"	l
f0102138	obj/kern/kernel.asm	/^f0102138:	74 24                	je     f010215e <mem_init+0xbf3>$/;"	l
f010213a	obj/kern/kernel.asm	/^f010213a:	c7 44 24 0c 60 7f 10 	movl   $0xf0107f60,0xc(%esp)$/;"	l
f0102141	obj/kern/kernel.asm	/^f0102141:	f0 $/;"	l
f0102142	obj/kern/kernel.asm	/^f0102142:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102149	obj/kern/kernel.asm	/^f0102149:	f0 $/;"	l
f010214a	obj/kern/kernel.asm	/^f010214a:	c7 44 24 04 fd 03 00 	movl   $0x3fd,0x4(%esp)$/;"	l
f0102151	obj/kern/kernel.asm	/^f0102151:	00 $/;"	l
f0102152	obj/kern/kernel.asm	/^f0102152:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102159	obj/kern/kernel.asm	/^f0102159:	e8 3f df ff ff       	call   f010009d <_panic>$/;"	l
f010215e	obj/kern/kernel.asm	/^f010215e:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0102165	obj/kern/kernel.asm	/^f0102165:	00 $/;"	l
f0102166	obj/kern/kernel.asm	/^f0102166:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010216d	obj/kern/kernel.asm	/^f010216d:	00 $/;"	l
f010216e	obj/kern/kernel.asm	/^f010216e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102172	obj/kern/kernel.asm	/^f0102172:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010217a	obj/kern/kernel.asm	/^f010217a:	e8 ff f2 ff ff       	call   f010147e <page_insert>$/;"	l
f010217f	obj/kern/kernel.asm	/^f010217f:	85 c0                	test   %eax,%eax$/;"	l
f0102181	obj/kern/kernel.asm	/^f0102181:	74 24                	je     f01021a7 <mem_init+0xc3c>$/;"	l
f0102183	obj/kern/kernel.asm	/^f0102183:	c7 44 24 0c a0 7f 10 	movl   $0xf0107fa0,0xc(%esp)$/;"	l
f010218a	obj/kern/kernel.asm	/^f010218a:	f0 $/;"	l
f010218b	obj/kern/kernel.asm	/^f010218b:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102192	obj/kern/kernel.asm	/^f0102192:	f0 $/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	00 $/;"	l
f010219b	obj/kern/kernel.asm	/^f010219b:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01021a2	obj/kern/kernel.asm	/^f01021a2:	e8 f6 de ff ff       	call   f010009d <_panic>$/;"	l
f01021a7	obj/kern/kernel.asm	/^f01021a7:	8b 3d 18 fd 2f f0    	mov    0xf02ffd18,%edi$/;"	l
f01021ad	obj/kern/kernel.asm	/^f01021ad:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	89 f8                	mov    %edi,%eax$/;"	l
f01021b4	obj/kern/kernel.asm	/^f01021b4:	e8 3c ea ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f01021b9	obj/kern/kernel.asm	/^f01021b9:	89 f2                	mov    %esi,%edx$/;"	l
f01021bb	obj/kern/kernel.asm	/^f01021bb:	2b 15 1c fd 2f f0    	sub    0xf02ffd1c,%edx$/;"	l
f01021c1	obj/kern/kernel.asm	/^f01021c1:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01021c4	obj/kern/kernel.asm	/^f01021c4:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01021c7	obj/kern/kernel.asm	/^f01021c7:	39 d0                	cmp    %edx,%eax$/;"	l
f01021c9	obj/kern/kernel.asm	/^f01021c9:	74 24                	je     f01021ef <mem_init+0xc84>$/;"	l
f01021cb	obj/kern/kernel.asm	/^f01021cb:	c7 44 24 0c 30 7f 10 	movl   $0xf0107f30,0xc(%esp)$/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	f0 $/;"	l
f01021d3	obj/kern/kernel.asm	/^f01021d3:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01021da	obj/kern/kernel.asm	/^f01021da:	f0 $/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	c7 44 24 04 01 04 00 	movl   $0x401,0x4(%esp)$/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	00 $/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01021ea	obj/kern/kernel.asm	/^f01021ea:	e8 ae de ff ff       	call   f010009d <_panic>$/;"	l
f01021ef	obj/kern/kernel.asm	/^f01021ef:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01021f4	obj/kern/kernel.asm	/^f01021f4:	74 24                	je     f010221a <mem_init+0xcaf>$/;"	l
f01021f6	obj/kern/kernel.asm	/^f01021f6:	c7 44 24 0c cc 87 10 	movl   $0xf01087cc,0xc(%esp)$/;"	l
f01021fd	obj/kern/kernel.asm	/^f01021fd:	f0 $/;"	l
f01021fe	obj/kern/kernel.asm	/^f01021fe:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102205	obj/kern/kernel.asm	/^f0102205:	f0 $/;"	l
f0102206	obj/kern/kernel.asm	/^f0102206:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)$/;"	l
f010220d	obj/kern/kernel.asm	/^f010220d:	00 $/;"	l
f010220e	obj/kern/kernel.asm	/^f010220e:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102215	obj/kern/kernel.asm	/^f0102215:	e8 83 de ff ff       	call   f010009d <_panic>$/;"	l
f010221a	obj/kern/kernel.asm	/^f010221a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102221	obj/kern/kernel.asm	/^f0102221:	00 $/;"	l
f0102222	obj/kern/kernel.asm	/^f0102222:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102229	obj/kern/kernel.asm	/^f0102229:	00 $/;"	l
f010222a	obj/kern/kernel.asm	/^f010222a:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	e8 03 f0 ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102235	obj/kern/kernel.asm	/^f0102235:	75 24                	jne    f010225b <mem_init+0xcf0>$/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	c7 44 24 0c e0 7f 10 	movl   $0xf0107fe0,0xc(%esp)$/;"	l
f010223e	obj/kern/kernel.asm	/^f010223e:	f0 $/;"	l
f010223f	obj/kern/kernel.asm	/^f010223f:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102246	obj/kern/kernel.asm	/^f0102246:	f0 $/;"	l
f0102247	obj/kern/kernel.asm	/^f0102247:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)$/;"	l
f010224e	obj/kern/kernel.asm	/^f010224e:	00 $/;"	l
f010224f	obj/kern/kernel.asm	/^f010224f:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102256	obj/kern/kernel.asm	/^f0102256:	e8 42 de ff ff       	call   f010009d <_panic>$/;"	l
f010225b	obj/kern/kernel.asm	/^f010225b:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102260	obj/kern/kernel.asm	/^f0102260:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102263	obj/kern/kernel.asm	/^f0102263:	75 24                	jne    f0102289 <mem_init+0xd1e>$/;"	l
f0102265	obj/kern/kernel.asm	/^f0102265:	c7 44 24 0c dd 87 10 	movl   $0xf01087dd,0xc(%esp)$/;"	l
f010226c	obj/kern/kernel.asm	/^f010226c:	f0 $/;"	l
f010226d	obj/kern/kernel.asm	/^f010226d:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102274	obj/kern/kernel.asm	/^f0102274:	f0 $/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	c7 44 24 04 04 04 00 	movl   $0x404,0x4(%esp)$/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	00 $/;"	l
f010227d	obj/kern/kernel.asm	/^f010227d:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102284	obj/kern/kernel.asm	/^f0102284:	e8 14 de ff ff       	call   f010009d <_panic>$/;"	l
f0102289	obj/kern/kernel.asm	/^f0102289:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102290	obj/kern/kernel.asm	/^f0102290:	00 $/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	00 $/;"	l
f0102299	obj/kern/kernel.asm	/^f0102299:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010229d	obj/kern/kernel.asm	/^f010229d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01022a0	obj/kern/kernel.asm	/^f01022a0:	e8 d9 f1 ff ff       	call   f010147e <page_insert>$/;"	l
f01022a5	obj/kern/kernel.asm	/^f01022a5:	85 c0                	test   %eax,%eax$/;"	l
f01022a7	obj/kern/kernel.asm	/^f01022a7:	74 24                	je     f01022cd <mem_init+0xd62>$/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	c7 44 24 0c f4 7e 10 	movl   $0xf0107ef4,0xc(%esp)$/;"	l
f01022b0	obj/kern/kernel.asm	/^f01022b0:	f0 $/;"	l
f01022b1	obj/kern/kernel.asm	/^f01022b1:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01022b8	obj/kern/kernel.asm	/^f01022b8:	f0 $/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9:	c7 44 24 04 07 04 00 	movl   $0x407,0x4(%esp)$/;"	l
f01022c0	obj/kern/kernel.asm	/^f01022c0:	00 $/;"	l
f01022c1	obj/kern/kernel.asm	/^f01022c1:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01022c8	obj/kern/kernel.asm	/^f01022c8:	e8 d0 dd ff ff       	call   f010009d <_panic>$/;"	l
f01022cd	obj/kern/kernel.asm	/^f01022cd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01022d4	obj/kern/kernel.asm	/^f01022d4:	00 $/;"	l
f01022d5	obj/kern/kernel.asm	/^f01022d5:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01022dc	obj/kern/kernel.asm	/^f01022dc:	00 $/;"	l
f01022dd	obj/kern/kernel.asm	/^f01022dd:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f01022e2	obj/kern/kernel.asm	/^f01022e2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01022e5	obj/kern/kernel.asm	/^f01022e5:	e8 4b ef ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f01022ea	obj/kern/kernel.asm	/^f01022ea:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f01022ed	obj/kern/kernel.asm	/^f01022ed:	75 24                	jne    f0102313 <mem_init+0xda8>$/;"	l
f01022ef	obj/kern/kernel.asm	/^f01022ef:	c7 44 24 0c 14 80 10 	movl   $0xf0108014,0xc(%esp)$/;"	l
f01022f6	obj/kern/kernel.asm	/^f01022f6:	f0 $/;"	l
f01022f7	obj/kern/kernel.asm	/^f01022f7:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01022fe	obj/kern/kernel.asm	/^f01022fe:	f0 $/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	c7 44 24 04 08 04 00 	movl   $0x408,0x4(%esp)$/;"	l
f0102306	obj/kern/kernel.asm	/^f0102306:	00 $/;"	l
f0102307	obj/kern/kernel.asm	/^f0102307:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010230e	obj/kern/kernel.asm	/^f010230e:	e8 8a dd ff ff       	call   f010009d <_panic>$/;"	l
f0102313	obj/kern/kernel.asm	/^f0102313:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	00 $/;"	l
f010231b	obj/kern/kernel.asm	/^f010231b:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	00 $/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102328	obj/kern/kernel.asm	/^f0102328:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010232b	obj/kern/kernel.asm	/^f010232b:	e8 05 ef ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f0102330	obj/kern/kernel.asm	/^f0102330:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102333	obj/kern/kernel.asm	/^f0102333:	74 24                	je     f0102359 <mem_init+0xdee>$/;"	l
f0102335	obj/kern/kernel.asm	/^f0102335:	c7 44 24 0c 48 80 10 	movl   $0xf0108048,0xc(%esp)$/;"	l
f010233c	obj/kern/kernel.asm	/^f010233c:	f0 $/;"	l
f010233d	obj/kern/kernel.asm	/^f010233d:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102344	obj/kern/kernel.asm	/^f0102344:	f0 $/;"	l
f0102345	obj/kern/kernel.asm	/^f0102345:	c7 44 24 04 09 04 00 	movl   $0x409,0x4(%esp)$/;"	l
f010234c	obj/kern/kernel.asm	/^f010234c:	00 $/;"	l
f010234d	obj/kern/kernel.asm	/^f010234d:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	e8 44 dd ff ff       	call   f010009d <_panic>$/;"	l
f0102359	obj/kern/kernel.asm	/^f0102359:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102360	obj/kern/kernel.asm	/^f0102360:	00 $/;"	l
f0102361	obj/kern/kernel.asm	/^f0102361:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f0102368	obj/kern/kernel.asm	/^f0102368:	00 $/;"	l
f0102369	obj/kern/kernel.asm	/^f0102369:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010236c	obj/kern/kernel.asm	/^f010236c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102370	obj/kern/kernel.asm	/^f0102370:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102375	obj/kern/kernel.asm	/^f0102375:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102378	obj/kern/kernel.asm	/^f0102378:	e8 01 f1 ff ff       	call   f010147e <page_insert>$/;"	l
f010237d	obj/kern/kernel.asm	/^f010237d:	85 c0                	test   %eax,%eax$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	78 24                	js     f01023a5 <mem_init+0xe3a>$/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	c7 44 24 0c 80 80 10 	movl   $0xf0108080,0xc(%esp)$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	f0 $/;"	l
f0102389	obj/kern/kernel.asm	/^f0102389:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	f0 $/;"	l
f0102391	obj/kern/kernel.asm	/^f0102391:	c7 44 24 04 0c 04 00 	movl   $0x40c,0x4(%esp)$/;"	l
f0102398	obj/kern/kernel.asm	/^f0102398:	00 $/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01023a0	obj/kern/kernel.asm	/^f01023a0:	e8 f8 dc ff ff       	call   f010009d <_panic>$/;"	l
f01023a5	obj/kern/kernel.asm	/^f01023a5:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01023ac	obj/kern/kernel.asm	/^f01023ac:	00 $/;"	l
f01023ad	obj/kern/kernel.asm	/^f01023ad:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01023b4	obj/kern/kernel.asm	/^f01023b4:	00 $/;"	l
f01023b5	obj/kern/kernel.asm	/^f01023b5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01023b9	obj/kern/kernel.asm	/^f01023b9:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f01023be	obj/kern/kernel.asm	/^f01023be:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	e8 b8 f0 ff ff       	call   f010147e <page_insert>$/;"	l
f01023c6	obj/kern/kernel.asm	/^f01023c6:	85 c0                	test   %eax,%eax$/;"	l
f01023c8	obj/kern/kernel.asm	/^f01023c8:	74 24                	je     f01023ee <mem_init+0xe83>$/;"	l
f01023ca	obj/kern/kernel.asm	/^f01023ca:	c7 44 24 0c b8 80 10 	movl   $0xf01080b8,0xc(%esp)$/;"	l
f01023d1	obj/kern/kernel.asm	/^f01023d1:	f0 $/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01023d9	obj/kern/kernel.asm	/^f01023d9:	f0 $/;"	l
f01023da	obj/kern/kernel.asm	/^f01023da:	c7 44 24 04 0f 04 00 	movl   $0x40f,0x4(%esp)$/;"	l
f01023e1	obj/kern/kernel.asm	/^f01023e1:	00 $/;"	l
f01023e2	obj/kern/kernel.asm	/^f01023e2:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01023e9	obj/kern/kernel.asm	/^f01023e9:	e8 af dc ff ff       	call   f010009d <_panic>$/;"	l
f01023ee	obj/kern/kernel.asm	/^f01023ee:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01023f5	obj/kern/kernel.asm	/^f01023f5:	00 $/;"	l
f01023f6	obj/kern/kernel.asm	/^f01023f6:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01023fd	obj/kern/kernel.asm	/^f01023fd:	00 $/;"	l
f01023fe	obj/kern/kernel.asm	/^f01023fe:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102403	obj/kern/kernel.asm	/^f0102403:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102406	obj/kern/kernel.asm	/^f0102406:	e8 2a ee ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010240e	obj/kern/kernel.asm	/^f010240e:	74 24                	je     f0102434 <mem_init+0xec9>$/;"	l
f0102410	obj/kern/kernel.asm	/^f0102410:	c7 44 24 0c 48 80 10 	movl   $0xf0108048,0xc(%esp)$/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	f0 $/;"	l
f0102418	obj/kern/kernel.asm	/^f0102418:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010241f	obj/kern/kernel.asm	/^f010241f:	f0 $/;"	l
f0102420	obj/kern/kernel.asm	/^f0102420:	c7 44 24 04 10 04 00 	movl   $0x410,0x4(%esp)$/;"	l
f0102427	obj/kern/kernel.asm	/^f0102427:	00 $/;"	l
f0102428	obj/kern/kernel.asm	/^f0102428:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010242f	obj/kern/kernel.asm	/^f010242f:	e8 69 dc ff ff       	call   f010009d <_panic>$/;"	l
f0102434	obj/kern/kernel.asm	/^f0102434:	8b 3d 18 fd 2f f0    	mov    0xf02ffd18,%edi$/;"	l
f010243a	obj/kern/kernel.asm	/^f010243a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	89 f8                	mov    %edi,%eax$/;"	l
f0102441	obj/kern/kernel.asm	/^f0102441:	e8 af e7 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	89 c1                	mov    %eax,%ecx$/;"	l
f0102448	obj/kern/kernel.asm	/^f0102448:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010244b	obj/kern/kernel.asm	/^f010244b:	89 d8                	mov    %ebx,%eax$/;"	l
f010244d	obj/kern/kernel.asm	/^f010244d:	2b 05 1c fd 2f f0    	sub    0xf02ffd1c,%eax$/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102456	obj/kern/kernel.asm	/^f0102456:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102459	obj/kern/kernel.asm	/^f0102459:	39 c1                	cmp    %eax,%ecx$/;"	l
f010245b	obj/kern/kernel.asm	/^f010245b:	74 24                	je     f0102481 <mem_init+0xf16>$/;"	l
f010245d	obj/kern/kernel.asm	/^f010245d:	c7 44 24 0c f4 80 10 	movl   $0xf01080f4,0xc(%esp)$/;"	l
f0102464	obj/kern/kernel.asm	/^f0102464:	f0 $/;"	l
f0102465	obj/kern/kernel.asm	/^f0102465:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010246c	obj/kern/kernel.asm	/^f010246c:	f0 $/;"	l
f010246d	obj/kern/kernel.asm	/^f010246d:	c7 44 24 04 13 04 00 	movl   $0x413,0x4(%esp)$/;"	l
f0102474	obj/kern/kernel.asm	/^f0102474:	00 $/;"	l
f0102475	obj/kern/kernel.asm	/^f0102475:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010247c	obj/kern/kernel.asm	/^f010247c:	e8 1c dc ff ff       	call   f010009d <_panic>$/;"	l
f0102481	obj/kern/kernel.asm	/^f0102481:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102486	obj/kern/kernel.asm	/^f0102486:	89 f8                	mov    %edi,%eax$/;"	l
f0102488	obj/kern/kernel.asm	/^f0102488:	e8 68 e7 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f010248d	obj/kern/kernel.asm	/^f010248d:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0102490	obj/kern/kernel.asm	/^f0102490:	74 24                	je     f01024b6 <mem_init+0xf4b>$/;"	l
f0102492	obj/kern/kernel.asm	/^f0102492:	c7 44 24 0c 20 81 10 	movl   $0xf0108120,0xc(%esp)$/;"	l
f0102499	obj/kern/kernel.asm	/^f0102499:	f0 $/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01024a1	obj/kern/kernel.asm	/^f01024a1:	f0 $/;"	l
f01024a2	obj/kern/kernel.asm	/^f01024a2:	c7 44 24 04 14 04 00 	movl   $0x414,0x4(%esp)$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	00 $/;"	l
f01024aa	obj/kern/kernel.asm	/^f01024aa:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01024b1	obj/kern/kernel.asm	/^f01024b1:	e8 e7 db ff ff       	call   f010009d <_panic>$/;"	l
f01024b6	obj/kern/kernel.asm	/^f01024b6:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f01024bb	obj/kern/kernel.asm	/^f01024bb:	74 24                	je     f01024e1 <mem_init+0xf76>$/;"	l
f01024bd	obj/kern/kernel.asm	/^f01024bd:	c7 44 24 0c f3 87 10 	movl   $0xf01087f3,0xc(%esp)$/;"	l
f01024c4	obj/kern/kernel.asm	/^f01024c4:	f0 $/;"	l
f01024c5	obj/kern/kernel.asm	/^f01024c5:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	f0 $/;"	l
f01024cd	obj/kern/kernel.asm	/^f01024cd:	c7 44 24 04 16 04 00 	movl   $0x416,0x4(%esp)$/;"	l
f01024d4	obj/kern/kernel.asm	/^f01024d4:	00 $/;"	l
f01024d5	obj/kern/kernel.asm	/^f01024d5:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01024dc	obj/kern/kernel.asm	/^f01024dc:	e8 bc db ff ff       	call   f010009d <_panic>$/;"	l
f01024e1	obj/kern/kernel.asm	/^f01024e1:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01024e6	obj/kern/kernel.asm	/^f01024e6:	74 24                	je     f010250c <mem_init+0xfa1>$/;"	l
f01024e8	obj/kern/kernel.asm	/^f01024e8:	c7 44 24 0c 04 88 10 	movl   $0xf0108804,0xc(%esp)$/;"	l
f01024ef	obj/kern/kernel.asm	/^f01024ef:	f0 $/;"	l
f01024f0	obj/kern/kernel.asm	/^f01024f0:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01024f7	obj/kern/kernel.asm	/^f01024f7:	f0 $/;"	l
f01024f8	obj/kern/kernel.asm	/^f01024f8:	c7 44 24 04 17 04 00 	movl   $0x417,0x4(%esp)$/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	00 $/;"	l
f0102500	obj/kern/kernel.asm	/^f0102500:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102507	obj/kern/kernel.asm	/^f0102507:	e8 91 db ff ff       	call   f010009d <_panic>$/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102513	obj/kern/kernel.asm	/^f0102513:	e8 22 ec ff ff       	call   f010113a <page_alloc>$/;"	l
f0102518	obj/kern/kernel.asm	/^f0102518:	85 c0                	test   %eax,%eax$/;"	l
f010251a	obj/kern/kernel.asm	/^f010251a:	74 04                	je     f0102520 <mem_init+0xfb5>$/;"	l
f010251c	obj/kern/kernel.asm	/^f010251c:	39 c6                	cmp    %eax,%esi$/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	74 24                	je     f0102544 <mem_init+0xfd9>$/;"	l
f0102520	obj/kern/kernel.asm	/^f0102520:	c7 44 24 0c 50 81 10 	movl   $0xf0108150,0xc(%esp)$/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	f0 $/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010252f	obj/kern/kernel.asm	/^f010252f:	f0 $/;"	l
f0102530	obj/kern/kernel.asm	/^f0102530:	c7 44 24 04 1a 04 00 	movl   $0x41a,0x4(%esp)$/;"	l
f0102537	obj/kern/kernel.asm	/^f0102537:	00 $/;"	l
f0102538	obj/kern/kernel.asm	/^f0102538:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010253f	obj/kern/kernel.asm	/^f010253f:	e8 59 db ff ff       	call   f010009d <_panic>$/;"	l
f0102544	obj/kern/kernel.asm	/^f0102544:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010254b	obj/kern/kernel.asm	/^f010254b:	00 $/;"	l
f010254c	obj/kern/kernel.asm	/^f010254c:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102551	obj/kern/kernel.asm	/^f0102551:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102554	obj/kern/kernel.asm	/^f0102554:	e8 dc ee ff ff       	call   f0101435 <page_remove>$/;"	l
f0102559	obj/kern/kernel.asm	/^f0102559:	8b 3d 18 fd 2f f0    	mov    0xf02ffd18,%edi$/;"	l
f010255f	obj/kern/kernel.asm	/^f010255f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102564	obj/kern/kernel.asm	/^f0102564:	89 f8                	mov    %edi,%eax$/;"	l
f0102566	obj/kern/kernel.asm	/^f0102566:	e8 8a e6 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f010256b	obj/kern/kernel.asm	/^f010256b:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010256e	obj/kern/kernel.asm	/^f010256e:	74 24                	je     f0102594 <mem_init+0x1029>$/;"	l
f0102570	obj/kern/kernel.asm	/^f0102570:	c7 44 24 0c 74 81 10 	movl   $0xf0108174,0xc(%esp)$/;"	l
f0102577	obj/kern/kernel.asm	/^f0102577:	f0 $/;"	l
f0102578	obj/kern/kernel.asm	/^f0102578:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010257f	obj/kern/kernel.asm	/^f010257f:	f0 $/;"	l
f0102580	obj/kern/kernel.asm	/^f0102580:	c7 44 24 04 1e 04 00 	movl   $0x41e,0x4(%esp)$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	00 $/;"	l
f0102588	obj/kern/kernel.asm	/^f0102588:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	e8 09 db ff ff       	call   f010009d <_panic>$/;"	l
f0102594	obj/kern/kernel.asm	/^f0102594:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102599	obj/kern/kernel.asm	/^f0102599:	89 f8                	mov    %edi,%eax$/;"	l
f010259b	obj/kern/kernel.asm	/^f010259b:	e8 55 e6 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f01025a0	obj/kern/kernel.asm	/^f01025a0:	89 da                	mov    %ebx,%edx$/;"	l
f01025a2	obj/kern/kernel.asm	/^f01025a2:	2b 15 1c fd 2f f0    	sub    0xf02ffd1c,%edx$/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01025ab	obj/kern/kernel.asm	/^f01025ab:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01025ae	obj/kern/kernel.asm	/^f01025ae:	39 d0                	cmp    %edx,%eax$/;"	l
f01025b0	obj/kern/kernel.asm	/^f01025b0:	74 24                	je     f01025d6 <mem_init+0x106b>$/;"	l
f01025b2	obj/kern/kernel.asm	/^f01025b2:	c7 44 24 0c 20 81 10 	movl   $0xf0108120,0xc(%esp)$/;"	l
f01025b9	obj/kern/kernel.asm	/^f01025b9:	f0 $/;"	l
f01025ba	obj/kern/kernel.asm	/^f01025ba:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	f0 $/;"	l
f01025c2	obj/kern/kernel.asm	/^f01025c2:	c7 44 24 04 1f 04 00 	movl   $0x41f,0x4(%esp)$/;"	l
f01025c9	obj/kern/kernel.asm	/^f01025c9:	00 $/;"	l
f01025ca	obj/kern/kernel.asm	/^f01025ca:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01025d1	obj/kern/kernel.asm	/^f01025d1:	e8 c7 da ff ff       	call   f010009d <_panic>$/;"	l
f01025d6	obj/kern/kernel.asm	/^f01025d6:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01025db	obj/kern/kernel.asm	/^f01025db:	74 24                	je     f0102601 <mem_init+0x1096>$/;"	l
f01025dd	obj/kern/kernel.asm	/^f01025dd:	c7 44 24 0c aa 87 10 	movl   $0xf01087aa,0xc(%esp)$/;"	l
f01025e4	obj/kern/kernel.asm	/^f01025e4:	f0 $/;"	l
f01025e5	obj/kern/kernel.asm	/^f01025e5:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01025ec	obj/kern/kernel.asm	/^f01025ec:	f0 $/;"	l
f01025ed	obj/kern/kernel.asm	/^f01025ed:	c7 44 24 04 20 04 00 	movl   $0x420,0x4(%esp)$/;"	l
f01025f4	obj/kern/kernel.asm	/^f01025f4:	00 $/;"	l
f01025f5	obj/kern/kernel.asm	/^f01025f5:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01025fc	obj/kern/kernel.asm	/^f01025fc:	e8 9c da ff ff       	call   f010009d <_panic>$/;"	l
f0102601	obj/kern/kernel.asm	/^f0102601:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102606	obj/kern/kernel.asm	/^f0102606:	74 24                	je     f010262c <mem_init+0x10c1>$/;"	l
f0102608	obj/kern/kernel.asm	/^f0102608:	c7 44 24 0c 04 88 10 	movl   $0xf0108804,0xc(%esp)$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	f0 $/;"	l
f0102610	obj/kern/kernel.asm	/^f0102610:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102617	obj/kern/kernel.asm	/^f0102617:	f0 $/;"	l
f0102618	obj/kern/kernel.asm	/^f0102618:	c7 44 24 04 21 04 00 	movl   $0x421,0x4(%esp)$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	00 $/;"	l
f0102620	obj/kern/kernel.asm	/^f0102620:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102627	obj/kern/kernel.asm	/^f0102627:	e8 71 da ff ff       	call   f010009d <_panic>$/;"	l
f010262c	obj/kern/kernel.asm	/^f010262c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0102633	obj/kern/kernel.asm	/^f0102633:	00 $/;"	l
f0102634	obj/kern/kernel.asm	/^f0102634:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010263b	obj/kern/kernel.asm	/^f010263b:	00 $/;"	l
f010263c	obj/kern/kernel.asm	/^f010263c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102640	obj/kern/kernel.asm	/^f0102640:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102643	obj/kern/kernel.asm	/^f0102643:	e8 36 ee ff ff       	call   f010147e <page_insert>$/;"	l
f0102648	obj/kern/kernel.asm	/^f0102648:	85 c0                	test   %eax,%eax$/;"	l
f010264a	obj/kern/kernel.asm	/^f010264a:	74 24                	je     f0102670 <mem_init+0x1105>$/;"	l
f010264c	obj/kern/kernel.asm	/^f010264c:	c7 44 24 0c 98 81 10 	movl   $0xf0108198,0xc(%esp)$/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	f0 $/;"	l
f0102654	obj/kern/kernel.asm	/^f0102654:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010265b	obj/kern/kernel.asm	/^f010265b:	f0 $/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	c7 44 24 04 24 04 00 	movl   $0x424,0x4(%esp)$/;"	l
f0102663	obj/kern/kernel.asm	/^f0102663:	00 $/;"	l
f0102664	obj/kern/kernel.asm	/^f0102664:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010266b	obj/kern/kernel.asm	/^f010266b:	e8 2d da ff ff       	call   f010009d <_panic>$/;"	l
f0102670	obj/kern/kernel.asm	/^f0102670:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	75 24                	jne    f010269b <mem_init+0x1130>$/;"	l
f0102677	obj/kern/kernel.asm	/^f0102677:	c7 44 24 0c 15 88 10 	movl   $0xf0108815,0xc(%esp)$/;"	l
f010267e	obj/kern/kernel.asm	/^f010267e:	f0 $/;"	l
f010267f	obj/kern/kernel.asm	/^f010267f:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102686	obj/kern/kernel.asm	/^f0102686:	f0 $/;"	l
f0102687	obj/kern/kernel.asm	/^f0102687:	c7 44 24 04 25 04 00 	movl   $0x425,0x4(%esp)$/;"	l
f010268e	obj/kern/kernel.asm	/^f010268e:	00 $/;"	l
f010268f	obj/kern/kernel.asm	/^f010268f:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102696	obj/kern/kernel.asm	/^f0102696:	e8 02 da ff ff       	call   f010009d <_panic>$/;"	l
f010269b	obj/kern/kernel.asm	/^f010269b:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f010269e	obj/kern/kernel.asm	/^f010269e:	74 24                	je     f01026c4 <mem_init+0x1159>$/;"	l
f01026a0	obj/kern/kernel.asm	/^f01026a0:	c7 44 24 0c 21 88 10 	movl   $0xf0108821,0xc(%esp)$/;"	l
f01026a7	obj/kern/kernel.asm	/^f01026a7:	f0 $/;"	l
f01026a8	obj/kern/kernel.asm	/^f01026a8:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01026af	obj/kern/kernel.asm	/^f01026af:	f0 $/;"	l
f01026b0	obj/kern/kernel.asm	/^f01026b0:	c7 44 24 04 26 04 00 	movl   $0x426,0x4(%esp)$/;"	l
f01026b7	obj/kern/kernel.asm	/^f01026b7:	00 $/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01026bf	obj/kern/kernel.asm	/^f01026bf:	e8 d9 d9 ff ff       	call   f010009d <_panic>$/;"	l
f01026c4	obj/kern/kernel.asm	/^f01026c4:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01026cb	obj/kern/kernel.asm	/^f01026cb:	00 $/;"	l
f01026cc	obj/kern/kernel.asm	/^f01026cc:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f01026d1	obj/kern/kernel.asm	/^f01026d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01026d4	obj/kern/kernel.asm	/^f01026d4:	e8 5c ed ff ff       	call   f0101435 <page_remove>$/;"	l
f01026d9	obj/kern/kernel.asm	/^f01026d9:	8b 3d 18 fd 2f f0    	mov    0xf02ffd18,%edi$/;"	l
f01026df	obj/kern/kernel.asm	/^f01026df:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01026e4	obj/kern/kernel.asm	/^f01026e4:	89 f8                	mov    %edi,%eax$/;"	l
f01026e6	obj/kern/kernel.asm	/^f01026e6:	e8 0a e5 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f01026eb	obj/kern/kernel.asm	/^f01026eb:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01026ee	obj/kern/kernel.asm	/^f01026ee:	74 24                	je     f0102714 <mem_init+0x11a9>$/;"	l
f01026f0	obj/kern/kernel.asm	/^f01026f0:	c7 44 24 0c 74 81 10 	movl   $0xf0108174,0xc(%esp)$/;"	l
f01026f7	obj/kern/kernel.asm	/^f01026f7:	f0 $/;"	l
f01026f8	obj/kern/kernel.asm	/^f01026f8:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01026ff	obj/kern/kernel.asm	/^f01026ff:	f0 $/;"	l
f0102700	obj/kern/kernel.asm	/^f0102700:	c7 44 24 04 2a 04 00 	movl   $0x42a,0x4(%esp)$/;"	l
f0102707	obj/kern/kernel.asm	/^f0102707:	00 $/;"	l
f0102708	obj/kern/kernel.asm	/^f0102708:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010270f	obj/kern/kernel.asm	/^f010270f:	e8 89 d9 ff ff       	call   f010009d <_panic>$/;"	l
f0102714	obj/kern/kernel.asm	/^f0102714:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102719	obj/kern/kernel.asm	/^f0102719:	89 f8                	mov    %edi,%eax$/;"	l
f010271b	obj/kern/kernel.asm	/^f010271b:	e8 d5 e4 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102720	obj/kern/kernel.asm	/^f0102720:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	74 24                	je     f0102749 <mem_init+0x11de>$/;"	l
f0102725	obj/kern/kernel.asm	/^f0102725:	c7 44 24 0c d0 81 10 	movl   $0xf01081d0,0xc(%esp)$/;"	l
f010272c	obj/kern/kernel.asm	/^f010272c:	f0 $/;"	l
f010272d	obj/kern/kernel.asm	/^f010272d:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102734	obj/kern/kernel.asm	/^f0102734:	f0 $/;"	l
f0102735	obj/kern/kernel.asm	/^f0102735:	c7 44 24 04 2b 04 00 	movl   $0x42b,0x4(%esp)$/;"	l
f010273c	obj/kern/kernel.asm	/^f010273c:	00 $/;"	l
f010273d	obj/kern/kernel.asm	/^f010273d:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102744	obj/kern/kernel.asm	/^f0102744:	e8 54 d9 ff ff       	call   f010009d <_panic>$/;"	l
f0102749	obj/kern/kernel.asm	/^f0102749:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	74 24                	je     f0102774 <mem_init+0x1209>$/;"	l
f0102750	obj/kern/kernel.asm	/^f0102750:	c7 44 24 0c 36 88 10 	movl   $0xf0108836,0xc(%esp)$/;"	l
f0102757	obj/kern/kernel.asm	/^f0102757:	f0 $/;"	l
f0102758	obj/kern/kernel.asm	/^f0102758:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010275f	obj/kern/kernel.asm	/^f010275f:	f0 $/;"	l
f0102760	obj/kern/kernel.asm	/^f0102760:	c7 44 24 04 2c 04 00 	movl   $0x42c,0x4(%esp)$/;"	l
f0102767	obj/kern/kernel.asm	/^f0102767:	00 $/;"	l
f0102768	obj/kern/kernel.asm	/^f0102768:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010276f	obj/kern/kernel.asm	/^f010276f:	e8 29 d9 ff ff       	call   f010009d <_panic>$/;"	l
f0102774	obj/kern/kernel.asm	/^f0102774:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	74 24                	je     f010279f <mem_init+0x1234>$/;"	l
f010277b	obj/kern/kernel.asm	/^f010277b:	c7 44 24 0c 04 88 10 	movl   $0xf0108804,0xc(%esp)$/;"	l
f0102782	obj/kern/kernel.asm	/^f0102782:	f0 $/;"	l
f0102783	obj/kern/kernel.asm	/^f0102783:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010278a	obj/kern/kernel.asm	/^f010278a:	f0 $/;"	l
f010278b	obj/kern/kernel.asm	/^f010278b:	c7 44 24 04 2d 04 00 	movl   $0x42d,0x4(%esp)$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	00 $/;"	l
f0102793	obj/kern/kernel.asm	/^f0102793:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010279a	obj/kern/kernel.asm	/^f010279a:	e8 fe d8 ff ff       	call   f010009d <_panic>$/;"	l
f010279f	obj/kern/kernel.asm	/^f010279f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01027a6	obj/kern/kernel.asm	/^f01027a6:	e8 8f e9 ff ff       	call   f010113a <page_alloc>$/;"	l
f01027ab	obj/kern/kernel.asm	/^f01027ab:	85 c0                	test   %eax,%eax$/;"	l
f01027ad	obj/kern/kernel.asm	/^f01027ad:	74 04                	je     f01027b3 <mem_init+0x1248>$/;"	l
f01027af	obj/kern/kernel.asm	/^f01027af:	39 c3                	cmp    %eax,%ebx$/;"	l
f01027b1	obj/kern/kernel.asm	/^f01027b1:	74 24                	je     f01027d7 <mem_init+0x126c>$/;"	l
f01027b3	obj/kern/kernel.asm	/^f01027b3:	c7 44 24 0c f8 81 10 	movl   $0xf01081f8,0xc(%esp)$/;"	l
f01027ba	obj/kern/kernel.asm	/^f01027ba:	f0 $/;"	l
f01027bb	obj/kern/kernel.asm	/^f01027bb:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01027c2	obj/kern/kernel.asm	/^f01027c2:	f0 $/;"	l
f01027c3	obj/kern/kernel.asm	/^f01027c3:	c7 44 24 04 30 04 00 	movl   $0x430,0x4(%esp)$/;"	l
f01027ca	obj/kern/kernel.asm	/^f01027ca:	00 $/;"	l
f01027cb	obj/kern/kernel.asm	/^f01027cb:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01027d2	obj/kern/kernel.asm	/^f01027d2:	e8 c6 d8 ff ff       	call   f010009d <_panic>$/;"	l
f01027d7	obj/kern/kernel.asm	/^f01027d7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01027de	obj/kern/kernel.asm	/^f01027de:	e8 57 e9 ff ff       	call   f010113a <page_alloc>$/;"	l
f01027e3	obj/kern/kernel.asm	/^f01027e3:	85 c0                	test   %eax,%eax$/;"	l
f01027e5	obj/kern/kernel.asm	/^f01027e5:	74 24                	je     f010280b <mem_init+0x12a0>$/;"	l
f01027e7	obj/kern/kernel.asm	/^f01027e7:	c7 44 24 0c 58 87 10 	movl   $0xf0108758,0xc(%esp)$/;"	l
f01027ee	obj/kern/kernel.asm	/^f01027ee:	f0 $/;"	l
f01027ef	obj/kern/kernel.asm	/^f01027ef:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01027f6	obj/kern/kernel.asm	/^f01027f6:	f0 $/;"	l
f01027f7	obj/kern/kernel.asm	/^f01027f7:	c7 44 24 04 33 04 00 	movl   $0x433,0x4(%esp)$/;"	l
f01027fe	obj/kern/kernel.asm	/^f01027fe:	00 $/;"	l
f01027ff	obj/kern/kernel.asm	/^f01027ff:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102806	obj/kern/kernel.asm	/^f0102806:	e8 92 d8 ff ff       	call   f010009d <_panic>$/;"	l
f010280b	obj/kern/kernel.asm	/^f010280b:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102810	obj/kern/kernel.asm	/^f0102810:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102812	obj/kern/kernel.asm	/^f0102812:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102818	obj/kern/kernel.asm	/^f0102818:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010281b	obj/kern/kernel.asm	/^f010281b:	2b 15 1c fd 2f f0    	sub    0xf02ffd1c,%edx$/;"	l
f0102821	obj/kern/kernel.asm	/^f0102821:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102824	obj/kern/kernel.asm	/^f0102824:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102827	obj/kern/kernel.asm	/^f0102827:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102829	obj/kern/kernel.asm	/^f0102829:	74 24                	je     f010284f <mem_init+0x12e4>$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	c7 44 24 0c 9c 7e 10 	movl   $0xf0107e9c,0xc(%esp)$/;"	l
f0102832	obj/kern/kernel.asm	/^f0102832:	f0 $/;"	l
f0102833	obj/kern/kernel.asm	/^f0102833:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010283a	obj/kern/kernel.asm	/^f010283a:	f0 $/;"	l
f010283b	obj/kern/kernel.asm	/^f010283b:	c7 44 24 04 36 04 00 	movl   $0x436,0x4(%esp)$/;"	l
f0102842	obj/kern/kernel.asm	/^f0102842:	00 $/;"	l
f0102843	obj/kern/kernel.asm	/^f0102843:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010284a	obj/kern/kernel.asm	/^f010284a:	e8 4e d8 ff ff       	call   f010009d <_panic>$/;"	l
f010284f	obj/kern/kernel.asm	/^f010284f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102855	obj/kern/kernel.asm	/^f0102855:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102858	obj/kern/kernel.asm	/^f0102858:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f010285d	obj/kern/kernel.asm	/^f010285d:	74 24                	je     f0102883 <mem_init+0x1318>$/;"	l
f010285f	obj/kern/kernel.asm	/^f010285f:	c7 44 24 0c bb 87 10 	movl   $0xf01087bb,0xc(%esp)$/;"	l
f0102866	obj/kern/kernel.asm	/^f0102866:	f0 $/;"	l
f0102867	obj/kern/kernel.asm	/^f0102867:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010286e	obj/kern/kernel.asm	/^f010286e:	f0 $/;"	l
f010286f	obj/kern/kernel.asm	/^f010286f:	c7 44 24 04 38 04 00 	movl   $0x438,0x4(%esp)$/;"	l
f0102876	obj/kern/kernel.asm	/^f0102876:	00 $/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010287e	obj/kern/kernel.asm	/^f010287e:	e8 1a d8 ff ff       	call   f010009d <_panic>$/;"	l
f0102883	obj/kern/kernel.asm	/^f0102883:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f010288c	obj/kern/kernel.asm	/^f010288c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	e8 36 e9 ff ff       	call   f01011ca <page_free>$/;"	l
f0102894	obj/kern/kernel.asm	/^f0102894:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010289b	obj/kern/kernel.asm	/^f010289b:	00 $/;"	l
f010289c	obj/kern/kernel.asm	/^f010289c:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f01028a3	obj/kern/kernel.asm	/^f01028a3:	00 $/;"	l
f01028a4	obj/kern/kernel.asm	/^f01028a4:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f01028a9	obj/kern/kernel.asm	/^f01028a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	e8 84 e9 ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f01028b1	obj/kern/kernel.asm	/^f01028b1:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01028b4	obj/kern/kernel.asm	/^f01028b4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01028b7	obj/kern/kernel.asm	/^f01028b7:	8b 15 18 fd 2f f0    	mov    0xf02ffd18,%edx$/;"	l
f01028bd	obj/kern/kernel.asm	/^f01028bd:	8b 7a 04             	mov    0x4(%edx),%edi$/;"	l
f01028c0	obj/kern/kernel.asm	/^f01028c0:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f01028c6	obj/kern/kernel.asm	/^f01028c6:	8b 0d 14 fd 2f f0    	mov    0xf02ffd14,%ecx$/;"	l
f01028cc	obj/kern/kernel.asm	/^f01028cc:	89 f8                	mov    %edi,%eax$/;"	l
f01028ce	obj/kern/kernel.asm	/^f01028ce:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01028d1	obj/kern/kernel.asm	/^f01028d1:	39 c8                	cmp    %ecx,%eax$/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	72 20                	jb     f01028f5 <mem_init+0x138a>$/;"	l
f01028d5	obj/kern/kernel.asm	/^f01028d5:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01028d9	obj/kern/kernel.asm	/^f01028d9:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	f0 $/;"	l
f01028e1	obj/kern/kernel.asm	/^f01028e1:	c7 44 24 04 3f 04 00 	movl   $0x43f,0x4(%esp)$/;"	l
f01028e8	obj/kern/kernel.asm	/^f01028e8:	00 $/;"	l
f01028e9	obj/kern/kernel.asm	/^f01028e9:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01028f0	obj/kern/kernel.asm	/^f01028f0:	e8 a8 d7 ff ff       	call   f010009d <_panic>$/;"	l
f01028f5	obj/kern/kernel.asm	/^f01028f5:	81 ef fc ff ff 0f    	sub    $0xffffffc,%edi$/;"	l
f01028fb	obj/kern/kernel.asm	/^f01028fb:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f01028fe	obj/kern/kernel.asm	/^f01028fe:	74 24                	je     f0102924 <mem_init+0x13b9>$/;"	l
f0102900	obj/kern/kernel.asm	/^f0102900:	c7 44 24 0c 47 88 10 	movl   $0xf0108847,0xc(%esp)$/;"	l
f0102907	obj/kern/kernel.asm	/^f0102907:	f0 $/;"	l
f0102908	obj/kern/kernel.asm	/^f0102908:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010290f	obj/kern/kernel.asm	/^f010290f:	f0 $/;"	l
f0102910	obj/kern/kernel.asm	/^f0102910:	c7 44 24 04 40 04 00 	movl   $0x440,0x4(%esp)$/;"	l
f0102917	obj/kern/kernel.asm	/^f0102917:	00 $/;"	l
f0102918	obj/kern/kernel.asm	/^f0102918:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010291f	obj/kern/kernel.asm	/^f010291f:	e8 79 d7 ff ff       	call   f010009d <_panic>$/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)$/;"	l
f010292b	obj/kern/kernel.asm	/^f010292b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010292e	obj/kern/kernel.asm	/^f010292e:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102934	obj/kern/kernel.asm	/^f0102934:	2b 05 1c fd 2f f0    	sub    0xf02ffd1c,%eax$/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010293d	obj/kern/kernel.asm	/^f010293d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102940	obj/kern/kernel.asm	/^f0102940:	89 c2                	mov    %eax,%edx$/;"	l
f0102942	obj/kern/kernel.asm	/^f0102942:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102945	obj/kern/kernel.asm	/^f0102945:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102947	obj/kern/kernel.asm	/^f0102947:	77 20                	ja     f0102969 <mem_init+0x13fe>$/;"	l
f0102949	obj/kern/kernel.asm	/^f0102949:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010294d	obj/kern/kernel.asm	/^f010294d:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f0102954	obj/kern/kernel.asm	/^f0102954:	f0 $/;"	l
f0102955	obj/kern/kernel.asm	/^f0102955:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010295c	obj/kern/kernel.asm	/^f010295c:	00 $/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	c7 04 24 a1 85 10 f0 	movl   $0xf01085a1,(%esp)$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	e8 34 d7 ff ff       	call   f010009d <_panic>$/;"	l
f0102969	obj/kern/kernel.asm	/^f0102969:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102970	obj/kern/kernel.asm	/^f0102970:	00 $/;"	l
f0102971	obj/kern/kernel.asm	/^f0102971:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f0102978	obj/kern/kernel.asm	/^f0102978:	00 $/;"	l
f0102979	obj/kern/kernel.asm	/^f0102979:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010297e	obj/kern/kernel.asm	/^f010297e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102981	obj/kern/kernel.asm	/^f0102981:	e8 11 35 00 00       	call   f0105e97 <memset>$/;"	l
f0102986	obj/kern/kernel.asm	/^f0102986:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102989	obj/kern/kernel.asm	/^f0102989:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010298c	obj/kern/kernel.asm	/^f010298c:	e8 39 e8 ff ff       	call   f01011ca <page_free>$/;"	l
f0102991	obj/kern/kernel.asm	/^f0102991:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102998	obj/kern/kernel.asm	/^f0102998:	00 $/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01029a0	obj/kern/kernel.asm	/^f01029a0:	00 $/;"	l
f01029a1	obj/kern/kernel.asm	/^f01029a1:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f01029a6	obj/kern/kernel.asm	/^f01029a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01029a9	obj/kern/kernel.asm	/^f01029a9:	e8 87 e8 ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f01029ae	obj/kern/kernel.asm	/^f01029ae:	89 fa                	mov    %edi,%edx$/;"	l
f01029b0	obj/kern/kernel.asm	/^f01029b0:	2b 15 1c fd 2f f0    	sub    0xf02ffd1c,%edx$/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01029b9	obj/kern/kernel.asm	/^f01029b9:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01029bc	obj/kern/kernel.asm	/^f01029bc:	89 d0                	mov    %edx,%eax$/;"	l
f01029be	obj/kern/kernel.asm	/^f01029be:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01029c1	obj/kern/kernel.asm	/^f01029c1:	3b 05 14 fd 2f f0    	cmp    0xf02ffd14,%eax$/;"	l
f01029c7	obj/kern/kernel.asm	/^f01029c7:	72 20                	jb     f01029e9 <mem_init+0x147e>$/;"	l
f01029c9	obj/kern/kernel.asm	/^f01029c9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01029cd	obj/kern/kernel.asm	/^f01029cd:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f01029d4	obj/kern/kernel.asm	/^f01029d4:	f0 $/;"	l
f01029d5	obj/kern/kernel.asm	/^f01029d5:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01029dc	obj/kern/kernel.asm	/^f01029dc:	00 $/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	c7 04 24 a1 85 10 f0 	movl   $0xf01085a1,(%esp)$/;"	l
f01029e4	obj/kern/kernel.asm	/^f01029e4:	e8 b4 d6 ff ff       	call   f010009d <_panic>$/;"	l
f01029e9	obj/kern/kernel.asm	/^f01029e9:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01029ef	obj/kern/kernel.asm	/^f01029ef:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01029f2	obj/kern/kernel.asm	/^f01029f2:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f01029f8	obj/kern/kernel.asm	/^f01029f8:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01029fb	obj/kern/kernel.asm	/^f01029fb:	74 24                	je     f0102a21 <mem_init+0x14b6>$/;"	l
f01029fd	obj/kern/kernel.asm	/^f01029fd:	c7 44 24 0c 5f 88 10 	movl   $0xf010885f,0xc(%esp)$/;"	l
f0102a04	obj/kern/kernel.asm	/^f0102a04:	f0 $/;"	l
f0102a05	obj/kern/kernel.asm	/^f0102a05:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102a0c	obj/kern/kernel.asm	/^f0102a0c:	f0 $/;"	l
f0102a0d	obj/kern/kernel.asm	/^f0102a0d:	c7 44 24 04 4a 04 00 	movl   $0x44a,0x4(%esp)$/;"	l
f0102a14	obj/kern/kernel.asm	/^f0102a14:	00 $/;"	l
f0102a15	obj/kern/kernel.asm	/^f0102a15:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102a1c	obj/kern/kernel.asm	/^f0102a1c:	e8 7c d6 ff ff       	call   f010009d <_panic>$/;"	l
f0102a21	obj/kern/kernel.asm	/^f0102a21:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102a24	obj/kern/kernel.asm	/^f0102a24:	39 d0                	cmp    %edx,%eax$/;"	l
f0102a26	obj/kern/kernel.asm	/^f0102a26:	75 d0                	jne    f01029f8 <mem_init+0x148d>$/;"	l
f0102a28	obj/kern/kernel.asm	/^f0102a28:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102a2d	obj/kern/kernel.asm	/^f0102a2d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102a36	obj/kern/kernel.asm	/^f0102a36:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102a3c	obj/kern/kernel.asm	/^f0102a3c:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102a3f	obj/kern/kernel.asm	/^f0102a3f:	89 0d 40 72 2b f0    	mov    %ecx,0xf02b7240$/;"	l
f0102a45	obj/kern/kernel.asm	/^f0102a45:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a48	obj/kern/kernel.asm	/^f0102a48:	e8 7d e7 ff ff       	call   f01011ca <page_free>$/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102a50	obj/kern/kernel.asm	/^f0102a50:	e8 75 e7 ff ff       	call   f01011ca <page_free>$/;"	l
f0102a55	obj/kern/kernel.asm	/^f0102a55:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102a58	obj/kern/kernel.asm	/^f0102a58:	e8 6d e7 ff ff       	call   f01011ca <page_free>$/;"	l
f0102a5d	obj/kern/kernel.asm	/^f0102a5d:	c7 44 24 04 01 10 00 	movl   $0x1001,0x4(%esp)$/;"	l
f0102a64	obj/kern/kernel.asm	/^f0102a64:	00 $/;"	l
f0102a65	obj/kern/kernel.asm	/^f0102a65:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102a6c	obj/kern/kernel.asm	/^f0102a6c:	e8 8b ea ff ff       	call   f01014fc <mmio_map_region>$/;"	l
f0102a71	obj/kern/kernel.asm	/^f0102a71:	89 c3                	mov    %eax,%ebx$/;"	l
f0102a73	obj/kern/kernel.asm	/^f0102a73:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102a7a	obj/kern/kernel.asm	/^f0102a7a:	00 $/;"	l
f0102a7b	obj/kern/kernel.asm	/^f0102a7b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102a82	obj/kern/kernel.asm	/^f0102a82:	e8 75 ea ff ff       	call   f01014fc <mmio_map_region>$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	89 c6                	mov    %eax,%esi$/;"	l
f0102a89	obj/kern/kernel.asm	/^f0102a89:	8d 83 a0 1f 00 00    	lea    0x1fa0(%ebx),%eax$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102a94	obj/kern/kernel.asm	/^f0102a94:	77 08                	ja     f0102a9e <mem_init+0x1533>$/;"	l
f0102a96	obj/kern/kernel.asm	/^f0102a96:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102a9c	obj/kern/kernel.asm	/^f0102a9c:	77 24                	ja     f0102ac2 <mem_init+0x1557>$/;"	l
f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	c7 44 24 0c 1c 82 10 	movl   $0xf010821c,0xc(%esp)$/;"	l
f0102aa5	obj/kern/kernel.asm	/^f0102aa5:	f0 $/;"	l
f0102aa6	obj/kern/kernel.asm	/^f0102aa6:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102aad	obj/kern/kernel.asm	/^f0102aad:	f0 $/;"	l
f0102aae	obj/kern/kernel.asm	/^f0102aae:	c7 44 24 04 5a 04 00 	movl   $0x45a,0x4(%esp)$/;"	l
f0102ab5	obj/kern/kernel.asm	/^f0102ab5:	00 $/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102abd	obj/kern/kernel.asm	/^f0102abd:	e8 db d5 ff ff       	call   f010009d <_panic>$/;"	l
f0102ac2	obj/kern/kernel.asm	/^f0102ac2:	8d 96 a0 1f 00 00    	lea    0x1fa0(%esi),%edx$/;"	l
f0102ac8	obj/kern/kernel.asm	/^f0102ac8:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102ace	obj/kern/kernel.asm	/^f0102ace:	77 08                	ja     f0102ad8 <mem_init+0x156d>$/;"	l
f0102ad0	obj/kern/kernel.asm	/^f0102ad0:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	77 24                	ja     f0102afc <mem_init+0x1591>$/;"	l
f0102ad8	obj/kern/kernel.asm	/^f0102ad8:	c7 44 24 0c 44 82 10 	movl   $0xf0108244,0xc(%esp)$/;"	l
f0102adf	obj/kern/kernel.asm	/^f0102adf:	f0 $/;"	l
f0102ae0	obj/kern/kernel.asm	/^f0102ae0:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102ae7	obj/kern/kernel.asm	/^f0102ae7:	f0 $/;"	l
f0102ae8	obj/kern/kernel.asm	/^f0102ae8:	c7 44 24 04 5b 04 00 	movl   $0x45b,0x4(%esp)$/;"	l
f0102aef	obj/kern/kernel.asm	/^f0102aef:	00 $/;"	l
f0102af0	obj/kern/kernel.asm	/^f0102af0:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102af7	obj/kern/kernel.asm	/^f0102af7:	e8 a1 d5 ff ff       	call   f010009d <_panic>$/;"	l
f0102afc	obj/kern/kernel.asm	/^f0102afc:	89 da                	mov    %ebx,%edx$/;"	l
f0102afe	obj/kern/kernel.asm	/^f0102afe:	09 f2                	or     %esi,%edx$/;"	l
f0102b00	obj/kern/kernel.asm	/^f0102b00:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102b06	obj/kern/kernel.asm	/^f0102b06:	74 24                	je     f0102b2c <mem_init+0x15c1>$/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	c7 44 24 0c 6c 82 10 	movl   $0xf010826c,0xc(%esp)$/;"	l
f0102b0f	obj/kern/kernel.asm	/^f0102b0f:	f0 $/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102b17	obj/kern/kernel.asm	/^f0102b17:	f0 $/;"	l
f0102b18	obj/kern/kernel.asm	/^f0102b18:	c7 44 24 04 5d 04 00 	movl   $0x45d,0x4(%esp)$/;"	l
f0102b1f	obj/kern/kernel.asm	/^f0102b1f:	00 $/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102b27	obj/kern/kernel.asm	/^f0102b27:	e8 71 d5 ff ff       	call   f010009d <_panic>$/;"	l
f0102b2c	obj/kern/kernel.asm	/^f0102b2c:	39 c6                	cmp    %eax,%esi$/;"	l
f0102b2e	obj/kern/kernel.asm	/^f0102b2e:	73 24                	jae    f0102b54 <mem_init+0x15e9>$/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	c7 44 24 0c 76 88 10 	movl   $0xf0108876,0xc(%esp)$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	f0 $/;"	l
f0102b38	obj/kern/kernel.asm	/^f0102b38:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102b3f	obj/kern/kernel.asm	/^f0102b3f:	f0 $/;"	l
f0102b40	obj/kern/kernel.asm	/^f0102b40:	c7 44 24 04 5f 04 00 	movl   $0x45f,0x4(%esp)$/;"	l
f0102b47	obj/kern/kernel.asm	/^f0102b47:	00 $/;"	l
f0102b48	obj/kern/kernel.asm	/^f0102b48:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102b4f	obj/kern/kernel.asm	/^f0102b4f:	e8 49 d5 ff ff       	call   f010009d <_panic>$/;"	l
f0102b54	obj/kern/kernel.asm	/^f0102b54:	8b 3d 18 fd 2f f0    	mov    0xf02ffd18,%edi$/;"	l
f0102b5a	obj/kern/kernel.asm	/^f0102b5a:	89 da                	mov    %ebx,%edx$/;"	l
f0102b5c	obj/kern/kernel.asm	/^f0102b5c:	89 f8                	mov    %edi,%eax$/;"	l
f0102b5e	obj/kern/kernel.asm	/^f0102b5e:	e8 92 e0 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102b63	obj/kern/kernel.asm	/^f0102b63:	85 c0                	test   %eax,%eax$/;"	l
f0102b65	obj/kern/kernel.asm	/^f0102b65:	74 24                	je     f0102b8b <mem_init+0x1620>$/;"	l
f0102b67	obj/kern/kernel.asm	/^f0102b67:	c7 44 24 0c 94 82 10 	movl   $0xf0108294,0xc(%esp)$/;"	l
f0102b6e	obj/kern/kernel.asm	/^f0102b6e:	f0 $/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102b76	obj/kern/kernel.asm	/^f0102b76:	f0 $/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	c7 44 24 04 61 04 00 	movl   $0x461,0x4(%esp)$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	00 $/;"	l
f0102b7f	obj/kern/kernel.asm	/^f0102b7f:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102b86	obj/kern/kernel.asm	/^f0102b86:	e8 12 d5 ff ff       	call   f010009d <_panic>$/;"	l
f0102b8b	obj/kern/kernel.asm	/^f0102b8b:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0102b91	obj/kern/kernel.asm	/^f0102b91:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102b94	obj/kern/kernel.asm	/^f0102b94:	89 c2                	mov    %eax,%edx$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	89 f8                	mov    %edi,%eax$/;"	l
f0102b98	obj/kern/kernel.asm	/^f0102b98:	e8 58 e0 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102b9d	obj/kern/kernel.asm	/^f0102b9d:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102ba2	obj/kern/kernel.asm	/^f0102ba2:	74 24                	je     f0102bc8 <mem_init+0x165d>$/;"	l
f0102ba4	obj/kern/kernel.asm	/^f0102ba4:	c7 44 24 0c b8 82 10 	movl   $0xf01082b8,0xc(%esp)$/;"	l
f0102bab	obj/kern/kernel.asm	/^f0102bab:	f0 $/;"	l
f0102bac	obj/kern/kernel.asm	/^f0102bac:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	f0 $/;"	l
f0102bb4	obj/kern/kernel.asm	/^f0102bb4:	c7 44 24 04 62 04 00 	movl   $0x462,0x4(%esp)$/;"	l
f0102bbb	obj/kern/kernel.asm	/^f0102bbb:	00 $/;"	l
f0102bbc	obj/kern/kernel.asm	/^f0102bbc:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102bc3	obj/kern/kernel.asm	/^f0102bc3:	e8 d5 d4 ff ff       	call   f010009d <_panic>$/;"	l
f0102bc8	obj/kern/kernel.asm	/^f0102bc8:	89 f2                	mov    %esi,%edx$/;"	l
f0102bca	obj/kern/kernel.asm	/^f0102bca:	89 f8                	mov    %edi,%eax$/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	e8 24 e0 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102bd1	obj/kern/kernel.asm	/^f0102bd1:	85 c0                	test   %eax,%eax$/;"	l
f0102bd3	obj/kern/kernel.asm	/^f0102bd3:	74 24                	je     f0102bf9 <mem_init+0x168e>$/;"	l
f0102bd5	obj/kern/kernel.asm	/^f0102bd5:	c7 44 24 0c e8 82 10 	movl   $0xf01082e8,0xc(%esp)$/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	f0 $/;"	l
f0102bdd	obj/kern/kernel.asm	/^f0102bdd:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102be4	obj/kern/kernel.asm	/^f0102be4:	f0 $/;"	l
f0102be5	obj/kern/kernel.asm	/^f0102be5:	c7 44 24 04 63 04 00 	movl   $0x463,0x4(%esp)$/;"	l
f0102bec	obj/kern/kernel.asm	/^f0102bec:	00 $/;"	l
f0102bed	obj/kern/kernel.asm	/^f0102bed:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102bf4	obj/kern/kernel.asm	/^f0102bf4:	e8 a4 d4 ff ff       	call   f010009d <_panic>$/;"	l
f0102bf9	obj/kern/kernel.asm	/^f0102bf9:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f0102bff	obj/kern/kernel.asm	/^f0102bff:	89 f8                	mov    %edi,%eax$/;"	l
f0102c01	obj/kern/kernel.asm	/^f0102c01:	e8 ef df ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102c06	obj/kern/kernel.asm	/^f0102c06:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102c09	obj/kern/kernel.asm	/^f0102c09:	74 24                	je     f0102c2f <mem_init+0x16c4>$/;"	l
f0102c0b	obj/kern/kernel.asm	/^f0102c0b:	c7 44 24 0c 0c 83 10 	movl   $0xf010830c,0xc(%esp)$/;"	l
f0102c12	obj/kern/kernel.asm	/^f0102c12:	f0 $/;"	l
f0102c13	obj/kern/kernel.asm	/^f0102c13:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102c1a	obj/kern/kernel.asm	/^f0102c1a:	f0 $/;"	l
f0102c1b	obj/kern/kernel.asm	/^f0102c1b:	c7 44 24 04 64 04 00 	movl   $0x464,0x4(%esp)$/;"	l
f0102c22	obj/kern/kernel.asm	/^f0102c22:	00 $/;"	l
f0102c23	obj/kern/kernel.asm	/^f0102c23:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102c2a	obj/kern/kernel.asm	/^f0102c2a:	e8 6e d4 ff ff       	call   f010009d <_panic>$/;"	l
f0102c2f	obj/kern/kernel.asm	/^f0102c2f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102c36	obj/kern/kernel.asm	/^f0102c36:	00 $/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102c3b	obj/kern/kernel.asm	/^f0102c3b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102c3e	obj/kern/kernel.asm	/^f0102c3e:	e8 f2 e5 ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f0102c43	obj/kern/kernel.asm	/^f0102c43:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f0102c46	obj/kern/kernel.asm	/^f0102c46:	75 24                	jne    f0102c6c <mem_init+0x1701>$/;"	l
f0102c48	obj/kern/kernel.asm	/^f0102c48:	c7 44 24 0c 38 83 10 	movl   $0xf0108338,0xc(%esp)$/;"	l
f0102c4f	obj/kern/kernel.asm	/^f0102c4f:	f0 $/;"	l
f0102c50	obj/kern/kernel.asm	/^f0102c50:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102c57	obj/kern/kernel.asm	/^f0102c57:	f0 $/;"	l
f0102c58	obj/kern/kernel.asm	/^f0102c58:	c7 44 24 04 66 04 00 	movl   $0x466,0x4(%esp)$/;"	l
f0102c5f	obj/kern/kernel.asm	/^f0102c5f:	00 $/;"	l
f0102c60	obj/kern/kernel.asm	/^f0102c60:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102c67	obj/kern/kernel.asm	/^f0102c67:	e8 31 d4 ff ff       	call   f010009d <_panic>$/;"	l
f0102c6c	obj/kern/kernel.asm	/^f0102c6c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102c73	obj/kern/kernel.asm	/^f0102c73:	00 $/;"	l
f0102c74	obj/kern/kernel.asm	/^f0102c74:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102c78	obj/kern/kernel.asm	/^f0102c78:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102c7d	obj/kern/kernel.asm	/^f0102c7d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c80	obj/kern/kernel.asm	/^f0102c80:	e8 b0 e5 ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f0102c85	obj/kern/kernel.asm	/^f0102c85:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	74 24                	je     f0102cae <mem_init+0x1743>$/;"	l
f0102c8a	obj/kern/kernel.asm	/^f0102c8a:	c7 44 24 0c 7c 83 10 	movl   $0xf010837c,0xc(%esp)$/;"	l
f0102c91	obj/kern/kernel.asm	/^f0102c91:	f0 $/;"	l
f0102c92	obj/kern/kernel.asm	/^f0102c92:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	f0 $/;"	l
f0102c9a	obj/kern/kernel.asm	/^f0102c9a:	c7 44 24 04 67 04 00 	movl   $0x467,0x4(%esp)$/;"	l
f0102ca1	obj/kern/kernel.asm	/^f0102ca1:	00 $/;"	l
f0102ca2	obj/kern/kernel.asm	/^f0102ca2:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102ca9	obj/kern/kernel.asm	/^f0102ca9:	e8 ef d3 ff ff       	call   f010009d <_panic>$/;"	l
f0102cae	obj/kern/kernel.asm	/^f0102cae:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102cb5	obj/kern/kernel.asm	/^f0102cb5:	00 $/;"	l
f0102cb6	obj/kern/kernel.asm	/^f0102cb6:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102cba	obj/kern/kernel.asm	/^f0102cba:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102cc2	obj/kern/kernel.asm	/^f0102cc2:	e8 6e e5 ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f0102cc7	obj/kern/kernel.asm	/^f0102cc7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102ccd	obj/kern/kernel.asm	/^f0102ccd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102cd4	obj/kern/kernel.asm	/^f0102cd4:	00 $/;"	l
f0102cd5	obj/kern/kernel.asm	/^f0102cd5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102cd8	obj/kern/kernel.asm	/^f0102cd8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102cdc	obj/kern/kernel.asm	/^f0102cdc:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102ce1	obj/kern/kernel.asm	/^f0102ce1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ce4	obj/kern/kernel.asm	/^f0102ce4:	e8 4c e5 ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f0102ce9	obj/kern/kernel.asm	/^f0102ce9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102cef	obj/kern/kernel.asm	/^f0102cef:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102cf6	obj/kern/kernel.asm	/^f0102cf6:	00 $/;"	l
f0102cf7	obj/kern/kernel.asm	/^f0102cf7:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102cfb	obj/kern/kernel.asm	/^f0102cfb:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d03	obj/kern/kernel.asm	/^f0102d03:	e8 2d e5 ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f0102d08	obj/kern/kernel.asm	/^f0102d08:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102d0e	obj/kern/kernel.asm	/^f0102d0e:	c7 04 24 88 88 10 f0 	movl   $0xf0108888,(%esp)$/;"	l
f0102d15	obj/kern/kernel.asm	/^f0102d15:	e8 4e 13 00 00       	call   f0104068 <cprintf>$/;"	l
f0102d1a	obj/kern/kernel.asm	/^f0102d1a:	a1 14 fd 2f f0       	mov    0xf02ffd14,%eax$/;"	l
f0102d1f	obj/kern/kernel.asm	/^f0102d1f:	8d 0c c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%ecx$/;"	l
f0102d26	obj/kern/kernel.asm	/^f0102d26:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102d2c	obj/kern/kernel.asm	/^f0102d2c:	a1 1c fd 2f f0       	mov    0xf02ffd1c,%eax$/;"	l
f0102d31	obj/kern/kernel.asm	/^f0102d31:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d36	obj/kern/kernel.asm	/^f0102d36:	77 20                	ja     f0102d58 <mem_init+0x17ed>$/;"	l
f0102d38	obj/kern/kernel.asm	/^f0102d38:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102d3c	obj/kern/kernel.asm	/^f0102d3c:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0102d43	obj/kern/kernel.asm	/^f0102d43:	f0 $/;"	l
f0102d44	obj/kern/kernel.asm	/^f0102d44:	c7 44 24 04 be 00 00 	movl   $0xbe,0x4(%esp)$/;"	l
f0102d4b	obj/kern/kernel.asm	/^f0102d4b:	00 $/;"	l
f0102d4c	obj/kern/kernel.asm	/^f0102d4c:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102d53	obj/kern/kernel.asm	/^f0102d53:	e8 45 d3 ff ff       	call   f010009d <_panic>$/;"	l
f0102d58	obj/kern/kernel.asm	/^f0102d58:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0102d5f	obj/kern/kernel.asm	/^f0102d5f:	00 $/;"	l
f0102d60	obj/kern/kernel.asm	/^f0102d60:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102d65	obj/kern/kernel.asm	/^f0102d65:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d68	obj/kern/kernel.asm	/^f0102d68:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102d6d	obj/kern/kernel.asm	/^f0102d6d:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102d72	obj/kern/kernel.asm	/^f0102d72:	e8 9e e5 ff ff       	call   f0101315 <boot_map_region>$/;"	l
f0102d77	obj/kern/kernel.asm	/^f0102d77:	a1 48 72 2b f0       	mov    0xf02b7248,%eax$/;"	l
f0102d7c	obj/kern/kernel.asm	/^f0102d7c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d81	obj/kern/kernel.asm	/^f0102d81:	77 20                	ja     f0102da3 <mem_init+0x1838>$/;"	l
f0102d83	obj/kern/kernel.asm	/^f0102d83:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102d87	obj/kern/kernel.asm	/^f0102d87:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0102d8e	obj/kern/kernel.asm	/^f0102d8e:	f0 $/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)$/;"	l
f0102d96	obj/kern/kernel.asm	/^f0102d96:	00 $/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102d9e	obj/kern/kernel.asm	/^f0102d9e:	e8 fa d2 ff ff       	call   f010009d <_panic>$/;"	l
f0102da3	obj/kern/kernel.asm	/^f0102da3:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0102daa	obj/kern/kernel.asm	/^f0102daa:	00 $/;"	l
f0102dab	obj/kern/kernel.asm	/^f0102dab:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102db3	obj/kern/kernel.asm	/^f0102db3:	b9 00 f0 01 00       	mov    $0x1f000,%ecx$/;"	l
f0102db8	obj/kern/kernel.asm	/^f0102db8:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102dbd	obj/kern/kernel.asm	/^f0102dbd:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102dc2	obj/kern/kernel.asm	/^f0102dc2:	e8 4e e5 ff ff       	call   f0101315 <boot_map_region>$/;"	l
f0102dc7	obj/kern/kernel.asm	/^f0102dc7:	b8 00 a0 11 f0       	mov    $0xf011a000,%eax$/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	77 20                	ja     f0102df3 <mem_init+0x1888>$/;"	l
f0102dd3	obj/kern/kernel.asm	/^f0102dd3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102dd7	obj/kern/kernel.asm	/^f0102dd7:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0102dde	obj/kern/kernel.asm	/^f0102dde:	f0 $/;"	l
f0102ddf	obj/kern/kernel.asm	/^f0102ddf:	c7 44 24 04 d5 00 00 	movl   $0xd5,0x4(%esp)$/;"	l
f0102de6	obj/kern/kernel.asm	/^f0102de6:	00 $/;"	l
f0102de7	obj/kern/kernel.asm	/^f0102de7:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102dee	obj/kern/kernel.asm	/^f0102dee:	e8 aa d2 ff ff       	call   f010009d <_panic>$/;"	l
f0102df3	obj/kern/kernel.asm	/^f0102df3:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f0102dfa	obj/kern/kernel.asm	/^f0102dfa:	00 $/;"	l
f0102dfb	obj/kern/kernel.asm	/^f0102dfb:	c7 04 24 00 a0 11 00 	movl   $0x11a000,(%esp)$/;"	l
f0102e02	obj/kern/kernel.asm	/^f0102e02:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102e07	obj/kern/kernel.asm	/^f0102e07:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102e11	obj/kern/kernel.asm	/^f0102e11:	e8 ff e4 ff ff       	call   f0101315 <boot_map_region>$/;"	l
f0102e16	obj/kern/kernel.asm	/^f0102e16:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f0102e1d	obj/kern/kernel.asm	/^f0102e1d:	00 $/;"	l
f0102e1e	obj/kern/kernel.asm	/^f0102e1e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102e25	obj/kern/kernel.asm	/^f0102e25:	b9 00 f0 ff 0f       	mov    $0xffff000,%ecx$/;"	l
f0102e2a	obj/kern/kernel.asm	/^f0102e2a:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102e2f	obj/kern/kernel.asm	/^f0102e2f:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102e34	obj/kern/kernel.asm	/^f0102e34:	e8 dc e4 ff ff       	call   f0101315 <boot_map_region>$/;"	l
f0102e39	obj/kern/kernel.asm	/^f0102e39:	bf 00 10 34 f0       	mov    $0xf0341000,%edi$/;"	l
f0102e3e	obj/kern/kernel.asm	/^f0102e3e:	bb 00 10 30 f0       	mov    $0xf0301000,%ebx$/;"	l
f0102e43	obj/kern/kernel.asm	/^f0102e43:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102e48	obj/kern/kernel.asm	/^f0102e48:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102e4e	obj/kern/kernel.asm	/^f0102e4e:	77 20                	ja     f0102e70 <mem_init+0x1905>$/;"	l
f0102e50	obj/kern/kernel.asm	/^f0102e50:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0102e54	obj/kern/kernel.asm	/^f0102e54:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0102e5b	obj/kern/kernel.asm	/^f0102e5b:	f0 $/;"	l
f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	c7 44 24 04 1b 01 00 	movl   $0x11b,0x4(%esp)$/;"	l
f0102e63	obj/kern/kernel.asm	/^f0102e63:	00 $/;"	l
f0102e64	obj/kern/kernel.asm	/^f0102e64:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102e6b	obj/kern/kernel.asm	/^f0102e6b:	e8 2d d2 ff ff       	call   f010009d <_panic>$/;"	l
f0102e70	obj/kern/kernel.asm	/^f0102e70:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	00 $/;"	l
f0102e78	obj/kern/kernel.asm	/^f0102e78:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0102e7e	obj/kern/kernel.asm	/^f0102e7e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102e81	obj/kern/kernel.asm	/^f0102e81:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102e86	obj/kern/kernel.asm	/^f0102e86:	89 f2                	mov    %esi,%edx$/;"	l
f0102e88	obj/kern/kernel.asm	/^f0102e88:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0102e8d	obj/kern/kernel.asm	/^f0102e8d:	e8 83 e4 ff ff       	call   f0101315 <boot_map_region>$/;"	l
f0102e92	obj/kern/kernel.asm	/^f0102e92:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102e98	obj/kern/kernel.asm	/^f0102e98:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102e9e	obj/kern/kernel.asm	/^f0102e9e:	39 fb                	cmp    %edi,%ebx$/;"	l
f0102ea0	obj/kern/kernel.asm	/^f0102ea0:	75 a6                	jne    f0102e48 <mem_init+0x18dd>$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	8b 3d 18 fd 2f f0    	mov    0xf02ffd18,%edi$/;"	l
f0102ea8	obj/kern/kernel.asm	/^f0102ea8:	a1 14 fd 2f f0       	mov    0xf02ffd14,%eax$/;"	l
f0102ead	obj/kern/kernel.asm	/^f0102ead:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102eb0	obj/kern/kernel.asm	/^f0102eb0:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102eb7	obj/kern/kernel.asm	/^f0102eb7:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102ebc	obj/kern/kernel.asm	/^f0102ebc:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102ebf	obj/kern/kernel.asm	/^f0102ebf:	8b 35 1c fd 2f f0    	mov    0xf02ffd1c,%esi$/;"	l
f0102ec5	obj/kern/kernel.asm	/^f0102ec5:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f0102ec8	obj/kern/kernel.asm	/^f0102ec8:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eax$/;"	l
f0102ece	obj/kern/kernel.asm	/^f0102ece:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102ed1	obj/kern/kernel.asm	/^f0102ed1:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102ed6	obj/kern/kernel.asm	/^f0102ed6:	eb 6a                	jmp    f0102f42 <mem_init+0x19d7>$/;"	l
f0102ed8	obj/kern/kernel.asm	/^f0102ed8:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	89 f8                	mov    %edi,%eax$/;"	l
f0102ee0	obj/kern/kernel.asm	/^f0102ee0:	e8 10 dd ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102ee5	obj/kern/kernel.asm	/^f0102ee5:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f0102eec	obj/kern/kernel.asm	/^f0102eec:	77 20                	ja     f0102f0e <mem_init+0x19a3>$/;"	l
f0102eee	obj/kern/kernel.asm	/^f0102eee:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0102ef9	obj/kern/kernel.asm	/^f0102ef9:	f0 $/;"	l
f0102efa	obj/kern/kernel.asm	/^f0102efa:	c7 44 24 04 7f 03 00 	movl   $0x37f,0x4(%esp)$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	00 $/;"	l
f0102f02	obj/kern/kernel.asm	/^f0102f02:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102f09	obj/kern/kernel.asm	/^f0102f09:	e8 8f d1 ff ff       	call   f010009d <_panic>$/;"	l
f0102f0e	obj/kern/kernel.asm	/^f0102f0e:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0102f11	obj/kern/kernel.asm	/^f0102f11:	8d 14 0b             	lea    (%ebx,%ecx,1),%edx$/;"	l
f0102f14	obj/kern/kernel.asm	/^f0102f14:	39 d0                	cmp    %edx,%eax$/;"	l
f0102f16	obj/kern/kernel.asm	/^f0102f16:	74 24                	je     f0102f3c <mem_init+0x19d1>$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	c7 44 24 0c b0 83 10 	movl   $0xf01083b0,0xc(%esp)$/;"	l
f0102f1f	obj/kern/kernel.asm	/^f0102f1f:	f0 $/;"	l
f0102f20	obj/kern/kernel.asm	/^f0102f20:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102f27	obj/kern/kernel.asm	/^f0102f27:	f0 $/;"	l
f0102f28	obj/kern/kernel.asm	/^f0102f28:	c7 44 24 04 7f 03 00 	movl   $0x37f,0x4(%esp)$/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	00 $/;"	l
f0102f30	obj/kern/kernel.asm	/^f0102f30:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102f37	obj/kern/kernel.asm	/^f0102f37:	e8 61 d1 ff ff       	call   f010009d <_panic>$/;"	l
f0102f3c	obj/kern/kernel.asm	/^f0102f3c:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f42	obj/kern/kernel.asm	/^f0102f42:	39 5d d0             	cmp    %ebx,-0x30(%ebp)$/;"	l
f0102f45	obj/kern/kernel.asm	/^f0102f45:	77 91                	ja     f0102ed8 <mem_init+0x196d>$/;"	l
f0102f47	obj/kern/kernel.asm	/^f0102f47:	8b 1d 48 72 2b f0    	mov    0xf02b7248,%ebx$/;"	l
f0102f4d	obj/kern/kernel.asm	/^f0102f4d:	89 de                	mov    %ebx,%esi$/;"	l
f0102f4f	obj/kern/kernel.asm	/^f0102f4f:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102f54	obj/kern/kernel.asm	/^f0102f54:	89 f8                	mov    %edi,%eax$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	e8 9a dc ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102f5b	obj/kern/kernel.asm	/^f0102f5b:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102f61	obj/kern/kernel.asm	/^f0102f61:	77 20                	ja     f0102f83 <mem_init+0x1a18>$/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0102f67	obj/kern/kernel.asm	/^f0102f67:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0102f6e	obj/kern/kernel.asm	/^f0102f6e:	f0 $/;"	l
f0102f6f	obj/kern/kernel.asm	/^f0102f6f:	c7 44 24 04 84 03 00 	movl   $0x384,0x4(%esp)$/;"	l
f0102f76	obj/kern/kernel.asm	/^f0102f76:	00 $/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102f7e	obj/kern/kernel.asm	/^f0102f7e:	e8 1a d1 ff ff       	call   f010009d <_panic>$/;"	l
f0102f83	obj/kern/kernel.asm	/^f0102f83:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0102f88	obj/kern/kernel.asm	/^f0102f88:	81 c6 00 00 40 21    	add    $0x21400000,%esi$/;"	l
f0102f8e	obj/kern/kernel.asm	/^f0102f8e:	8d 14 1e             	lea    (%esi,%ebx,1),%edx$/;"	l
f0102f91	obj/kern/kernel.asm	/^f0102f91:	39 d0                	cmp    %edx,%eax$/;"	l
f0102f93	obj/kern/kernel.asm	/^f0102f93:	74 24                	je     f0102fb9 <mem_init+0x1a4e>$/;"	l
f0102f95	obj/kern/kernel.asm	/^f0102f95:	c7 44 24 0c e4 83 10 	movl   $0xf01083e4,0xc(%esp)$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	f0 $/;"	l
f0102f9d	obj/kern/kernel.asm	/^f0102f9d:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102fa4	obj/kern/kernel.asm	/^f0102fa4:	f0 $/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	c7 44 24 04 84 03 00 	movl   $0x384,0x4(%esp)$/;"	l
f0102fac	obj/kern/kernel.asm	/^f0102fac:	00 $/;"	l
f0102fad	obj/kern/kernel.asm	/^f0102fad:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0102fb4	obj/kern/kernel.asm	/^f0102fb4:	e8 e4 d0 ff ff       	call   f010009d <_panic>$/;"	l
f0102fb9	obj/kern/kernel.asm	/^f0102fb9:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102fbf	obj/kern/kernel.asm	/^f0102fbf:	81 fb 00 f0 c1 ee    	cmp    $0xeec1f000,%ebx$/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	0f 85 aa 05 00 00    	jne    f0103575 <mem_init+0x200a>$/;"	l
f0102fcb	obj/kern/kernel.asm	/^f0102fcb:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0102fce	obj/kern/kernel.asm	/^f0102fce:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0102fd1	obj/kern/kernel.asm	/^f0102fd1:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102fd6	obj/kern/kernel.asm	/^f0102fd6:	eb 3b                	jmp    f0103013 <mem_init+0x1aa8>$/;"	l
f0102fd8	obj/kern/kernel.asm	/^f0102fd8:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102fde	obj/kern/kernel.asm	/^f0102fde:	89 f8                	mov    %edi,%eax$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	e8 10 dc ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102fe5	obj/kern/kernel.asm	/^f0102fe5:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102fe7	obj/kern/kernel.asm	/^f0102fe7:	74 24                	je     f010300d <mem_init+0x1aa2>$/;"	l
f0102fe9	obj/kern/kernel.asm	/^f0102fe9:	c7 44 24 0c 18 84 10 	movl   $0xf0108418,0xc(%esp)$/;"	l
f0102ff0	obj/kern/kernel.asm	/^f0102ff0:	f0 $/;"	l
f0102ff1	obj/kern/kernel.asm	/^f0102ff1:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0102ff8	obj/kern/kernel.asm	/^f0102ff8:	f0 $/;"	l
f0102ff9	obj/kern/kernel.asm	/^f0102ff9:	c7 44 24 04 88 03 00 	movl   $0x388,0x4(%esp)$/;"	l
f0103000	obj/kern/kernel.asm	/^f0103000:	00 $/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0103008	obj/kern/kernel.asm	/^f0103008:	e8 90 d0 ff ff       	call   f010009d <_panic>$/;"	l
f010300d	obj/kern/kernel.asm	/^f010300d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103013	obj/kern/kernel.asm	/^f0103013:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103015	obj/kern/kernel.asm	/^f0103015:	72 c1                	jb     f0102fd8 <mem_init+0x1a6d>$/;"	l
f0103017	obj/kern/kernel.asm	/^f0103017:	c7 45 d0 00 10 30 f0 	movl   $0xf0301000,-0x30(%ebp)$/;"	l
f010301e	obj/kern/kernel.asm	/^f010301e:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f0103025	obj/kern/kernel.asm	/^f0103025:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f010302a	obj/kern/kernel.asm	/^f010302a:	b8 00 10 30 f0       	mov    $0xf0301000,%eax$/;"	l
f010302f	obj/kern/kernel.asm	/^f010302f:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0103037	obj/kern/kernel.asm	/^f0103037:	8d 86 00 80 00 00    	lea    0x8000(%esi),%eax$/;"	l
f010303d	obj/kern/kernel.asm	/^f010303d:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0103040	obj/kern/kernel.asm	/^f0103040:	89 f2                	mov    %esi,%edx$/;"	l
f0103042	obj/kern/kernel.asm	/^f0103042:	89 f8                	mov    %edi,%eax$/;"	l
f0103044	obj/kern/kernel.asm	/^f0103044:	e8 ac db ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0103049	obj/kern/kernel.asm	/^f0103049:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f010304c	obj/kern/kernel.asm	/^f010304c:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f0103052	obj/kern/kernel.asm	/^f0103052:	77 20                	ja     f0103074 <mem_init+0x1b09>$/;"	l
f0103054	obj/kern/kernel.asm	/^f0103054:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0103058	obj/kern/kernel.asm	/^f0103058:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f010305f	obj/kern/kernel.asm	/^f010305f:	f0 $/;"	l
f0103060	obj/kern/kernel.asm	/^f0103060:	c7 44 24 04 90 03 00 	movl   $0x390,0x4(%esp)$/;"	l
f0103067	obj/kern/kernel.asm	/^f0103067:	00 $/;"	l
f0103068	obj/kern/kernel.asm	/^f0103068:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010306f	obj/kern/kernel.asm	/^f010306f:	e8 29 d0 ff ff       	call   f010009d <_panic>$/;"	l
f0103074	obj/kern/kernel.asm	/^f0103074:	89 f3                	mov    %esi,%ebx$/;"	l
f0103076	obj/kern/kernel.asm	/^f0103076:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f0103079	obj/kern/kernel.asm	/^f0103079:	03 4d d4             	add    -0x2c(%ebp),%ecx$/;"	l
f010307c	obj/kern/kernel.asm	/^f010307c:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f010307f	obj/kern/kernel.asm	/^f010307f:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0103082	obj/kern/kernel.asm	/^f0103082:	8d 14 19             	lea    (%ecx,%ebx,1),%edx$/;"	l
f0103085	obj/kern/kernel.asm	/^f0103085:	39 c2                	cmp    %eax,%edx$/;"	l
f0103087	obj/kern/kernel.asm	/^f0103087:	74 24                	je     f01030ad <mem_init+0x1b42>$/;"	l
f0103089	obj/kern/kernel.asm	/^f0103089:	c7 44 24 0c 40 84 10 	movl   $0xf0108440,0xc(%esp)$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	f0 $/;"	l
f0103091	obj/kern/kernel.asm	/^f0103091:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0103098	obj/kern/kernel.asm	/^f0103098:	f0 $/;"	l
f0103099	obj/kern/kernel.asm	/^f0103099:	c7 44 24 04 90 03 00 	movl   $0x390,0x4(%esp)$/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0:	00 $/;"	l
f01030a1	obj/kern/kernel.asm	/^f01030a1:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01030a8	obj/kern/kernel.asm	/^f01030a8:	e8 f0 cf ff ff       	call   f010009d <_panic>$/;"	l
f01030ad	obj/kern/kernel.asm	/^f01030ad:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01030b3	obj/kern/kernel.asm	/^f01030b3:	3b 5d cc             	cmp    -0x34(%ebp),%ebx$/;"	l
f01030b6	obj/kern/kernel.asm	/^f01030b6:	0f 85 a9 04 00 00    	jne    f0103565 <mem_init+0x1ffa>$/;"	l
f01030bc	obj/kern/kernel.asm	/^f01030bc:	8d 9e 00 80 ff ff    	lea    -0x8000(%esi),%ebx$/;"	l
f01030c2	obj/kern/kernel.asm	/^f01030c2:	89 da                	mov    %ebx,%edx$/;"	l
f01030c4	obj/kern/kernel.asm	/^f01030c4:	89 f8                	mov    %edi,%eax$/;"	l
f01030c6	obj/kern/kernel.asm	/^f01030c6:	e8 2a db ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f01030cb	obj/kern/kernel.asm	/^f01030cb:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01030ce	obj/kern/kernel.asm	/^f01030ce:	74 24                	je     f01030f4 <mem_init+0x1b89>$/;"	l
f01030d0	obj/kern/kernel.asm	/^f01030d0:	c7 44 24 0c 88 84 10 	movl   $0xf0108488,0xc(%esp)$/;"	l
f01030d7	obj/kern/kernel.asm	/^f01030d7:	f0 $/;"	l
f01030d8	obj/kern/kernel.asm	/^f01030d8:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01030df	obj/kern/kernel.asm	/^f01030df:	f0 $/;"	l
f01030e0	obj/kern/kernel.asm	/^f01030e0:	c7 44 24 04 92 03 00 	movl   $0x392,0x4(%esp)$/;"	l
f01030e7	obj/kern/kernel.asm	/^f01030e7:	00 $/;"	l
f01030e8	obj/kern/kernel.asm	/^f01030e8:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01030ef	obj/kern/kernel.asm	/^f01030ef:	e8 a9 cf ff ff       	call   f010009d <_panic>$/;"	l
f01030f4	obj/kern/kernel.asm	/^f01030f4:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01030fa	obj/kern/kernel.asm	/^f01030fa:	39 de                	cmp    %ebx,%esi$/;"	l
f01030fc	obj/kern/kernel.asm	/^f01030fc:	75 c4                	jne    f01030c2 <mem_init+0x1b57>$/;"	l
f01030fe	obj/kern/kernel.asm	/^f01030fe:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0103104	obj/kern/kernel.asm	/^f0103104:	81 45 d4 00 80 01 00 	addl   $0x18000,-0x2c(%ebp)$/;"	l
f010310b	obj/kern/kernel.asm	/^f010310b:	81 45 d0 00 80 00 00 	addl   $0x8000,-0x30(%ebp)$/;"	l
f0103112	obj/kern/kernel.asm	/^f0103112:	81 fe 00 80 f7 ef    	cmp    $0xeff78000,%esi$/;"	l
f0103118	obj/kern/kernel.asm	/^f0103118:	0f 85 19 ff ff ff    	jne    f0103037 <mem_init+0x1acc>$/;"	l
f010311e	obj/kern/kernel.asm	/^f010311e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103123	obj/kern/kernel.asm	/^f0103123:	e9 c2 00 00 00       	jmp    f01031ea <mem_init+0x1c7f>$/;"	l
f0103128	obj/kern/kernel.asm	/^f0103128:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f010312e	obj/kern/kernel.asm	/^f010312e:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0103131	obj/kern/kernel.asm	/^f0103131:	77 2e                	ja     f0103161 <mem_init+0x1bf6>$/;"	l
f0103133	obj/kern/kernel.asm	/^f0103133:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f0103137	obj/kern/kernel.asm	/^f0103137:	0f 85 aa 00 00 00    	jne    f01031e7 <mem_init+0x1c7c>$/;"	l
f010313d	obj/kern/kernel.asm	/^f010313d:	c7 44 24 0c a1 88 10 	movl   $0xf01088a1,0xc(%esp)$/;"	l
f0103144	obj/kern/kernel.asm	/^f0103144:	f0 $/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010314c	obj/kern/kernel.asm	/^f010314c:	f0 $/;"	l
f010314d	obj/kern/kernel.asm	/^f010314d:	c7 44 24 04 9d 03 00 	movl   $0x39d,0x4(%esp)$/;"	l
f0103154	obj/kern/kernel.asm	/^f0103154:	00 $/;"	l
f0103155	obj/kern/kernel.asm	/^f0103155:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010315c	obj/kern/kernel.asm	/^f010315c:	e8 3c cf ff ff       	call   f010009d <_panic>$/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0103166	obj/kern/kernel.asm	/^f0103166:	76 55                	jbe    f01031bd <mem_init+0x1c52>$/;"	l
f0103168	obj/kern/kernel.asm	/^f0103168:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f010316b	obj/kern/kernel.asm	/^f010316b:	f6 c2 01             	test   $0x1,%dl$/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	75 24                	jne    f0103194 <mem_init+0x1c29>$/;"	l
f0103170	obj/kern/kernel.asm	/^f0103170:	c7 44 24 0c a1 88 10 	movl   $0xf01088a1,0xc(%esp)$/;"	l
f0103177	obj/kern/kernel.asm	/^f0103177:	f0 $/;"	l
f0103178	obj/kern/kernel.asm	/^f0103178:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010317f	obj/kern/kernel.asm	/^f010317f:	f0 $/;"	l
f0103180	obj/kern/kernel.asm	/^f0103180:	c7 44 24 04 a1 03 00 	movl   $0x3a1,0x4(%esp)$/;"	l
f0103187	obj/kern/kernel.asm	/^f0103187:	00 $/;"	l
f0103188	obj/kern/kernel.asm	/^f0103188:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010318f	obj/kern/kernel.asm	/^f010318f:	e8 09 cf ff ff       	call   f010009d <_panic>$/;"	l
f0103194	obj/kern/kernel.asm	/^f0103194:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0103197	obj/kern/kernel.asm	/^f0103197:	75 4e                	jne    f01031e7 <mem_init+0x1c7c>$/;"	l
f0103199	obj/kern/kernel.asm	/^f0103199:	c7 44 24 0c b2 88 10 	movl   $0xf01088b2,0xc(%esp)$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	f0 $/;"	l
f01031a1	obj/kern/kernel.asm	/^f01031a1:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	f0 $/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	c7 44 24 04 a2 03 00 	movl   $0x3a2,0x4(%esp)$/;"	l
f01031b0	obj/kern/kernel.asm	/^f01031b0:	00 $/;"	l
f01031b1	obj/kern/kernel.asm	/^f01031b1:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01031b8	obj/kern/kernel.asm	/^f01031b8:	e8 e0 ce ff ff       	call   f010009d <_panic>$/;"	l
f01031bd	obj/kern/kernel.asm	/^f01031bd:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f01031c1	obj/kern/kernel.asm	/^f01031c1:	74 24                	je     f01031e7 <mem_init+0x1c7c>$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	c7 44 24 0c c3 88 10 	movl   $0xf01088c3,0xc(%esp)$/;"	l
f01031ca	obj/kern/kernel.asm	/^f01031ca:	f0 $/;"	l
f01031cb	obj/kern/kernel.asm	/^f01031cb:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01031d2	obj/kern/kernel.asm	/^f01031d2:	f0 $/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	c7 44 24 04 a4 03 00 	movl   $0x3a4,0x4(%esp)$/;"	l
f01031da	obj/kern/kernel.asm	/^f01031da:	00 $/;"	l
f01031db	obj/kern/kernel.asm	/^f01031db:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01031e2	obj/kern/kernel.asm	/^f01031e2:	e8 b6 ce ff ff       	call   f010009d <_panic>$/;"	l
f01031e7	obj/kern/kernel.asm	/^f01031e7:	83 c0 01             	add    $0x1,%eax$/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f01031ef	obj/kern/kernel.asm	/^f01031ef:	0f 85 33 ff ff ff    	jne    f0103128 <mem_init+0x1bbd>$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	c7 04 24 ac 84 10 f0 	movl   $0xf01084ac,(%esp)$/;"	l
f01031fc	obj/kern/kernel.asm	/^f01031fc:	e8 67 0e 00 00       	call   f0104068 <cprintf>$/;"	l
f0103201	obj/kern/kernel.asm	/^f0103201:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0103206	obj/kern/kernel.asm	/^f0103206:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010320b	obj/kern/kernel.asm	/^f010320b:	77 20                	ja     f010322d <mem_init+0x1cc2>$/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103211	obj/kern/kernel.asm	/^f0103211:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0103218	obj/kern/kernel.asm	/^f0103218:	f0 $/;"	l
f0103219	obj/kern/kernel.asm	/^f0103219:	c7 44 24 04 ef 00 00 	movl   $0xef,0x4(%esp)$/;"	l
f0103220	obj/kern/kernel.asm	/^f0103220:	00 $/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0103228	obj/kern/kernel.asm	/^f0103228:	e8 70 ce ff ff       	call   f010009d <_panic>$/;"	l
f010322d	obj/kern/kernel.asm	/^f010322d:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103232	obj/kern/kernel.asm	/^f0103232:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010323a	obj/kern/kernel.asm	/^f010323a:	e8 c3 da ff ff       	call   f0100d02 <check_page_free_list>$/;"	l
f010323f	obj/kern/kernel.asm	/^f010323f:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0103242	obj/kern/kernel.asm	/^f0103242:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f010324a	obj/kern/kernel.asm	/^f010324a:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010324d	obj/kern/kernel.asm	/^f010324d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103254	obj/kern/kernel.asm	/^f0103254:	e8 e1 de ff ff       	call   f010113a <page_alloc>$/;"	l
f0103259	obj/kern/kernel.asm	/^f0103259:	89 c3                	mov    %eax,%ebx$/;"	l
f010325b	obj/kern/kernel.asm	/^f010325b:	85 c0                	test   %eax,%eax$/;"	l
f010325d	obj/kern/kernel.asm	/^f010325d:	75 24                	jne    f0103283 <mem_init+0x1d18>$/;"	l
f010325f	obj/kern/kernel.asm	/^f010325f:	c7 44 24 0c ad 86 10 	movl   $0xf01086ad,0xc(%esp)$/;"	l
f0103266	obj/kern/kernel.asm	/^f0103266:	f0 $/;"	l
f0103267	obj/kern/kernel.asm	/^f0103267:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010326e	obj/kern/kernel.asm	/^f010326e:	f0 $/;"	l
f010326f	obj/kern/kernel.asm	/^f010326f:	c7 44 24 04 7c 04 00 	movl   $0x47c,0x4(%esp)$/;"	l
f0103276	obj/kern/kernel.asm	/^f0103276:	00 $/;"	l
f0103277	obj/kern/kernel.asm	/^f0103277:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010327e	obj/kern/kernel.asm	/^f010327e:	e8 1a ce ff ff       	call   f010009d <_panic>$/;"	l
f0103283	obj/kern/kernel.asm	/^f0103283:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	e8 ab de ff ff       	call   f010113a <page_alloc>$/;"	l
f010328f	obj/kern/kernel.asm	/^f010328f:	89 c7                	mov    %eax,%edi$/;"	l
f0103291	obj/kern/kernel.asm	/^f0103291:	85 c0                	test   %eax,%eax$/;"	l
f0103293	obj/kern/kernel.asm	/^f0103293:	75 24                	jne    f01032b9 <mem_init+0x1d4e>$/;"	l
f0103295	obj/kern/kernel.asm	/^f0103295:	c7 44 24 0c c3 86 10 	movl   $0xf01086c3,0xc(%esp)$/;"	l
f010329c	obj/kern/kernel.asm	/^f010329c:	f0 $/;"	l
f010329d	obj/kern/kernel.asm	/^f010329d:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01032a4	obj/kern/kernel.asm	/^f01032a4:	f0 $/;"	l
f01032a5	obj/kern/kernel.asm	/^f01032a5:	c7 44 24 04 7d 04 00 	movl   $0x47d,0x4(%esp)$/;"	l
f01032ac	obj/kern/kernel.asm	/^f01032ac:	00 $/;"	l
f01032ad	obj/kern/kernel.asm	/^f01032ad:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01032b4	obj/kern/kernel.asm	/^f01032b4:	e8 e4 cd ff ff       	call   f010009d <_panic>$/;"	l
f01032b9	obj/kern/kernel.asm	/^f01032b9:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01032c0	obj/kern/kernel.asm	/^f01032c0:	e8 75 de ff ff       	call   f010113a <page_alloc>$/;"	l
f01032c5	obj/kern/kernel.asm	/^f01032c5:	89 c6                	mov    %eax,%esi$/;"	l
f01032c7	obj/kern/kernel.asm	/^f01032c7:	85 c0                	test   %eax,%eax$/;"	l
f01032c9	obj/kern/kernel.asm	/^f01032c9:	75 24                	jne    f01032ef <mem_init+0x1d84>$/;"	l
f01032cb	obj/kern/kernel.asm	/^f01032cb:	c7 44 24 0c d9 86 10 	movl   $0xf01086d9,0xc(%esp)$/;"	l
f01032d2	obj/kern/kernel.asm	/^f01032d2:	f0 $/;"	l
f01032d3	obj/kern/kernel.asm	/^f01032d3:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01032da	obj/kern/kernel.asm	/^f01032da:	f0 $/;"	l
f01032db	obj/kern/kernel.asm	/^f01032db:	c7 44 24 04 7e 04 00 	movl   $0x47e,0x4(%esp)$/;"	l
f01032e2	obj/kern/kernel.asm	/^f01032e2:	00 $/;"	l
f01032e3	obj/kern/kernel.asm	/^f01032e3:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01032ea	obj/kern/kernel.asm	/^f01032ea:	e8 ae cd ff ff       	call   f010009d <_panic>$/;"	l
f01032ef	obj/kern/kernel.asm	/^f01032ef:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01032f2	obj/kern/kernel.asm	/^f01032f2:	e8 d3 de ff ff       	call   f01011ca <page_free>$/;"	l
f01032f7	obj/kern/kernel.asm	/^f01032f7:	89 f8                	mov    %edi,%eax$/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	e8 b2 d8 ff ff       	call   f0100bb0 <page2kva>$/;"	l
f01032fe	obj/kern/kernel.asm	/^f01032fe:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103305	obj/kern/kernel.asm	/^f0103305:	00 $/;"	l
f0103306	obj/kern/kernel.asm	/^f0103306:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f010330d	obj/kern/kernel.asm	/^f010330d:	00 $/;"	l
f010330e	obj/kern/kernel.asm	/^f010330e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103311	obj/kern/kernel.asm	/^f0103311:	e8 81 2b 00 00       	call   f0105e97 <memset>$/;"	l
f0103316	obj/kern/kernel.asm	/^f0103316:	89 f0                	mov    %esi,%eax$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	e8 93 d8 ff ff       	call   f0100bb0 <page2kva>$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103324	obj/kern/kernel.asm	/^f0103324:	00 $/;"	l
f0103325	obj/kern/kernel.asm	/^f0103325:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f010332c	obj/kern/kernel.asm	/^f010332c:	00 $/;"	l
f010332d	obj/kern/kernel.asm	/^f010332d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103330	obj/kern/kernel.asm	/^f0103330:	e8 62 2b 00 00       	call   f0105e97 <memset>$/;"	l
f0103335	obj/kern/kernel.asm	/^f0103335:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010333c	obj/kern/kernel.asm	/^f010333c:	00 $/;"	l
f010333d	obj/kern/kernel.asm	/^f010333d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103344	obj/kern/kernel.asm	/^f0103344:	00 $/;"	l
f0103345	obj/kern/kernel.asm	/^f0103345:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0103349	obj/kern/kernel.asm	/^f0103349:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f010334e	obj/kern/kernel.asm	/^f010334e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103351	obj/kern/kernel.asm	/^f0103351:	e8 28 e1 ff ff       	call   f010147e <page_insert>$/;"	l
f0103356	obj/kern/kernel.asm	/^f0103356:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f010335b	obj/kern/kernel.asm	/^f010335b:	74 24                	je     f0103381 <mem_init+0x1e16>$/;"	l
f010335d	obj/kern/kernel.asm	/^f010335d:	c7 44 24 0c aa 87 10 	movl   $0xf01087aa,0xc(%esp)$/;"	l
f0103364	obj/kern/kernel.asm	/^f0103364:	f0 $/;"	l
f0103365	obj/kern/kernel.asm	/^f0103365:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010336c	obj/kern/kernel.asm	/^f010336c:	f0 $/;"	l
f010336d	obj/kern/kernel.asm	/^f010336d:	c7 44 24 04 83 04 00 	movl   $0x483,0x4(%esp)$/;"	l
f0103374	obj/kern/kernel.asm	/^f0103374:	00 $/;"	l
f0103375	obj/kern/kernel.asm	/^f0103375:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f010337c	obj/kern/kernel.asm	/^f010337c:	e8 1c cd ff ff       	call   f010009d <_panic>$/;"	l
f0103381	obj/kern/kernel.asm	/^f0103381:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0103388	obj/kern/kernel.asm	/^f0103388:	01 01 01 $/;"	l
f010338b	obj/kern/kernel.asm	/^f010338b:	74 24                	je     f01033b1 <mem_init+0x1e46>$/;"	l
f010338d	obj/kern/kernel.asm	/^f010338d:	c7 44 24 0c cc 84 10 	movl   $0xf01084cc,0xc(%esp)$/;"	l
f0103394	obj/kern/kernel.asm	/^f0103394:	f0 $/;"	l
f0103395	obj/kern/kernel.asm	/^f0103395:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f010339c	obj/kern/kernel.asm	/^f010339c:	f0 $/;"	l
f010339d	obj/kern/kernel.asm	/^f010339d:	c7 44 24 04 84 04 00 	movl   $0x484,0x4(%esp)$/;"	l
f01033a4	obj/kern/kernel.asm	/^f01033a4:	00 $/;"	l
f01033a5	obj/kern/kernel.asm	/^f01033a5:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01033ac	obj/kern/kernel.asm	/^f01033ac:	e8 ec cc ff ff       	call   f010009d <_panic>$/;"	l
f01033b1	obj/kern/kernel.asm	/^f01033b1:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01033b8	obj/kern/kernel.asm	/^f01033b8:	00 $/;"	l
f01033b9	obj/kern/kernel.asm	/^f01033b9:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01033c0	obj/kern/kernel.asm	/^f01033c0:	00 $/;"	l
f01033c1	obj/kern/kernel.asm	/^f01033c1:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f01033ca	obj/kern/kernel.asm	/^f01033ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd:	e8 ac e0 ff ff       	call   f010147e <page_insert>$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f01033d9	obj/kern/kernel.asm	/^f01033d9:	02 02 02 $/;"	l
f01033dc	obj/kern/kernel.asm	/^f01033dc:	74 24                	je     f0103402 <mem_init+0x1e97>$/;"	l
f01033de	obj/kern/kernel.asm	/^f01033de:	c7 44 24 0c f0 84 10 	movl   $0xf01084f0,0xc(%esp)$/;"	l
f01033e5	obj/kern/kernel.asm	/^f01033e5:	f0 $/;"	l
f01033e6	obj/kern/kernel.asm	/^f01033e6:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01033ed	obj/kern/kernel.asm	/^f01033ed:	f0 $/;"	l
f01033ee	obj/kern/kernel.asm	/^f01033ee:	c7 44 24 04 86 04 00 	movl   $0x486,0x4(%esp)$/;"	l
f01033f5	obj/kern/kernel.asm	/^f01033f5:	00 $/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01033fd	obj/kern/kernel.asm	/^f01033fd:	e8 9b cc ff ff       	call   f010009d <_panic>$/;"	l
f0103402	obj/kern/kernel.asm	/^f0103402:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	74 24                	je     f010342d <mem_init+0x1ec2>$/;"	l
f0103409	obj/kern/kernel.asm	/^f0103409:	c7 44 24 0c cc 87 10 	movl   $0xf01087cc,0xc(%esp)$/;"	l
f0103410	obj/kern/kernel.asm	/^f0103410:	f0 $/;"	l
f0103411	obj/kern/kernel.asm	/^f0103411:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0103418	obj/kern/kernel.asm	/^f0103418:	f0 $/;"	l
f0103419	obj/kern/kernel.asm	/^f0103419:	c7 44 24 04 87 04 00 	movl   $0x487,0x4(%esp)$/;"	l
f0103420	obj/kern/kernel.asm	/^f0103420:	00 $/;"	l
f0103421	obj/kern/kernel.asm	/^f0103421:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0103428	obj/kern/kernel.asm	/^f0103428:	e8 70 cc ff ff       	call   f010009d <_panic>$/;"	l
f010342d	obj/kern/kernel.asm	/^f010342d:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0103432	obj/kern/kernel.asm	/^f0103432:	74 24                	je     f0103458 <mem_init+0x1eed>$/;"	l
f0103434	obj/kern/kernel.asm	/^f0103434:	c7 44 24 0c 36 88 10 	movl   $0xf0108836,0xc(%esp)$/;"	l
f010343b	obj/kern/kernel.asm	/^f010343b:	f0 $/;"	l
f010343c	obj/kern/kernel.asm	/^f010343c:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0103443	obj/kern/kernel.asm	/^f0103443:	f0 $/;"	l
f0103444	obj/kern/kernel.asm	/^f0103444:	c7 44 24 04 88 04 00 	movl   $0x488,0x4(%esp)$/;"	l
f010344b	obj/kern/kernel.asm	/^f010344b:	00 $/;"	l
f010344c	obj/kern/kernel.asm	/^f010344c:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0103453	obj/kern/kernel.asm	/^f0103453:	e8 45 cc ff ff       	call   f010009d <_panic>$/;"	l
f0103458	obj/kern/kernel.asm	/^f0103458:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f010345f	obj/kern/kernel.asm	/^f010345f:	03 03 03 $/;"	l
f0103462	obj/kern/kernel.asm	/^f0103462:	89 f0                	mov    %esi,%eax$/;"	l
f0103464	obj/kern/kernel.asm	/^f0103464:	e8 47 d7 ff ff       	call   f0100bb0 <page2kva>$/;"	l
f0103469	obj/kern/kernel.asm	/^f0103469:	81 38 03 03 03 03    	cmpl   $0x3030303,(%eax)$/;"	l
f010346f	obj/kern/kernel.asm	/^f010346f:	74 24                	je     f0103495 <mem_init+0x1f2a>$/;"	l
f0103471	obj/kern/kernel.asm	/^f0103471:	c7 44 24 0c 14 85 10 	movl   $0xf0108514,0xc(%esp)$/;"	l
f0103478	obj/kern/kernel.asm	/^f0103478:	f0 $/;"	l
f0103479	obj/kern/kernel.asm	/^f0103479:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0103480	obj/kern/kernel.asm	/^f0103480:	f0 $/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	c7 44 24 04 8a 04 00 	movl   $0x48a,0x4(%esp)$/;"	l
f0103488	obj/kern/kernel.asm	/^f0103488:	00 $/;"	l
f0103489	obj/kern/kernel.asm	/^f0103489:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0103490	obj/kern/kernel.asm	/^f0103490:	e8 08 cc ff ff       	call   f010009d <_panic>$/;"	l
f0103495	obj/kern/kernel.asm	/^f0103495:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010349c	obj/kern/kernel.asm	/^f010349c:	00 $/;"	l
f010349d	obj/kern/kernel.asm	/^f010349d:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01034a5	obj/kern/kernel.asm	/^f01034a5:	e8 8b df ff ff       	call   f0101435 <page_remove>$/;"	l
f01034aa	obj/kern/kernel.asm	/^f01034aa:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01034af	obj/kern/kernel.asm	/^f01034af:	74 24                	je     f01034d5 <mem_init+0x1f6a>$/;"	l
f01034b1	obj/kern/kernel.asm	/^f01034b1:	c7 44 24 0c 04 88 10 	movl   $0xf0108804,0xc(%esp)$/;"	l
f01034b8	obj/kern/kernel.asm	/^f01034b8:	f0 $/;"	l
f01034b9	obj/kern/kernel.asm	/^f01034b9:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01034c0	obj/kern/kernel.asm	/^f01034c0:	f0 $/;"	l
f01034c1	obj/kern/kernel.asm	/^f01034c1:	c7 44 24 04 8c 04 00 	movl   $0x48c,0x4(%esp)$/;"	l
f01034c8	obj/kern/kernel.asm	/^f01034c8:	00 $/;"	l
f01034c9	obj/kern/kernel.asm	/^f01034c9:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f01034d0	obj/kern/kernel.asm	/^f01034d0:	e8 c8 cb ff ff       	call   f010009d <_panic>$/;"	l
f01034d5	obj/kern/kernel.asm	/^f01034d5:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f01034da	obj/kern/kernel.asm	/^f01034da:	8b 08                	mov    (%eax),%ecx$/;"	l
f01034dc	obj/kern/kernel.asm	/^f01034dc:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01034e2	obj/kern/kernel.asm	/^f01034e2:	89 da                	mov    %ebx,%edx$/;"	l
f01034e4	obj/kern/kernel.asm	/^f01034e4:	2b 15 1c fd 2f f0    	sub    0xf02ffd1c,%edx$/;"	l
f01034ea	obj/kern/kernel.asm	/^f01034ea:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01034ed	obj/kern/kernel.asm	/^f01034ed:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01034f0	obj/kern/kernel.asm	/^f01034f0:	39 d1                	cmp    %edx,%ecx$/;"	l
f01034f2	obj/kern/kernel.asm	/^f01034f2:	74 24                	je     f0103518 <mem_init+0x1fad>$/;"	l
f01034f4	obj/kern/kernel.asm	/^f01034f4:	c7 44 24 0c 9c 7e 10 	movl   $0xf0107e9c,0xc(%esp)$/;"	l
f01034fb	obj/kern/kernel.asm	/^f01034fb:	f0 $/;"	l
f01034fc	obj/kern/kernel.asm	/^f01034fc:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0103503	obj/kern/kernel.asm	/^f0103503:	f0 $/;"	l
f0103504	obj/kern/kernel.asm	/^f0103504:	c7 44 24 04 8f 04 00 	movl   $0x48f,0x4(%esp)$/;"	l
f010350b	obj/kern/kernel.asm	/^f010350b:	00 $/;"	l
f010350c	obj/kern/kernel.asm	/^f010350c:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0103513	obj/kern/kernel.asm	/^f0103513:	e8 85 cb ff ff       	call   f010009d <_panic>$/;"	l
f0103518	obj/kern/kernel.asm	/^f0103518:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010351e	obj/kern/kernel.asm	/^f010351e:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0103523	obj/kern/kernel.asm	/^f0103523:	74 24                	je     f0103549 <mem_init+0x1fde>$/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525:	c7 44 24 0c bb 87 10 	movl   $0xf01087bb,0xc(%esp)$/;"	l
f010352c	obj/kern/kernel.asm	/^f010352c:	f0 $/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0103534	obj/kern/kernel.asm	/^f0103534:	f0 $/;"	l
f0103535	obj/kern/kernel.asm	/^f0103535:	c7 44 24 04 91 04 00 	movl   $0x491,0x4(%esp)$/;"	l
f010353c	obj/kern/kernel.asm	/^f010353c:	00 $/;"	l
f010353d	obj/kern/kernel.asm	/^f010353d:	c7 04 24 af 85 10 f0 	movl   $0xf01085af,(%esp)$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	e8 54 cb ff ff       	call   f010009d <_panic>$/;"	l
f0103549	obj/kern/kernel.asm	/^f0103549:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f010354f	obj/kern/kernel.asm	/^f010354f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103552	obj/kern/kernel.asm	/^f0103552:	e8 73 dc ff ff       	call   f01011ca <page_free>$/;"	l
f0103557	obj/kern/kernel.asm	/^f0103557:	c7 04 24 40 85 10 f0 	movl   $0xf0108540,(%esp)$/;"	l
f010355e	obj/kern/kernel.asm	/^f010355e:	e8 05 0b 00 00       	call   f0104068 <cprintf>$/;"	l
f0103563	obj/kern/kernel.asm	/^f0103563:	eb 20                	jmp    f0103585 <mem_init+0x201a>$/;"	l
f0103565	obj/kern/kernel.asm	/^f0103565:	89 da                	mov    %ebx,%edx$/;"	l
f0103567	obj/kern/kernel.asm	/^f0103567:	89 f8                	mov    %edi,%eax$/;"	l
f0103569	obj/kern/kernel.asm	/^f0103569:	e8 87 d6 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f010356e	obj/kern/kernel.asm	/^f010356e:	66 90                	xchg   %ax,%ax$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	e9 0a fb ff ff       	jmp    f010307f <mem_init+0x1b14>$/;"	l
f0103575	obj/kern/kernel.asm	/^f0103575:	89 da                	mov    %ebx,%edx$/;"	l
f0103577	obj/kern/kernel.asm	/^f0103577:	89 f8                	mov    %edi,%eax$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	e8 77 d6 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f010357e	obj/kern/kernel.asm	/^f010357e:	66 90                	xchg   %ax,%ax$/;"	l
f0103580	obj/kern/kernel.asm	/^f0103580:	e9 09 fa ff ff       	jmp    f0102f8e <mem_init+0x1a23>$/;"	l
f0103585	obj/kern/kernel.asm	/^f0103585:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	5b                   	pop    %ebx$/;"	l
f0103589	obj/kern/kernel.asm	/^f0103589:	5e                   	pop    %esi$/;"	l
f010358a	obj/kern/kernel.asm	/^f010358a:	5f                   	pop    %edi$/;"	l
f010358b	obj/kern/kernel.asm	/^f010358b:	5d                   	pop    %ebp$/;"	l
f010358c	obj/kern/kernel.asm	/^f010358c:	c3                   	ret    $/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d <user_mem_check>:$/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d:	55                   	push   %ebp$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	57                   	push   %edi$/;"	l
f0103591	obj/kern/kernel.asm	/^f0103591:	56                   	push   %esi$/;"	l
f0103592	obj/kern/kernel.asm	/^f0103592:	53                   	push   %ebx$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103596	obj/kern/kernel.asm	/^f0103596:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103599	obj/kern/kernel.asm	/^f0103599:	8b 70 60             	mov    0x60(%eax),%esi$/;"	l
f010359c	obj/kern/kernel.asm	/^f010359c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01035a3	obj/kern/kernel.asm	/^f01035a3:	00 $/;"	l
f01035a4	obj/kern/kernel.asm	/^f01035a4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01035a7	obj/kern/kernel.asm	/^f01035a7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae:	e8 82 dc ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	85 c0                	test   %eax,%eax$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	74 16                	je     f01035cd <user_mem_check+0x40>$/;"	l
f01035b7	obj/kern/kernel.asm	/^f01035b7:	81 7d 0c ff ff 7f ef 	cmpl   $0xef7fffff,0xc(%ebp)$/;"	l
f01035be	obj/kern/kernel.asm	/^f01035be:	77 0d                	ja     f01035cd <user_mem_check+0x40>$/;"	l
f01035c0	obj/kern/kernel.asm	/^f01035c0:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	81 e7 ff 0f 00 00    	and    $0xfff,%edi$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	85 38                	test   %edi,(%eax)$/;"	l
f01035cb	obj/kern/kernel.asm	/^f01035cb:	75 0f                	jne    f01035dc <user_mem_check+0x4f>$/;"	l
f01035cd	obj/kern/kernel.asm	/^f01035cd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01035d0	obj/kern/kernel.asm	/^f01035d0:	a3 3c 72 2b f0       	mov    %eax,0xf02b723c$/;"	l
f01035d5	obj/kern/kernel.asm	/^f01035d5:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01035da	obj/kern/kernel.asm	/^f01035da:	eb 67                	jmp    f0103643 <user_mem_check+0xb6>$/;"	l
f01035dc	obj/kern/kernel.asm	/^f01035dc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01035df	obj/kern/kernel.asm	/^f01035df:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx$/;"	l
f01035e5	obj/kern/kernel.asm	/^f01035e5:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01035eb	obj/kern/kernel.asm	/^f01035eb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1:	8d 84 02 ff 0f 00 00 	lea    0xfff(%edx,%eax,1),%eax$/;"	l
f01035f8	obj/kern/kernel.asm	/^f01035f8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01035fd	obj/kern/kernel.asm	/^f01035fd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103600	obj/kern/kernel.asm	/^f0103600:	eb 37                	jmp    f0103639 <user_mem_check+0xac>$/;"	l
f0103602	obj/kern/kernel.asm	/^f0103602:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103609	obj/kern/kernel.asm	/^f0103609:	00 $/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010360e	obj/kern/kernel.asm	/^f010360e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103611	obj/kern/kernel.asm	/^f0103611:	e8 1f dc ff ff       	call   f0101235 <pgdir_walk>$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	85 c0                	test   %eax,%eax$/;"	l
f0103618	obj/kern/kernel.asm	/^f0103618:	74 0c                	je     f0103626 <user_mem_check+0x99>$/;"	l
f010361a	obj/kern/kernel.asm	/^f010361a:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	77 04                	ja     f0103626 <user_mem_check+0x99>$/;"	l
f0103622	obj/kern/kernel.asm	/^f0103622:	85 38                	test   %edi,(%eax)$/;"	l
f0103624	obj/kern/kernel.asm	/^f0103624:	75 0d                	jne    f0103633 <user_mem_check+0xa6>$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	89 1d 3c 72 2b f0    	mov    %ebx,0xf02b723c$/;"	l
f010362c	obj/kern/kernel.asm	/^f010362c:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	eb 10                	jmp    f0103643 <user_mem_check+0xb6>$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103639	obj/kern/kernel.asm	/^f0103639:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	72 c4                	jb     f0103602 <user_mem_check+0x75>$/;"	l
f010363e	obj/kern/kernel.asm	/^f010363e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103646	obj/kern/kernel.asm	/^f0103646:	5b                   	pop    %ebx$/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647:	5e                   	pop    %esi$/;"	l
f0103648	obj/kern/kernel.asm	/^f0103648:	5f                   	pop    %edi$/;"	l
f0103649	obj/kern/kernel.asm	/^f0103649:	5d                   	pop    %ebp$/;"	l
f010364a	obj/kern/kernel.asm	/^f010364a:	c3                   	ret    $/;"	l
f010364b	obj/kern/kernel.asm	/^f010364b <user_mem_assert>:$/;"	l
f010364b	obj/kern/kernel.asm	/^f010364b:	55                   	push   %ebp$/;"	l
f010364c	obj/kern/kernel.asm	/^f010364c:	89 e5                	mov    %esp,%ebp$/;"	l
f010364e	obj/kern/kernel.asm	/^f010364e:	53                   	push   %ebx$/;"	l
f010364f	obj/kern/kernel.asm	/^f010364f:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103652	obj/kern/kernel.asm	/^f0103652:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103655	obj/kern/kernel.asm	/^f0103655:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103658	obj/kern/kernel.asm	/^f0103658:	83 c8 04             	or     $0x4,%eax$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010365f	obj/kern/kernel.asm	/^f010365f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103662	obj/kern/kernel.asm	/^f0103662:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103669	obj/kern/kernel.asm	/^f0103669:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010366d	obj/kern/kernel.asm	/^f010366d:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103670	obj/kern/kernel.asm	/^f0103670:	e8 18 ff ff ff       	call   f010358d <user_mem_check>$/;"	l
f0103675	obj/kern/kernel.asm	/^f0103675:	85 c0                	test   %eax,%eax$/;"	l
f0103677	obj/kern/kernel.asm	/^f0103677:	79 24                	jns    f010369d <user_mem_assert+0x52>$/;"	l
f0103679	obj/kern/kernel.asm	/^f0103679:	a1 3c 72 2b f0       	mov    0xf02b723c,%eax$/;"	l
f010367e	obj/kern/kernel.asm	/^f010367e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103682	obj/kern/kernel.asm	/^f0103682:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103685	obj/kern/kernel.asm	/^f0103685:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103689	obj/kern/kernel.asm	/^f0103689:	c7 04 24 6c 85 10 f0 	movl   $0xf010856c,(%esp)$/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	e8 d3 09 00 00       	call   f0104068 <cprintf>$/;"	l
f0103695	obj/kern/kernel.asm	/^f0103695:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103698	obj/kern/kernel.asm	/^f0103698:	e8 d2 06 00 00       	call   f0103d6f <env_destroy>$/;"	l
f010369d	obj/kern/kernel.asm	/^f010369d:	83 c4 14             	add    $0x14,%esp$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	5b                   	pop    %ebx$/;"	l
f01036a1	obj/kern/kernel.asm	/^f01036a1:	5d                   	pop    %ebp$/;"	l
f01036a2	obj/kern/kernel.asm	/^f01036a2:	c3                   	ret    $/;"	l
f01036a3	obj/kern/kernel.asm	/^f01036a3 <region_alloc>:$/;"	l
f01036a3	obj/kern/kernel.asm	/^f01036a3:	55                   	push   %ebp$/;"	l
f01036a4	obj/kern/kernel.asm	/^f01036a4:	89 e5                	mov    %esp,%ebp$/;"	l
f01036a6	obj/kern/kernel.asm	/^f01036a6:	57                   	push   %edi$/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	56                   	push   %esi$/;"	l
f01036a8	obj/kern/kernel.asm	/^f01036a8:	53                   	push   %ebx$/;"	l
f01036a9	obj/kern/kernel.asm	/^f01036a9:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01036ac	obj/kern/kernel.asm	/^f01036ac:	89 c7                	mov    %eax,%edi$/;"	l
f01036ae	obj/kern/kernel.asm	/^f01036ae:	89 d3                	mov    %edx,%ebx$/;"	l
f01036b0	obj/kern/kernel.asm	/^f01036b0:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01036b6	obj/kern/kernel.asm	/^f01036b6:	8d b4 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%esi$/;"	l
f01036bd	obj/kern/kernel.asm	/^f01036bd:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f01036c3	obj/kern/kernel.asm	/^f01036c3:	eb 6d                	jmp    f0103732 <region_alloc+0x8f>$/;"	l
f01036c5	obj/kern/kernel.asm	/^f01036c5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01036cc	obj/kern/kernel.asm	/^f01036cc:	e8 69 da ff ff       	call   f010113a <page_alloc>$/;"	l
f01036d1	obj/kern/kernel.asm	/^f01036d1:	85 c0                	test   %eax,%eax$/;"	l
f01036d3	obj/kern/kernel.asm	/^f01036d3:	75 1c                	jne    f01036f1 <region_alloc+0x4e>$/;"	l
f01036d5	obj/kern/kernel.asm	/^f01036d5:	c7 44 24 08 d1 88 10 	movl   $0xf01088d1,0x8(%esp)$/;"	l
f01036dc	obj/kern/kernel.asm	/^f01036dc:	f0 $/;"	l
f01036dd	obj/kern/kernel.asm	/^f01036dd:	c7 44 24 04 36 01 00 	movl   $0x136,0x4(%esp)$/;"	l
f01036e4	obj/kern/kernel.asm	/^f01036e4:	00 $/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	c7 04 24 e2 88 10 f0 	movl   $0xf01088e2,(%esp)$/;"	l
f01036ec	obj/kern/kernel.asm	/^f01036ec:	e8 ac c9 ff ff       	call   f010009d <_panic>$/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	c7 44 24 0c 07 00 00 	movl   $0x7,0xc(%esp)$/;"	l
f01036f8	obj/kern/kernel.asm	/^f01036f8:	00 $/;"	l
f01036f9	obj/kern/kernel.asm	/^f01036f9:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01036fd	obj/kern/kernel.asm	/^f01036fd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103701	obj/kern/kernel.asm	/^f0103701:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103704	obj/kern/kernel.asm	/^f0103704:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103707	obj/kern/kernel.asm	/^f0103707:	e8 72 dd ff ff       	call   f010147e <page_insert>$/;"	l
f010370c	obj/kern/kernel.asm	/^f010370c:	85 c0                	test   %eax,%eax$/;"	l
f010370e	obj/kern/kernel.asm	/^f010370e:	79 1c                	jns    f010372c <region_alloc+0x89>$/;"	l
f0103710	obj/kern/kernel.asm	/^f0103710:	c7 44 24 08 d1 88 10 	movl   $0xf01088d1,0x8(%esp)$/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	f0 $/;"	l
f0103718	obj/kern/kernel.asm	/^f0103718:	c7 44 24 04 3c 01 00 	movl   $0x13c,0x4(%esp)$/;"	l
f010371f	obj/kern/kernel.asm	/^f010371f:	00 $/;"	l
f0103720	obj/kern/kernel.asm	/^f0103720:	c7 04 24 e2 88 10 f0 	movl   $0xf01088e2,(%esp)$/;"	l
f0103727	obj/kern/kernel.asm	/^f0103727:	e8 71 c9 ff ff       	call   f010009d <_panic>$/;"	l
f010372c	obj/kern/kernel.asm	/^f010372c:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103732	obj/kern/kernel.asm	/^f0103732:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103734	obj/kern/kernel.asm	/^f0103734:	72 8f                	jb     f01036c5 <region_alloc+0x22>$/;"	l
f0103736	obj/kern/kernel.asm	/^f0103736:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103739	obj/kern/kernel.asm	/^f0103739:	5b                   	pop    %ebx$/;"	l
f010373a	obj/kern/kernel.asm	/^f010373a:	5e                   	pop    %esi$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	5f                   	pop    %edi$/;"	l
f010373c	obj/kern/kernel.asm	/^f010373c:	5d                   	pop    %ebp$/;"	l
f010373d	obj/kern/kernel.asm	/^f010373d:	c3                   	ret    $/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e <envid2env>:$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	55                   	push   %ebp$/;"	l
f010373f	obj/kern/kernel.asm	/^f010373f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	56                   	push   %esi$/;"	l
f0103742	obj/kern/kernel.asm	/^f0103742:	53                   	push   %ebx$/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103746	obj/kern/kernel.asm	/^f0103746:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0103749	obj/kern/kernel.asm	/^f0103749:	85 c0                	test   %eax,%eax$/;"	l
f010374b	obj/kern/kernel.asm	/^f010374b:	75 1a                	jne    f0103767 <envid2env+0x29>$/;"	l
f010374d	obj/kern/kernel.asm	/^f010374d:	e8 97 2d 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103752	obj/kern/kernel.asm	/^f0103752:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103755	obj/kern/kernel.asm	/^f0103755:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f010375b	obj/kern/kernel.asm	/^f010375b:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010375e	obj/kern/kernel.asm	/^f010375e:	89 01                	mov    %eax,(%ecx)$/;"	l
f0103760	obj/kern/kernel.asm	/^f0103760:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	eb 70                	jmp    f01037d7 <envid2env+0x99>$/;"	l
f0103767	obj/kern/kernel.asm	/^f0103767:	89 c3                	mov    %eax,%ebx$/;"	l
f0103769	obj/kern/kernel.asm	/^f0103769:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f010376f	obj/kern/kernel.asm	/^f010376f:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0103772	obj/kern/kernel.asm	/^f0103772:	03 1d 48 72 2b f0    	add    0xf02b7248,%ebx$/;"	l
f0103778	obj/kern/kernel.asm	/^f0103778:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	74 05                	je     f0103783 <envid2env+0x45>$/;"	l
f010377e	obj/kern/kernel.asm	/^f010377e:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f0103781	obj/kern/kernel.asm	/^f0103781:	74 10                	je     f0103793 <envid2env+0x55>$/;"	l
f0103783	obj/kern/kernel.asm	/^f0103783:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103786	obj/kern/kernel.asm	/^f0103786:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010378c	obj/kern/kernel.asm	/^f010378c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103791	obj/kern/kernel.asm	/^f0103791:	eb 44                	jmp    f01037d7 <envid2env+0x99>$/;"	l
f0103793	obj/kern/kernel.asm	/^f0103793:	84 d2                	test   %dl,%dl$/;"	l
f0103795	obj/kern/kernel.asm	/^f0103795:	74 36                	je     f01037cd <envid2env+0x8f>$/;"	l
f0103797	obj/kern/kernel.asm	/^f0103797:	e8 4d 2d 00 00       	call   f01064e9 <cpunum>$/;"	l
f010379c	obj/kern/kernel.asm	/^f010379c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010379f	obj/kern/kernel.asm	/^f010379f:	39 98 28 00 30 f0    	cmp    %ebx,-0xfcfffd8(%eax)$/;"	l
f01037a5	obj/kern/kernel.asm	/^f01037a5:	74 26                	je     f01037cd <envid2env+0x8f>$/;"	l
f01037a7	obj/kern/kernel.asm	/^f01037a7:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	e8 3a 2d 00 00       	call   f01064e9 <cpunum>$/;"	l
f01037af	obj/kern/kernel.asm	/^f01037af:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037b2	obj/kern/kernel.asm	/^f01037b2:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f01037b8	obj/kern/kernel.asm	/^f01037b8:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f01037bb	obj/kern/kernel.asm	/^f01037bb:	74 10                	je     f01037cd <envid2env+0x8f>$/;"	l
f01037bd	obj/kern/kernel.asm	/^f01037bd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01037c0	obj/kern/kernel.asm	/^f01037c0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01037c6	obj/kern/kernel.asm	/^f01037c6:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01037cb	obj/kern/kernel.asm	/^f01037cb:	eb 0a                	jmp    f01037d7 <envid2env+0x99>$/;"	l
f01037cd	obj/kern/kernel.asm	/^f01037cd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01037d0	obj/kern/kernel.asm	/^f01037d0:	89 18                	mov    %ebx,(%eax)$/;"	l
f01037d2	obj/kern/kernel.asm	/^f01037d2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01037d7	obj/kern/kernel.asm	/^f01037d7:	5b                   	pop    %ebx$/;"	l
f01037d8	obj/kern/kernel.asm	/^f01037d8:	5e                   	pop    %esi$/;"	l
f01037d9	obj/kern/kernel.asm	/^f01037d9:	5d                   	pop    %ebp$/;"	l
f01037da	obj/kern/kernel.asm	/^f01037da:	c3                   	ret    $/;"	l
f01037db	obj/kern/kernel.asm	/^f01037db <env_init_percpu>:$/;"	l
f01037db	obj/kern/kernel.asm	/^f01037db:	55                   	push   %ebp$/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	89 e5                	mov    %esp,%ebp$/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de:	b8 20 43 12 f0       	mov    $0xf0124320,%eax$/;"	l
f01037e3	obj/kern/kernel.asm	/^f01037e3:	0f 01 10             	lgdtl  (%eax)$/;"	l
f01037e6	obj/kern/kernel.asm	/^f01037e6:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f01037eb	obj/kern/kernel.asm	/^f01037eb:	8e e8                	mov    %eax,%gs$/;"	l
f01037ed	obj/kern/kernel.asm	/^f01037ed:	8e e0                	mov    %eax,%fs$/;"	l
f01037ef	obj/kern/kernel.asm	/^f01037ef:	b0 10                	mov    $0x10,%al$/;"	l
f01037f1	obj/kern/kernel.asm	/^f01037f1:	8e c0                	mov    %eax,%es$/;"	l
f01037f3	obj/kern/kernel.asm	/^f01037f3:	8e d8                	mov    %eax,%ds$/;"	l
f01037f5	obj/kern/kernel.asm	/^f01037f5:	8e d0                	mov    %eax,%ss$/;"	l
f01037f7	obj/kern/kernel.asm	/^f01037f7:	ea fe 37 10 f0 08 00 	ljmp   $0x8,$0xf01037fe$/;"	l
f01037fe	obj/kern/kernel.asm	/^f01037fe:	b0 00                	mov    $0x0,%al$/;"	l
f0103800	obj/kern/kernel.asm	/^f0103800:	0f 00 d0             	lldt   %ax$/;"	l
f0103803	obj/kern/kernel.asm	/^f0103803:	5d                   	pop    %ebp$/;"	l
f0103804	obj/kern/kernel.asm	/^f0103804:	c3                   	ret    $/;"	l
f0103805	obj/kern/kernel.asm	/^f0103805 <env_init>:$/;"	l
f0103805	obj/kern/kernel.asm	/^f0103805:	55                   	push   %ebp$/;"	l
f0103806	obj/kern/kernel.asm	/^f0103806:	89 e5                	mov    %esp,%ebp$/;"	l
f0103808	obj/kern/kernel.asm	/^f0103808:	56                   	push   %esi$/;"	l
f0103809	obj/kern/kernel.asm	/^f0103809:	53                   	push   %ebx$/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a:	8b 35 48 72 2b f0    	mov    0xf02b7248,%esi$/;"	l
f0103810	obj/kern/kernel.asm	/^f0103810:	8b 0d 4c 72 2b f0    	mov    0xf02b724c,%ecx$/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	8d 86 84 ef 01 00    	lea    0x1ef84(%esi),%eax$/;"	l
f010381c	obj/kern/kernel.asm	/^f010381c:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0103821	obj/kern/kernel.asm	/^f0103821:	89 c3                	mov    %eax,%ebx$/;"	l
f0103823	obj/kern/kernel.asm	/^f0103823:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f010382a	obj/kern/kernel.asm	/^f010382a:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0103831	obj/kern/kernel.asm	/^f0103831:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010383a	obj/kern/kernel.asm	/^f010383a:	74 04                	je     f0103840 <env_init+0x3b>$/;"	l
f010383c	obj/kern/kernel.asm	/^f010383c:	89 d9                	mov    %ebx,%ecx$/;"	l
f010383e	obj/kern/kernel.asm	/^f010383e:	eb e1                	jmp    f0103821 <env_init+0x1c>$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	89 35 4c 72 2b f0    	mov    %esi,0xf02b724c$/;"	l
f0103846	obj/kern/kernel.asm	/^f0103846:	e8 90 ff ff ff       	call   f01037db <env_init_percpu>$/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b:	5b                   	pop    %ebx$/;"	l
f010384c	obj/kern/kernel.asm	/^f010384c:	5e                   	pop    %esi$/;"	l
f010384d	obj/kern/kernel.asm	/^f010384d:	5d                   	pop    %ebp$/;"	l
f010384e	obj/kern/kernel.asm	/^f010384e:	c3                   	ret    $/;"	l
f010384f	obj/kern/kernel.asm	/^f010384f <env_alloc>:$/;"	l
f010384f	obj/kern/kernel.asm	/^f010384f:	55                   	push   %ebp$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	89 e5                	mov    %esp,%ebp$/;"	l
f0103852	obj/kern/kernel.asm	/^f0103852:	53                   	push   %ebx$/;"	l
f0103853	obj/kern/kernel.asm	/^f0103853:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103856	obj/kern/kernel.asm	/^f0103856:	8b 1d 4c 72 2b f0    	mov    0xf02b724c,%ebx$/;"	l
f010385c	obj/kern/kernel.asm	/^f010385c:	85 db                	test   %ebx,%ebx$/;"	l
f010385e	obj/kern/kernel.asm	/^f010385e:	0f 84 8e 01 00 00    	je     f01039f2 <env_alloc+0x1a3>$/;"	l
f0103864	obj/kern/kernel.asm	/^f0103864:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f010386b	obj/kern/kernel.asm	/^f010386b:	e8 ca d8 ff ff       	call   f010113a <page_alloc>$/;"	l
f0103870	obj/kern/kernel.asm	/^f0103870:	85 c0                	test   %eax,%eax$/;"	l
f0103872	obj/kern/kernel.asm	/^f0103872:	0f 84 81 01 00 00    	je     f01039f9 <env_alloc+0x1aa>$/;"	l
f0103878	obj/kern/kernel.asm	/^f0103878:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f010387d	obj/kern/kernel.asm	/^f010387d:	2b 05 1c fd 2f f0    	sub    0xf02ffd1c,%eax$/;"	l
f0103883	obj/kern/kernel.asm	/^f0103883:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103886	obj/kern/kernel.asm	/^f0103886:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	89 c2                	mov    %eax,%edx$/;"	l
f010388b	obj/kern/kernel.asm	/^f010388b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010388e	obj/kern/kernel.asm	/^f010388e:	3b 15 14 fd 2f f0    	cmp    0xf02ffd14,%edx$/;"	l
f0103894	obj/kern/kernel.asm	/^f0103894:	72 20                	jb     f01038b6 <env_alloc+0x67>$/;"	l
f0103896	obj/kern/kernel.asm	/^f0103896:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010389a	obj/kern/kernel.asm	/^f010389a:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f01038a1	obj/kern/kernel.asm	/^f01038a1:	f0 $/;"	l
f01038a2	obj/kern/kernel.asm	/^f01038a2:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01038a9	obj/kern/kernel.asm	/^f01038a9:	00 $/;"	l
f01038aa	obj/kern/kernel.asm	/^f01038aa:	c7 04 24 a1 85 10 f0 	movl   $0xf01085a1,(%esp)$/;"	l
f01038b1	obj/kern/kernel.asm	/^f01038b1:	e8 e7 c7 ff ff       	call   f010009d <_panic>$/;"	l
f01038b6	obj/kern/kernel.asm	/^f01038b6:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01038bb	obj/kern/kernel.asm	/^f01038bb:	89 43 60             	mov    %eax,0x60(%ebx)$/;"	l
f01038be	obj/kern/kernel.asm	/^f01038be:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01038c5	obj/kern/kernel.asm	/^f01038c5:	00 $/;"	l
f01038c6	obj/kern/kernel.asm	/^f01038c6:	8b 15 18 fd 2f f0    	mov    0xf02ffd18,%edx$/;"	l
f01038cc	obj/kern/kernel.asm	/^f01038cc:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01038d0	obj/kern/kernel.asm	/^f01038d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01038d3	obj/kern/kernel.asm	/^f01038d3:	e8 74 26 00 00       	call   f0105f4c <memcpy>$/;"	l
f01038d8	obj/kern/kernel.asm	/^f01038d8:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f01038db	obj/kern/kernel.asm	/^f01038db:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01038e0	obj/kern/kernel.asm	/^f01038e0:	77 20                	ja     f0103902 <env_alloc+0xb3>$/;"	l
f01038e2	obj/kern/kernel.asm	/^f01038e2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01038e6	obj/kern/kernel.asm	/^f01038e6:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f01038ed	obj/kern/kernel.asm	/^f01038ed:	f0 $/;"	l
f01038ee	obj/kern/kernel.asm	/^f01038ee:	c7 44 24 04 cb 00 00 	movl   $0xcb,0x4(%esp)$/;"	l
f01038f5	obj/kern/kernel.asm	/^f01038f5:	00 $/;"	l
f01038f6	obj/kern/kernel.asm	/^f01038f6:	c7 04 24 e2 88 10 f0 	movl   $0xf01088e2,(%esp)$/;"	l
f01038fd	obj/kern/kernel.asm	/^f01038fd:	e8 9b c7 ff ff       	call   f010009d <_panic>$/;"	l
f0103902	obj/kern/kernel.asm	/^f0103902:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0103908	obj/kern/kernel.asm	/^f0103908:	83 ca 05             	or     $0x5,%edx$/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0103911	obj/kern/kernel.asm	/^f0103911:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103914	obj/kern/kernel.asm	/^f0103914:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103919	obj/kern/kernel.asm	/^f0103919:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f010391e	obj/kern/kernel.asm	/^f010391e:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0103923	obj/kern/kernel.asm	/^f0103923:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0103926	obj/kern/kernel.asm	/^f0103926:	89 da                	mov    %ebx,%edx$/;"	l
f0103928	obj/kern/kernel.asm	/^f0103928:	2b 15 48 72 2b f0    	sub    0xf02b7248,%edx$/;"	l
f010392e	obj/kern/kernel.asm	/^f010392e:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f0103937	obj/kern/kernel.asm	/^f0103937:	09 d0                	or     %edx,%eax$/;"	l
f0103939	obj/kern/kernel.asm	/^f0103939:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010393f	obj/kern/kernel.asm	/^f010393f:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0103949	obj/kern/kernel.asm	/^f0103949:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0103950	obj/kern/kernel.asm	/^f0103950:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0103957	obj/kern/kernel.asm	/^f0103957:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f010395e	obj/kern/kernel.asm	/^f010395e:	00 $/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103966	obj/kern/kernel.asm	/^f0103966:	00 $/;"	l
f0103967	obj/kern/kernel.asm	/^f0103967:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010396a	obj/kern/kernel.asm	/^f010396a:	e8 28 25 00 00       	call   f0105e97 <memset>$/;"	l
f010396f	obj/kern/kernel.asm	/^f010396f:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103975	obj/kern/kernel.asm	/^f0103975:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f010397b	obj/kern/kernel.asm	/^f010397b:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103981	obj/kern/kernel.asm	/^f0103981:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103988	obj/kern/kernel.asm	/^f0103988:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f010398e	obj/kern/kernel.asm	/^f010398e:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f0103995	obj/kern/kernel.asm	/^f0103995:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f010399c	obj/kern/kernel.asm	/^f010399c:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f01039a3	obj/kern/kernel.asm	/^f01039a3:	a3 4c 72 2b f0       	mov    %eax,0xf02b724c$/;"	l
f01039a8	obj/kern/kernel.asm	/^f01039a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01039ab	obj/kern/kernel.asm	/^f01039ab:	89 18                	mov    %ebx,(%eax)$/;"	l
f01039ad	obj/kern/kernel.asm	/^f01039ad:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f01039b0	obj/kern/kernel.asm	/^f01039b0:	e8 34 2b 00 00       	call   f01064e9 <cpunum>$/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01039bd	obj/kern/kernel.asm	/^f01039bd:	83 b8 28 00 30 f0 00 	cmpl   $0x0,-0xfcfffd8(%eax)$/;"	l
f01039c4	obj/kern/kernel.asm	/^f01039c4:	74 11                	je     f01039d7 <env_alloc+0x188>$/;"	l
f01039c6	obj/kern/kernel.asm	/^f01039c6:	e8 1e 2b 00 00       	call   f01064e9 <cpunum>$/;"	l
f01039cb	obj/kern/kernel.asm	/^f01039cb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f01039d4	obj/kern/kernel.asm	/^f01039d4:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f01039d7	obj/kern/kernel.asm	/^f01039d7:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01039db	obj/kern/kernel.asm	/^f01039db:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01039df	obj/kern/kernel.asm	/^f01039df:	c7 04 24 ed 88 10 f0 	movl   $0xf01088ed,(%esp)$/;"	l
f01039e6	obj/kern/kernel.asm	/^f01039e6:	e8 7d 06 00 00       	call   f0104068 <cprintf>$/;"	l
f01039eb	obj/kern/kernel.asm	/^f01039eb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01039f0	obj/kern/kernel.asm	/^f01039f0:	eb 0c                	jmp    f01039fe <env_alloc+0x1af>$/;"	l
f01039f2	obj/kern/kernel.asm	/^f01039f2:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f01039f7	obj/kern/kernel.asm	/^f01039f7:	eb 05                	jmp    f01039fe <env_alloc+0x1af>$/;"	l
f01039f9	obj/kern/kernel.asm	/^f01039f9:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01039fe	obj/kern/kernel.asm	/^f01039fe:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103a01	obj/kern/kernel.asm	/^f0103a01:	5b                   	pop    %ebx$/;"	l
f0103a02	obj/kern/kernel.asm	/^f0103a02:	5d                   	pop    %ebp$/;"	l
f0103a03	obj/kern/kernel.asm	/^f0103a03:	c3                   	ret    $/;"	l
f0103a04	obj/kern/kernel.asm	/^f0103a04 <env_create>:$/;"	l
f0103a04	obj/kern/kernel.asm	/^f0103a04:	55                   	push   %ebp$/;"	l
f0103a05	obj/kern/kernel.asm	/^f0103a05:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a07	obj/kern/kernel.asm	/^f0103a07:	57                   	push   %edi$/;"	l
f0103a08	obj/kern/kernel.asm	/^f0103a08:	56                   	push   %esi$/;"	l
f0103a09	obj/kern/kernel.asm	/^f0103a09:	53                   	push   %ebx$/;"	l
f0103a0a	obj/kern/kernel.asm	/^f0103a0a:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103a0d	obj/kern/kernel.asm	/^f0103a0d:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103a10	obj/kern/kernel.asm	/^f0103a10:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103a17	obj/kern/kernel.asm	/^f0103a17:	00 $/;"	l
f0103a18	obj/kern/kernel.asm	/^f0103a18:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103a1b	obj/kern/kernel.asm	/^f0103a1b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a1e	obj/kern/kernel.asm	/^f0103a1e:	e8 2c fe ff ff       	call   f010384f <env_alloc>$/;"	l
f0103a23	obj/kern/kernel.asm	/^f0103a23:	85 c0                	test   %eax,%eax$/;"	l
f0103a25	obj/kern/kernel.asm	/^f0103a25:	79 20                	jns    f0103a47 <env_create+0x43>$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a2b	obj/kern/kernel.asm	/^f0103a2b:	c7 44 24 08 02 89 10 	movl   $0xf0108902,0x8(%esp)$/;"	l
f0103a32	obj/kern/kernel.asm	/^f0103a32:	f0 $/;"	l
f0103a33	obj/kern/kernel.asm	/^f0103a33:	c7 44 24 04 b0 01 00 	movl   $0x1b0,0x4(%esp)$/;"	l
f0103a3a	obj/kern/kernel.asm	/^f0103a3a:	00 $/;"	l
f0103a3b	obj/kern/kernel.asm	/^f0103a3b:	c7 04 24 e2 88 10 f0 	movl   $0xf01088e2,(%esp)$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	e8 56 c6 ff ff       	call   f010009d <_panic>$/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103a4a	obj/kern/kernel.asm	/^f0103a4a:	89 5f 50             	mov    %ebx,0x50(%edi)$/;"	l
f0103a4d	obj/kern/kernel.asm	/^f0103a4d:	83 fb 01             	cmp    $0x1,%ebx$/;"	l
f0103a50	obj/kern/kernel.asm	/^f0103a50:	75 07                	jne    f0103a59 <env_create+0x55>$/;"	l
f0103a52	obj/kern/kernel.asm	/^f0103a52:	81 4f 38 00 30 00 00 	orl    $0x3000,0x38(%edi)$/;"	l
f0103a59	obj/kern/kernel.asm	/^f0103a59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103a5c	obj/kern/kernel.asm	/^f0103a5c:	81 38 7f 45 4c 46    	cmpl   $0x464c457f,(%eax)$/;"	l
f0103a62	obj/kern/kernel.asm	/^f0103a62:	74 1c                	je     f0103a80 <env_create+0x7c>$/;"	l
f0103a64	obj/kern/kernel.asm	/^f0103a64:	c7 44 24 08 11 89 10 	movl   $0xf0108911,0x8(%esp)$/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	f0 $/;"	l
f0103a6c	obj/kern/kernel.asm	/^f0103a6c:	c7 44 24 04 7c 01 00 	movl   $0x17c,0x4(%esp)$/;"	l
f0103a73	obj/kern/kernel.asm	/^f0103a73:	00 $/;"	l
f0103a74	obj/kern/kernel.asm	/^f0103a74:	c7 04 24 e2 88 10 f0 	movl   $0xf01088e2,(%esp)$/;"	l
f0103a7b	obj/kern/kernel.asm	/^f0103a7b:	e8 1d c6 ff ff       	call   f010009d <_panic>$/;"	l
f0103a80	obj/kern/kernel.asm	/^f0103a80:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103a83	obj/kern/kernel.asm	/^f0103a83:	89 c3                	mov    %eax,%ebx$/;"	l
f0103a85	obj/kern/kernel.asm	/^f0103a85:	03 58 1c             	add    0x1c(%eax),%ebx$/;"	l
f0103a88	obj/kern/kernel.asm	/^f0103a88:	0f b7 70 2c          	movzwl 0x2c(%eax),%esi$/;"	l
f0103a8c	obj/kern/kernel.asm	/^f0103a8c:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0103a8f	obj/kern/kernel.asm	/^f0103a8f:	01 de                	add    %ebx,%esi$/;"	l
f0103a91	obj/kern/kernel.asm	/^f0103a91:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103a94	obj/kern/kernel.asm	/^f0103a94:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103a99	obj/kern/kernel.asm	/^f0103a99:	77 20                	ja     f0103abb <env_create+0xb7>$/;"	l
f0103a9b	obj/kern/kernel.asm	/^f0103a9b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a9f	obj/kern/kernel.asm	/^f0103a9f:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0103aa6	obj/kern/kernel.asm	/^f0103aa6:	f0 $/;"	l
f0103aa7	obj/kern/kernel.asm	/^f0103aa7:	c7 44 24 04 83 01 00 	movl   $0x183,0x4(%esp)$/;"	l
f0103aae	obj/kern/kernel.asm	/^f0103aae:	00 $/;"	l
f0103aaf	obj/kern/kernel.asm	/^f0103aaf:	c7 04 24 e2 88 10 f0 	movl   $0xf01088e2,(%esp)$/;"	l
f0103ab6	obj/kern/kernel.asm	/^f0103ab6:	e8 e2 c5 ff ff       	call   f010009d <_panic>$/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103ac0	obj/kern/kernel.asm	/^f0103ac0:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103ac3	obj/kern/kernel.asm	/^f0103ac3:	eb 4b                	jmp    f0103b10 <env_create+0x10c>$/;"	l
f0103ac5	obj/kern/kernel.asm	/^f0103ac5:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103ac8	obj/kern/kernel.asm	/^f0103ac8:	75 43                	jne    f0103b0d <env_create+0x109>$/;"	l
f0103aca	obj/kern/kernel.asm	/^f0103aca:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103acd	obj/kern/kernel.asm	/^f0103acd:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103ad0	obj/kern/kernel.asm	/^f0103ad0:	89 f8                	mov    %edi,%eax$/;"	l
f0103ad2	obj/kern/kernel.asm	/^f0103ad2:	e8 cc fb ff ff       	call   f01036a3 <region_alloc>$/;"	l
f0103ad7	obj/kern/kernel.asm	/^f0103ad7:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0103ada	obj/kern/kernel.asm	/^f0103ada:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103ade	obj/kern/kernel.asm	/^f0103ade:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103ae5	obj/kern/kernel.asm	/^f0103ae5:	00 $/;"	l
f0103ae6	obj/kern/kernel.asm	/^f0103ae6:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0103ae9	obj/kern/kernel.asm	/^f0103ae9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103aec	obj/kern/kernel.asm	/^f0103aec:	e8 a6 23 00 00       	call   f0105e97 <memset>$/;"	l
f0103af1	obj/kern/kernel.asm	/^f0103af1:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103af8	obj/kern/kernel.asm	/^f0103af8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103afb	obj/kern/kernel.asm	/^f0103afb:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0103afe	obj/kern/kernel.asm	/^f0103afe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103b02	obj/kern/kernel.asm	/^f0103b02:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	e8 3f 24 00 00       	call   f0105f4c <memcpy>$/;"	l
f0103b0d	obj/kern/kernel.asm	/^f0103b0d:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103b10	obj/kern/kernel.asm	/^f0103b10:	39 de                	cmp    %ebx,%esi$/;"	l
f0103b12	obj/kern/kernel.asm	/^f0103b12:	77 b1                	ja     f0103ac5 <env_create+0xc1>$/;"	l
f0103b14	obj/kern/kernel.asm	/^f0103b14:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0103b19	obj/kern/kernel.asm	/^f0103b19:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103b1e	obj/kern/kernel.asm	/^f0103b1e:	77 20                	ja     f0103b40 <env_create+0x13c>$/;"	l
f0103b20	obj/kern/kernel.asm	/^f0103b20:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103b24	obj/kern/kernel.asm	/^f0103b24:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0103b2b	obj/kern/kernel.asm	/^f0103b2b:	f0 $/;"	l
f0103b2c	obj/kern/kernel.asm	/^f0103b2c:	c7 44 24 04 95 01 00 	movl   $0x195,0x4(%esp)$/;"	l
f0103b33	obj/kern/kernel.asm	/^f0103b33:	00 $/;"	l
f0103b34	obj/kern/kernel.asm	/^f0103b34:	c7 04 24 e2 88 10 f0 	movl   $0xf01088e2,(%esp)$/;"	l
f0103b3b	obj/kern/kernel.asm	/^f0103b3b:	e8 5d c5 ff ff       	call   f010009d <_panic>$/;"	l
f0103b40	obj/kern/kernel.asm	/^f0103b40:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103b45	obj/kern/kernel.asm	/^f0103b45:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0103b4d	obj/kern/kernel.asm	/^f0103b4d:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103b52	obj/kern/kernel.asm	/^f0103b52:	89 f8                	mov    %edi,%eax$/;"	l
f0103b54	obj/kern/kernel.asm	/^f0103b54:	e8 4a fb ff ff       	call   f01036a3 <region_alloc>$/;"	l
f0103b59	obj/kern/kernel.asm	/^f0103b59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	5b                   	pop    %ebx$/;"	l
f0103b66	obj/kern/kernel.asm	/^f0103b66:	5e                   	pop    %esi$/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	5f                   	pop    %edi$/;"	l
f0103b68	obj/kern/kernel.asm	/^f0103b68:	5d                   	pop    %ebp$/;"	l
f0103b69	obj/kern/kernel.asm	/^f0103b69:	c3                   	ret    $/;"	l
f0103b6a	obj/kern/kernel.asm	/^f0103b6a <env_free>:$/;"	l
f0103b6a	obj/kern/kernel.asm	/^f0103b6a:	55                   	push   %ebp$/;"	l
f0103b6b	obj/kern/kernel.asm	/^f0103b6b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b6d	obj/kern/kernel.asm	/^f0103b6d:	57                   	push   %edi$/;"	l
f0103b6e	obj/kern/kernel.asm	/^f0103b6e:	56                   	push   %esi$/;"	l
f0103b6f	obj/kern/kernel.asm	/^f0103b6f:	53                   	push   %ebx$/;"	l
f0103b70	obj/kern/kernel.asm	/^f0103b70:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103b73	obj/kern/kernel.asm	/^f0103b73:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103b76	obj/kern/kernel.asm	/^f0103b76:	e8 6e 29 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103b7b	obj/kern/kernel.asm	/^f0103b7b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b7e	obj/kern/kernel.asm	/^f0103b7e:	39 b8 28 00 30 f0    	cmp    %edi,-0xfcfffd8(%eax)$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	75 34                	jne    f0103bba <env_free+0x50>$/;"	l
f0103b86	obj/kern/kernel.asm	/^f0103b86:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f0103b8b	obj/kern/kernel.asm	/^f0103b8b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	77 20                	ja     f0103bb2 <env_free+0x48>$/;"	l
f0103b92	obj/kern/kernel.asm	/^f0103b92:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103b96	obj/kern/kernel.asm	/^f0103b96:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0103b9d	obj/kern/kernel.asm	/^f0103b9d:	f0 $/;"	l
f0103b9e	obj/kern/kernel.asm	/^f0103b9e:	c7 44 24 04 cc 01 00 	movl   $0x1cc,0x4(%esp)$/;"	l
f0103ba5	obj/kern/kernel.asm	/^f0103ba5:	00 $/;"	l
f0103ba6	obj/kern/kernel.asm	/^f0103ba6:	c7 04 24 e2 88 10 f0 	movl   $0xf01088e2,(%esp)$/;"	l
f0103bad	obj/kern/kernel.asm	/^f0103bad:	e8 eb c4 ff ff       	call   f010009d <_panic>$/;"	l
f0103bb2	obj/kern/kernel.asm	/^f0103bb2:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103bb7	obj/kern/kernel.asm	/^f0103bb7:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103bba	obj/kern/kernel.asm	/^f0103bba:	8b 5f 48             	mov    0x48(%edi),%ebx$/;"	l
f0103bbd	obj/kern/kernel.asm	/^f0103bbd:	e8 27 29 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103bca	obj/kern/kernel.asm	/^f0103bca:	83 ba 28 00 30 f0 00 	cmpl   $0x0,-0xfcfffd8(%edx)$/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	74 11                	je     f0103be4 <env_free+0x7a>$/;"	l
f0103bd3	obj/kern/kernel.asm	/^f0103bd3:	e8 11 29 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103bd8	obj/kern/kernel.asm	/^f0103bd8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103bdb	obj/kern/kernel.asm	/^f0103bdb:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0103be1	obj/kern/kernel.asm	/^f0103be1:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103be4	obj/kern/kernel.asm	/^f0103be4:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103bec	obj/kern/kernel.asm	/^f0103bec:	c7 04 24 29 89 10 f0 	movl   $0xf0108929,(%esp)$/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	e8 70 04 00 00       	call   f0104068 <cprintf>$/;"	l
f0103bf8	obj/kern/kernel.asm	/^f0103bf8:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02:	89 c8                	mov    %ecx,%eax$/;"	l
f0103c04	obj/kern/kernel.asm	/^f0103c04:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103c07	obj/kern/kernel.asm	/^f0103c07:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	8b 34 88             	mov    (%eax,%ecx,4),%esi$/;"	l
f0103c10	obj/kern/kernel.asm	/^f0103c10:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	0f 84 b7 00 00 00    	je     f0103cd3 <env_free+0x169>$/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103c22	obj/kern/kernel.asm	/^f0103c22:	89 f0                	mov    %esi,%eax$/;"	l
f0103c24	obj/kern/kernel.asm	/^f0103c24:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103c27	obj/kern/kernel.asm	/^f0103c27:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	3b 05 14 fd 2f f0    	cmp    0xf02ffd14,%eax$/;"	l
f0103c30	obj/kern/kernel.asm	/^f0103c30:	72 20                	jb     f0103c52 <env_free+0xe8>$/;"	l
f0103c32	obj/kern/kernel.asm	/^f0103c32:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103c36	obj/kern/kernel.asm	/^f0103c36:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f0103c3d	obj/kern/kernel.asm	/^f0103c3d:	f0 $/;"	l
f0103c3e	obj/kern/kernel.asm	/^f0103c3e:	c7 44 24 04 dc 01 00 	movl   $0x1dc,0x4(%esp)$/;"	l
f0103c45	obj/kern/kernel.asm	/^f0103c45:	00 $/;"	l
f0103c46	obj/kern/kernel.asm	/^f0103c46:	c7 04 24 e2 88 10 f0 	movl   $0xf01088e2,(%esp)$/;"	l
f0103c4d	obj/kern/kernel.asm	/^f0103c4d:	e8 4b c4 ff ff       	call   f010009d <_panic>$/;"	l
f0103c52	obj/kern/kernel.asm	/^f0103c52:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103c55	obj/kern/kernel.asm	/^f0103c55:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103c58	obj/kern/kernel.asm	/^f0103c58:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103c5b	obj/kern/kernel.asm	/^f0103c5b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103c67	obj/kern/kernel.asm	/^f0103c67:	01 $/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	74 17                	je     f0103c81 <env_free+0x117>$/;"	l
f0103c6a	obj/kern/kernel.asm	/^f0103c6a:	89 d8                	mov    %ebx,%eax$/;"	l
f0103c6c	obj/kern/kernel.asm	/^f0103c6c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103c6f	obj/kern/kernel.asm	/^f0103c6f:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103c72	obj/kern/kernel.asm	/^f0103c72:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103c76	obj/kern/kernel.asm	/^f0103c76:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103c79	obj/kern/kernel.asm	/^f0103c79:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c7c	obj/kern/kernel.asm	/^f0103c7c:	e8 b4 d7 ff ff       	call   f0101435 <page_remove>$/;"	l
f0103c81	obj/kern/kernel.asm	/^f0103c81:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103c84	obj/kern/kernel.asm	/^f0103c84:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103c8a	obj/kern/kernel.asm	/^f0103c8a:	75 d4                	jne    f0103c60 <env_free+0xf6>$/;"	l
f0103c8c	obj/kern/kernel.asm	/^f0103c8c:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103c8f	obj/kern/kernel.asm	/^f0103c8f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103c9c	obj/kern/kernel.asm	/^f0103c9c:	3b 05 14 fd 2f f0    	cmp    0xf02ffd14,%eax$/;"	l
f0103ca2	obj/kern/kernel.asm	/^f0103ca2:	72 1c                	jb     f0103cc0 <env_free+0x156>$/;"	l
f0103ca4	obj/kern/kernel.asm	/^f0103ca4:	c7 44 24 08 34 7d 10 	movl   $0xf0107d34,0x8(%esp)$/;"	l
f0103cab	obj/kern/kernel.asm	/^f0103cab:	f0 $/;"	l
f0103cac	obj/kern/kernel.asm	/^f0103cac:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0103cb3	obj/kern/kernel.asm	/^f0103cb3:	00 $/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	c7 04 24 a1 85 10 f0 	movl   $0xf01085a1,(%esp)$/;"	l
f0103cbb	obj/kern/kernel.asm	/^f0103cbb:	e8 dd c3 ff ff       	call   f010009d <_panic>$/;"	l
f0103cc0	obj/kern/kernel.asm	/^f0103cc0:	a1 1c fd 2f f0       	mov    0xf02ffd1c,%eax$/;"	l
f0103cc5	obj/kern/kernel.asm	/^f0103cc5:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103cc8	obj/kern/kernel.asm	/^f0103cc8:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0103ccb	obj/kern/kernel.asm	/^f0103ccb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103cce	obj/kern/kernel.asm	/^f0103cce:	e8 3f d5 ff ff       	call   f0101212 <page_decref>$/;"	l
f0103cd3	obj/kern/kernel.asm	/^f0103cd3:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103cd7	obj/kern/kernel.asm	/^f0103cd7:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0103cde	obj/kern/kernel.asm	/^f0103cde:	0f 85 1b ff ff ff    	jne    f0103bff <env_free+0x95>$/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103ce7	obj/kern/kernel.asm	/^f0103ce7:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103cec	obj/kern/kernel.asm	/^f0103cec:	77 20                	ja     f0103d0e <env_free+0x1a4>$/;"	l
f0103cee	obj/kern/kernel.asm	/^f0103cee:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	f0 $/;"	l
f0103cfa	obj/kern/kernel.asm	/^f0103cfa:	c7 44 24 04 ea 01 00 	movl   $0x1ea,0x4(%esp)$/;"	l
f0103d01	obj/kern/kernel.asm	/^f0103d01:	00 $/;"	l
f0103d02	obj/kern/kernel.asm	/^f0103d02:	c7 04 24 e2 88 10 f0 	movl   $0xf01088e2,(%esp)$/;"	l
f0103d09	obj/kern/kernel.asm	/^f0103d09:	e8 8f c3 ff ff       	call   f010009d <_panic>$/;"	l
f0103d0e	obj/kern/kernel.asm	/^f0103d0e:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103d15	obj/kern/kernel.asm	/^f0103d15:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103d1d	obj/kern/kernel.asm	/^f0103d1d:	3b 05 14 fd 2f f0    	cmp    0xf02ffd14,%eax$/;"	l
f0103d23	obj/kern/kernel.asm	/^f0103d23:	72 1c                	jb     f0103d41 <env_free+0x1d7>$/;"	l
f0103d25	obj/kern/kernel.asm	/^f0103d25:	c7 44 24 08 34 7d 10 	movl   $0xf0107d34,0x8(%esp)$/;"	l
f0103d2c	obj/kern/kernel.asm	/^f0103d2c:	f0 $/;"	l
f0103d2d	obj/kern/kernel.asm	/^f0103d2d:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0103d34	obj/kern/kernel.asm	/^f0103d34:	00 $/;"	l
f0103d35	obj/kern/kernel.asm	/^f0103d35:	c7 04 24 a1 85 10 f0 	movl   $0xf01085a1,(%esp)$/;"	l
f0103d3c	obj/kern/kernel.asm	/^f0103d3c:	e8 5c c3 ff ff       	call   f010009d <_panic>$/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	8b 15 1c fd 2f f0    	mov    0xf02ffd1c,%edx$/;"	l
f0103d47	obj/kern/kernel.asm	/^f0103d47:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103d4a	obj/kern/kernel.asm	/^f0103d4a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d4d	obj/kern/kernel.asm	/^f0103d4d:	e8 c0 d4 ff ff       	call   f0101212 <page_decref>$/;"	l
f0103d52	obj/kern/kernel.asm	/^f0103d52:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103d59	obj/kern/kernel.asm	/^f0103d59:	a1 4c 72 2b f0       	mov    0xf02b724c,%eax$/;"	l
f0103d5e	obj/kern/kernel.asm	/^f0103d5e:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103d61	obj/kern/kernel.asm	/^f0103d61:	89 3d 4c 72 2b f0    	mov    %edi,0xf02b724c$/;"	l
f0103d67	obj/kern/kernel.asm	/^f0103d67:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103d6a	obj/kern/kernel.asm	/^f0103d6a:	5b                   	pop    %ebx$/;"	l
f0103d6b	obj/kern/kernel.asm	/^f0103d6b:	5e                   	pop    %esi$/;"	l
f0103d6c	obj/kern/kernel.asm	/^f0103d6c:	5f                   	pop    %edi$/;"	l
f0103d6d	obj/kern/kernel.asm	/^f0103d6d:	5d                   	pop    %ebp$/;"	l
f0103d6e	obj/kern/kernel.asm	/^f0103d6e:	c3                   	ret    $/;"	l
f0103d6f	obj/kern/kernel.asm	/^f0103d6f <env_destroy>:$/;"	l
f0103d6f	obj/kern/kernel.asm	/^f0103d6f:	55                   	push   %ebp$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	53                   	push   %ebx$/;"	l
f0103d73	obj/kern/kernel.asm	/^f0103d73:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103d76	obj/kern/kernel.asm	/^f0103d76:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103d79	obj/kern/kernel.asm	/^f0103d79:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103d7d	obj/kern/kernel.asm	/^f0103d7d:	75 19                	jne    f0103d98 <env_destroy+0x29>$/;"	l
f0103d7f	obj/kern/kernel.asm	/^f0103d7f:	e8 65 27 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103d84	obj/kern/kernel.asm	/^f0103d84:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	39 98 28 00 30 f0    	cmp    %ebx,-0xfcfffd8(%eax)$/;"	l
f0103d8d	obj/kern/kernel.asm	/^f0103d8d:	74 09                	je     f0103d98 <env_destroy+0x29>$/;"	l
f0103d8f	obj/kern/kernel.asm	/^f0103d8f:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103d96	obj/kern/kernel.asm	/^f0103d96:	eb 2f                	jmp    f0103dc7 <env_destroy+0x58>$/;"	l
f0103d98	obj/kern/kernel.asm	/^f0103d98:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103d9b	obj/kern/kernel.asm	/^f0103d9b:	e8 ca fd ff ff       	call   f0103b6a <env_free>$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	e8 44 27 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103da5	obj/kern/kernel.asm	/^f0103da5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	39 98 28 00 30 f0    	cmp    %ebx,-0xfcfffd8(%eax)$/;"	l
f0103dae	obj/kern/kernel.asm	/^f0103dae:	75 17                	jne    f0103dc7 <env_destroy+0x58>$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0:	e8 34 27 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103db5	obj/kern/kernel.asm	/^f0103db5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8:	c7 80 28 00 30 f0 00 	movl   $0x0,-0xfcfffd8(%eax)$/;"	l
f0103dbf	obj/kern/kernel.asm	/^f0103dbf:	00 00 00 $/;"	l
f0103dc2	obj/kern/kernel.asm	/^f0103dc2:	e8 9f 0c 00 00       	call   f0104a66 <sched_yield>$/;"	l
f0103dc7	obj/kern/kernel.asm	/^f0103dc7:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	5b                   	pop    %ebx$/;"	l
f0103dcb	obj/kern/kernel.asm	/^f0103dcb:	5d                   	pop    %ebp$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	c3                   	ret    $/;"	l
f0103dcd	obj/kern/kernel.asm	/^f0103dcd <env_pop_tf>:$/;"	l
f0103dcd	obj/kern/kernel.asm	/^f0103dcd:	55                   	push   %ebp$/;"	l
f0103dce	obj/kern/kernel.asm	/^f0103dce:	89 e5                	mov    %esp,%ebp$/;"	l
f0103dd0	obj/kern/kernel.asm	/^f0103dd0:	53                   	push   %ebx$/;"	l
f0103dd1	obj/kern/kernel.asm	/^f0103dd1:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103dd4	obj/kern/kernel.asm	/^f0103dd4:	e8 10 27 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103dd9	obj/kern/kernel.asm	/^f0103dd9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ddc	obj/kern/kernel.asm	/^f0103ddc:	8b 98 28 00 30 f0    	mov    -0xfcfffd8(%eax),%ebx$/;"	l
f0103de2	obj/kern/kernel.asm	/^f0103de2:	e8 02 27 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103de7	obj/kern/kernel.asm	/^f0103de7:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103dea	obj/kern/kernel.asm	/^f0103dea:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103ded	obj/kern/kernel.asm	/^f0103ded:	61                   	popa   $/;"	l
f0103dee	obj/kern/kernel.asm	/^f0103dee:	07                   	pop    %es$/;"	l
f0103def	obj/kern/kernel.asm	/^f0103def:	1f                   	pop    %ds$/;"	l
f0103df0	obj/kern/kernel.asm	/^f0103df0:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103df3	obj/kern/kernel.asm	/^f0103df3:	cf                   	iret   $/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	c7 44 24 08 3f 89 10 	movl   $0xf010893f,0x8(%esp)$/;"	l
f0103dfb	obj/kern/kernel.asm	/^f0103dfb:	f0 $/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	c7 44 24 04 20 02 00 	movl   $0x220,0x4(%esp)$/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03:	00 $/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	c7 04 24 e2 88 10 f0 	movl   $0xf01088e2,(%esp)$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	e8 8d c2 ff ff       	call   f010009d <_panic>$/;"	l
f0103e10	obj/kern/kernel.asm	/^f0103e10 <env_run>:$/;"	l
f0103e10	obj/kern/kernel.asm	/^f0103e10:	55                   	push   %ebp$/;"	l
f0103e11	obj/kern/kernel.asm	/^f0103e11:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e13	obj/kern/kernel.asm	/^f0103e13:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16:	e8 ce 26 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103e1b	obj/kern/kernel.asm	/^f0103e1b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e1e	obj/kern/kernel.asm	/^f0103e1e:	83 b8 28 00 30 f0 00 	cmpl   $0x0,-0xfcfffd8(%eax)$/;"	l
f0103e25	obj/kern/kernel.asm	/^f0103e25:	74 29                	je     f0103e50 <env_run+0x40>$/;"	l
f0103e27	obj/kern/kernel.asm	/^f0103e27:	e8 bd 26 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103e2c	obj/kern/kernel.asm	/^f0103e2c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e2f	obj/kern/kernel.asm	/^f0103e2f:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0103e35	obj/kern/kernel.asm	/^f0103e35:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103e39	obj/kern/kernel.asm	/^f0103e39:	75 15                	jne    f0103e50 <env_run+0x40>$/;"	l
f0103e3b	obj/kern/kernel.asm	/^f0103e3b:	e8 a9 26 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e43	obj/kern/kernel.asm	/^f0103e43:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0103e49	obj/kern/kernel.asm	/^f0103e49:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50:	e8 94 26 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103e55	obj/kern/kernel.asm	/^f0103e55:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e58	obj/kern/kernel.asm	/^f0103e58:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	89 90 28 00 30 f0    	mov    %edx,-0xfcfffd8(%eax)$/;"	l
f0103e61	obj/kern/kernel.asm	/^f0103e61:	e8 83 26 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e69	obj/kern/kernel.asm	/^f0103e69:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0103e6f	obj/kern/kernel.asm	/^f0103e6f:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103e76	obj/kern/kernel.asm	/^f0103e76:	e8 6e 26 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103e7b	obj/kern/kernel.asm	/^f0103e7b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0103e84	obj/kern/kernel.asm	/^f0103e84:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88:	e8 5c 26 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e90	obj/kern/kernel.asm	/^f0103e90:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103e99	obj/kern/kernel.asm	/^f0103e99:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103e9e	obj/kern/kernel.asm	/^f0103e9e:	77 20                	ja     f0103ec0 <env_run+0xb0>$/;"	l
f0103ea0	obj/kern/kernel.asm	/^f0103ea0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103ea4	obj/kern/kernel.asm	/^f0103ea4:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0103eab	obj/kern/kernel.asm	/^f0103eab:	f0 $/;"	l
f0103eac	obj/kern/kernel.asm	/^f0103eac:	c7 44 24 04 46 02 00 	movl   $0x246,0x4(%esp)$/;"	l
f0103eb3	obj/kern/kernel.asm	/^f0103eb3:	00 $/;"	l
f0103eb4	obj/kern/kernel.asm	/^f0103eb4:	c7 04 24 e2 88 10 f0 	movl   $0xf01088e2,(%esp)$/;"	l
f0103ebb	obj/kern/kernel.asm	/^f0103ebb:	e8 dd c1 ff ff       	call   f010009d <_panic>$/;"	l
f0103ec0	obj/kern/kernel.asm	/^f0103ec0:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103ec5	obj/kern/kernel.asm	/^f0103ec5:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8:	c7 04 24 60 44 12 f0 	movl   $0xf0124460,(%esp)$/;"	l
f0103ecf	obj/kern/kernel.asm	/^f0103ecf:	e8 3f 29 00 00       	call   f0106813 <spin_unlock>$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	f3 90                	pause  $/;"	l
f0103ed6	obj/kern/kernel.asm	/^f0103ed6:	e8 0e 26 00 00       	call   f01064e9 <cpunum>$/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ede	obj/kern/kernel.asm	/^f0103ede:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0103ee4	obj/kern/kernel.asm	/^f0103ee4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ee7	obj/kern/kernel.asm	/^f0103ee7:	e8 e1 fe ff ff       	call   f0103dcd <env_pop_tf>$/;"	l
f0103eec	obj/kern/kernel.asm	/^f0103eec <mc146818_read>:$/;"	l
f0103eec	obj/kern/kernel.asm	/^f0103eec:	55                   	push   %ebp$/;"	l
f0103eed	obj/kern/kernel.asm	/^f0103eed:	89 e5                	mov    %esp,%ebp$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103ef8	obj/kern/kernel.asm	/^f0103ef8:	ee                   	out    %al,(%dx)$/;"	l
f0103ef9	obj/kern/kernel.asm	/^f0103ef9:	b2 71                	mov    $0x71,%dl$/;"	l
f0103efb	obj/kern/kernel.asm	/^f0103efb:	ec                   	in     (%dx),%al$/;"	l
f0103efc	obj/kern/kernel.asm	/^f0103efc:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103eff	obj/kern/kernel.asm	/^f0103eff:	5d                   	pop    %ebp$/;"	l
f0103f00	obj/kern/kernel.asm	/^f0103f00:	c3                   	ret    $/;"	l
f0103f01	obj/kern/kernel.asm	/^f0103f01 <mc146818_write>:$/;"	l
f0103f01	obj/kern/kernel.asm	/^f0103f01:	55                   	push   %ebp$/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103f08	obj/kern/kernel.asm	/^f0103f08:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	ee                   	out    %al,(%dx)$/;"	l
f0103f0e	obj/kern/kernel.asm	/^f0103f0e:	b2 71                	mov    $0x71,%dl$/;"	l
f0103f10	obj/kern/kernel.asm	/^f0103f10:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103f13	obj/kern/kernel.asm	/^f0103f13:	ee                   	out    %al,(%dx)$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	5d                   	pop    %ebp$/;"	l
f0103f15	obj/kern/kernel.asm	/^f0103f15:	c3                   	ret    $/;"	l
f0103f16	obj/kern/kernel.asm	/^f0103f16 <irq_setmask_8259A>:$/;"	l
f0103f16	obj/kern/kernel.asm	/^f0103f16:	55                   	push   %ebp$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f19	obj/kern/kernel.asm	/^f0103f19:	56                   	push   %esi$/;"	l
f0103f1a	obj/kern/kernel.asm	/^f0103f1a:	53                   	push   %ebx$/;"	l
f0103f1b	obj/kern/kernel.asm	/^f0103f1b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103f21	obj/kern/kernel.asm	/^f0103f21:	66 a3 a8 43 12 f0    	mov    %ax,0xf01243a8$/;"	l
f0103f27	obj/kern/kernel.asm	/^f0103f27:	80 3d 50 72 2b f0 00 	cmpb   $0x0,0xf02b7250$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	74 4e                	je     f0103f7e <irq_setmask_8259A+0x68>$/;"	l
f0103f30	obj/kern/kernel.asm	/^f0103f30:	89 c6                	mov    %eax,%esi$/;"	l
f0103f32	obj/kern/kernel.asm	/^f0103f32:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103f37	obj/kern/kernel.asm	/^f0103f37:	ee                   	out    %al,(%dx)$/;"	l
f0103f38	obj/kern/kernel.asm	/^f0103f38:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103f3c	obj/kern/kernel.asm	/^f0103f3c:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f3e	obj/kern/kernel.asm	/^f0103f3e:	ee                   	out    %al,(%dx)$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	c7 04 24 4b 89 10 f0 	movl   $0xf010894b,(%esp)$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	e8 1d 01 00 00       	call   f0104068 <cprintf>$/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103f50	obj/kern/kernel.asm	/^f0103f50:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	f7 d6                	not    %esi$/;"	l
f0103f55	obj/kern/kernel.asm	/^f0103f55:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	73 10                	jae    f0103f6a <irq_setmask_8259A+0x54>$/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103f5e	obj/kern/kernel.asm	/^f0103f5e:	c7 04 24 0b 8e 10 f0 	movl   $0xf0108e0b,(%esp)$/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65:	e8 fe 00 00 00       	call   f0104068 <cprintf>$/;"	l
f0103f6a	obj/kern/kernel.asm	/^f0103f6a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103f6d	obj/kern/kernel.asm	/^f0103f6d:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103f70	obj/kern/kernel.asm	/^f0103f70:	75 e3                	jne    f0103f55 <irq_setmask_8259A+0x3f>$/;"	l
f0103f72	obj/kern/kernel.asm	/^f0103f72:	c7 04 24 9f 88 10 f0 	movl   $0xf010889f,(%esp)$/;"	l
f0103f79	obj/kern/kernel.asm	/^f0103f79:	e8 ea 00 00 00       	call   f0104068 <cprintf>$/;"	l
f0103f7e	obj/kern/kernel.asm	/^f0103f7e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f81	obj/kern/kernel.asm	/^f0103f81:	5b                   	pop    %ebx$/;"	l
f0103f82	obj/kern/kernel.asm	/^f0103f82:	5e                   	pop    %esi$/;"	l
f0103f83	obj/kern/kernel.asm	/^f0103f83:	5d                   	pop    %ebp$/;"	l
f0103f84	obj/kern/kernel.asm	/^f0103f84:	c3                   	ret    $/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85 <pic_init>:$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	c6 05 50 72 2b f0 01 	movb   $0x1,0xf02b7250$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103f96	obj/kern/kernel.asm	/^f0103f96:	ee                   	out    %al,(%dx)$/;"	l
f0103f97	obj/kern/kernel.asm	/^f0103f97:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	ee                   	out    %al,(%dx)$/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	b2 20                	mov    $0x20,%dl$/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	ee                   	out    %al,(%dx)$/;"	l
f0103fa2	obj/kern/kernel.asm	/^f0103fa2:	b2 21                	mov    $0x21,%dl$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	ee                   	out    %al,(%dx)$/;"	l
f0103faa	obj/kern/kernel.asm	/^f0103faa:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	ee                   	out    %al,(%dx)$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103fb5	obj/kern/kernel.asm	/^f0103fb5:	ee                   	out    %al,(%dx)$/;"	l
f0103fb6	obj/kern/kernel.asm	/^f0103fb6:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103fb8	obj/kern/kernel.asm	/^f0103fb8:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103fbd	obj/kern/kernel.asm	/^f0103fbd:	ee                   	out    %al,(%dx)$/;"	l
f0103fbe	obj/kern/kernel.asm	/^f0103fbe:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5:	ee                   	out    %al,(%dx)$/;"	l
f0103fc6	obj/kern/kernel.asm	/^f0103fc6:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	ee                   	out    %al,(%dx)$/;"	l
f0103fcc	obj/kern/kernel.asm	/^f0103fcc:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103fd1	obj/kern/kernel.asm	/^f0103fd1:	ee                   	out    %al,(%dx)$/;"	l
f0103fd2	obj/kern/kernel.asm	/^f0103fd2:	b2 20                	mov    $0x20,%dl$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	ee                   	out    %al,(%dx)$/;"	l
f0103fda	obj/kern/kernel.asm	/^f0103fda:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	ee                   	out    %al,(%dx)$/;"	l
f0103fe0	obj/kern/kernel.asm	/^f0103fe0:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103fe7	obj/kern/kernel.asm	/^f0103fe7:	ee                   	out    %al,(%dx)$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	ee                   	out    %al,(%dx)$/;"	l
f0103fee	obj/kern/kernel.asm	/^f0103fee:	0f b7 05 a8 43 12 f0 	movzwl 0xf01243a8,%eax$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	74 12                	je     f010400d <pic_init+0x88>$/;"	l
f0103ffb	obj/kern/kernel.asm	/^f0103ffb:	55                   	push   %ebp$/;"	l
f0103ffc	obj/kern/kernel.asm	/^f0103ffc:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104001	obj/kern/kernel.asm	/^f0104001:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0104004	obj/kern/kernel.asm	/^f0104004:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104007	obj/kern/kernel.asm	/^f0104007:	e8 0a ff ff ff       	call   f0103f16 <irq_setmask_8259A>$/;"	l
f010400c	obj/kern/kernel.asm	/^f010400c:	c9                   	leave  $/;"	l
f010400d	obj/kern/kernel.asm	/^f010400d:	f3 c3                	repz ret $/;"	l
f010400f	obj/kern/kernel.asm	/^f010400f <irq_eoi>:$/;"	l
f010400f	obj/kern/kernel.asm	/^f010400f:	55                   	push   %ebp$/;"	l
f0104010	obj/kern/kernel.asm	/^f0104010:	89 e5                	mov    %esp,%ebp$/;"	l
f0104012	obj/kern/kernel.asm	/^f0104012:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0104017	obj/kern/kernel.asm	/^f0104017:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010401c	obj/kern/kernel.asm	/^f010401c:	ee                   	out    %al,(%dx)$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	b2 a0                	mov    $0xa0,%dl$/;"	l
f010401f	obj/kern/kernel.asm	/^f010401f:	ee                   	out    %al,(%dx)$/;"	l
f0104020	obj/kern/kernel.asm	/^f0104020:	5d                   	pop    %ebp$/;"	l
f0104021	obj/kern/kernel.asm	/^f0104021:	c3                   	ret    $/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022 <putch>:$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	55                   	push   %ebp$/;"	l
f0104023	obj/kern/kernel.asm	/^f0104023:	89 e5                	mov    %esp,%ebp$/;"	l
f0104025	obj/kern/kernel.asm	/^f0104025:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104028	obj/kern/kernel.asm	/^f0104028:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010402b	obj/kern/kernel.asm	/^f010402b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010402e	obj/kern/kernel.asm	/^f010402e:	e8 04 c8 ff ff       	call   f0100837 <cputchar>$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	c9                   	leave  $/;"	l
f0104034	obj/kern/kernel.asm	/^f0104034:	c3                   	ret    $/;"	l
f0104035	obj/kern/kernel.asm	/^f0104035 <vcprintf>:$/;"	l
f0104035	obj/kern/kernel.asm	/^f0104035:	55                   	push   %ebp$/;"	l
f0104036	obj/kern/kernel.asm	/^f0104036:	89 e5                	mov    %esp,%ebp$/;"	l
f0104038	obj/kern/kernel.asm	/^f0104038:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010403b	obj/kern/kernel.asm	/^f010403b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104042	obj/kern/kernel.asm	/^f0104042:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104045	obj/kern/kernel.asm	/^f0104045:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104049	obj/kern/kernel.asm	/^f0104049:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010404c	obj/kern/kernel.asm	/^f010404c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104050	obj/kern/kernel.asm	/^f0104050:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0104053	obj/kern/kernel.asm	/^f0104053:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104057	obj/kern/kernel.asm	/^f0104057:	c7 04 24 22 40 10 f0 	movl   $0xf0104022,(%esp)$/;"	l
f010405e	obj/kern/kernel.asm	/^f010405e:	e8 6b 17 00 00       	call   f01057ce <vprintfmt>$/;"	l
f0104063	obj/kern/kernel.asm	/^f0104063:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104066	obj/kern/kernel.asm	/^f0104066:	c9                   	leave  $/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	c3                   	ret    $/;"	l
f0104068	obj/kern/kernel.asm	/^f0104068 <cprintf>:$/;"	l
f0104068	obj/kern/kernel.asm	/^f0104068:	55                   	push   %ebp$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	89 e5                	mov    %esp,%ebp$/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0104071	obj/kern/kernel.asm	/^f0104071:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104075	obj/kern/kernel.asm	/^f0104075:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104078	obj/kern/kernel.asm	/^f0104078:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010407b	obj/kern/kernel.asm	/^f010407b:	e8 b5 ff ff ff       	call   f0104035 <vcprintf>$/;"	l
f0104080	obj/kern/kernel.asm	/^f0104080:	c9                   	leave  $/;"	l
f0104081	obj/kern/kernel.asm	/^f0104081:	c3                   	ret    $/;"	l
f0104082	obj/kern/kernel.asm	/^f0104082:	66 90                	xchg   %ax,%ax$/;"	l
f0104084	obj/kern/kernel.asm	/^f0104084:	66 90                	xchg   %ax,%ax$/;"	l
f0104086	obj/kern/kernel.asm	/^f0104086:	66 90                	xchg   %ax,%ax$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	66 90                	xchg   %ax,%ax$/;"	l
f010408a	obj/kern/kernel.asm	/^f010408a:	66 90                	xchg   %ax,%ax$/;"	l
f010408c	obj/kern/kernel.asm	/^f010408c:	66 90                	xchg   %ax,%ax$/;"	l
f010408e	obj/kern/kernel.asm	/^f010408e:	66 90                	xchg   %ax,%ax$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090 <trap_init_percpu>:$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090:	55                   	push   %ebp$/;"	l
f0104091	obj/kern/kernel.asm	/^f0104091:	89 e5                	mov    %esp,%ebp$/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	57                   	push   %edi$/;"	l
f0104094	obj/kern/kernel.asm	/^f0104094:	56                   	push   %esi$/;"	l
f0104095	obj/kern/kernel.asm	/^f0104095:	53                   	push   %ebx$/;"	l
f0104096	obj/kern/kernel.asm	/^f0104096:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104099	obj/kern/kernel.asm	/^f0104099:	e8 4b 24 00 00       	call   f01064e9 <cpunum>$/;"	l
f010409e	obj/kern/kernel.asm	/^f010409e:	89 c3                	mov    %eax,%ebx$/;"	l
f01040a0	obj/kern/kernel.asm	/^f01040a0:	e8 44 24 00 00       	call   f01064e9 <cpunum>$/;"	l
f01040a5	obj/kern/kernel.asm	/^f01040a5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040a8	obj/kern/kernel.asm	/^f01040a8:	89 da                	mov    %ebx,%edx$/;"	l
f01040aa	obj/kern/kernel.asm	/^f01040aa:	f7 da                	neg    %edx$/;"	l
f01040ac	obj/kern/kernel.asm	/^f01040ac:	c1 e2 10             	shl    $0x10,%edx$/;"	l
f01040af	obj/kern/kernel.asm	/^f01040af:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f01040b5	obj/kern/kernel.asm	/^f01040b5:	89 90 30 00 30 f0    	mov    %edx,-0xfcfffd0(%eax)$/;"	l
f01040bb	obj/kern/kernel.asm	/^f01040bb:	e8 29 24 00 00       	call   f01064e9 <cpunum>$/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040c3	obj/kern/kernel.asm	/^f01040c3:	66 c7 80 34 00 30 f0 	movw   $0x10,-0xfcfffcc(%eax)$/;"	l
f01040ca	obj/kern/kernel.asm	/^f01040ca:	10 00 $/;"	l
f01040cc	obj/kern/kernel.asm	/^f01040cc:	83 c3 05             	add    $0x5,%ebx$/;"	l
f01040cf	obj/kern/kernel.asm	/^f01040cf:	e8 15 24 00 00       	call   f01064e9 <cpunum>$/;"	l
f01040d4	obj/kern/kernel.asm	/^f01040d4:	89 c7                	mov    %eax,%edi$/;"	l
f01040d6	obj/kern/kernel.asm	/^f01040d6:	e8 0e 24 00 00       	call   f01064e9 <cpunum>$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	89 c6                	mov    %eax,%esi$/;"	l
f01040dd	obj/kern/kernel.asm	/^f01040dd:	e8 07 24 00 00       	call   f01064e9 <cpunum>$/;"	l
f01040e2	obj/kern/kernel.asm	/^f01040e2:	66 c7 04 dd 40 43 12 	movw   $0x67,-0xfedbcc0(,%ebx,8)$/;"	l
f01040e9	obj/kern/kernel.asm	/^f01040e9:	f0 67 00 $/;"	l
f01040ec	obj/kern/kernel.asm	/^f01040ec:	6b ff 74             	imul   $0x74,%edi,%edi$/;"	l
f01040ef	obj/kern/kernel.asm	/^f01040ef:	81 c7 2c 00 30 f0    	add    $0xf030002c,%edi$/;"	l
f01040f5	obj/kern/kernel.asm	/^f01040f5:	66 89 3c dd 42 43 12 	mov    %di,-0xfedbcbe(,%ebx,8)$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	f0 $/;"	l
f01040fd	obj/kern/kernel.asm	/^f01040fd:	6b d6 74             	imul   $0x74,%esi,%edx$/;"	l
f0104100	obj/kern/kernel.asm	/^f0104100:	81 c2 2c 00 30 f0    	add    $0xf030002c,%edx$/;"	l
f0104106	obj/kern/kernel.asm	/^f0104106:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0104109	obj/kern/kernel.asm	/^f0104109:	88 14 dd 44 43 12 f0 	mov    %dl,-0xfedbcbc(,%ebx,8)$/;"	l
f0104110	obj/kern/kernel.asm	/^f0104110:	c6 04 dd 46 43 12 f0 	movb   $0x40,-0xfedbcba(,%ebx,8)$/;"	l
f0104117	obj/kern/kernel.asm	/^f0104117:	40 $/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010411b	obj/kern/kernel.asm	/^f010411b:	05 2c 00 30 f0       	add    $0xf030002c,%eax$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0104123	obj/kern/kernel.asm	/^f0104123:	88 04 dd 47 43 12 f0 	mov    %al,-0xfedbcb9(,%ebx,8)$/;"	l
f010412a	obj/kern/kernel.asm	/^f010412a:	c6 04 dd 45 43 12 f0 	movb   $0x89,-0xfedbcbb(,%ebx,8)$/;"	l
f0104131	obj/kern/kernel.asm	/^f0104131:	89 $/;"	l
f0104132	obj/kern/kernel.asm	/^f0104132:	c1 e3 03             	shl    $0x3,%ebx$/;"	l
f0104135	obj/kern/kernel.asm	/^f0104135:	0f 00 db             	ltr    %bx$/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138:	b8 aa 43 12 f0       	mov    $0xf01243aa,%eax$/;"	l
f010413d	obj/kern/kernel.asm	/^f010413d:	0f 01 18             	lidtl  (%eax)$/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0104143	obj/kern/kernel.asm	/^f0104143:	5b                   	pop    %ebx$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144:	5e                   	pop    %esi$/;"	l
f0104145	obj/kern/kernel.asm	/^f0104145:	5f                   	pop    %edi$/;"	l
f0104146	obj/kern/kernel.asm	/^f0104146:	5d                   	pop    %ebp$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	c3                   	ret    $/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148 <trap_init>:$/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010414d	obj/kern/kernel.asm	/^f010414d:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	74 39                	je     f010418b <trap_init+0x43>$/;"	l
f0104152	obj/kern/kernel.asm	/^f0104152:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0104155	obj/kern/kernel.asm	/^f0104155:	74 34                	je     f010418b <trap_init+0x43>$/;"	l
f0104157	obj/kern/kernel.asm	/^f0104157:	8b 14 85 b0 43 12 f0 	mov    -0xfedbc50(,%eax,4),%edx$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e:	66 89 14 c5 60 72 2b 	mov    %dx,-0xfd48da0(,%eax,8)$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	f0 $/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	66 c7 04 c5 62 72 2b 	movw   $0x8,-0xfd48d9e(,%eax,8)$/;"	l
f010416d	obj/kern/kernel.asm	/^f010416d:	f0 08 00 $/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170:	c6 04 c5 64 72 2b f0 	movb   $0x0,-0xfd48d9c(,%eax,8)$/;"	l
f0104177	obj/kern/kernel.asm	/^f0104177:	00 $/;"	l
f0104178	obj/kern/kernel.asm	/^f0104178:	c6 04 c5 65 72 2b f0 	movb   $0x8e,-0xfd48d9b(,%eax,8)$/;"	l
f010417f	obj/kern/kernel.asm	/^f010417f:	8e $/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0104183	obj/kern/kernel.asm	/^f0104183:	66 89 14 c5 66 72 2b 	mov    %dx,-0xfd48d9a(,%eax,8)$/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a:	f0 $/;"	l
f010418b	obj/kern/kernel.asm	/^f010418b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010418e	obj/kern/kernel.asm	/^f010418e:	83 f8 14             	cmp    $0x14,%eax$/;"	l
f0104191	obj/kern/kernel.asm	/^f0104191:	75 ba                	jne    f010414d <trap_init+0x5>$/;"	l
f0104193	obj/kern/kernel.asm	/^f0104193:	a1 bc 43 12 f0       	mov    0xf01243bc,%eax$/;"	l
f0104198	obj/kern/kernel.asm	/^f0104198:	66 a3 78 72 2b f0    	mov    %ax,0xf02b7278$/;"	l
f010419e	obj/kern/kernel.asm	/^f010419e:	66 c7 05 7a 72 2b f0 	movw   $0x8,0xf02b727a$/;"	l
f01041a5	obj/kern/kernel.asm	/^f01041a5:	08 00 $/;"	l
f01041a7	obj/kern/kernel.asm	/^f01041a7:	c6 05 7c 72 2b f0 00 	movb   $0x0,0xf02b727c$/;"	l
f01041ae	obj/kern/kernel.asm	/^f01041ae:	c6 05 7d 72 2b f0 ee 	movb   $0xee,0xf02b727d$/;"	l
f01041b5	obj/kern/kernel.asm	/^f01041b5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041b8	obj/kern/kernel.asm	/^f01041b8:	66 a3 7e 72 2b f0    	mov    %ax,0xf02b727e$/;"	l
f01041be	obj/kern/kernel.asm	/^f01041be:	a1 00 44 12 f0       	mov    0xf0124400,%eax$/;"	l
f01041c3	obj/kern/kernel.asm	/^f01041c3:	66 a3 e0 73 2b f0    	mov    %ax,0xf02b73e0$/;"	l
f01041c9	obj/kern/kernel.asm	/^f01041c9:	66 c7 05 e2 73 2b f0 	movw   $0x8,0xf02b73e2$/;"	l
f01041d0	obj/kern/kernel.asm	/^f01041d0:	08 00 $/;"	l
f01041d2	obj/kern/kernel.asm	/^f01041d2:	c6 05 e4 73 2b f0 00 	movb   $0x0,0xf02b73e4$/;"	l
f01041d9	obj/kern/kernel.asm	/^f01041d9:	c6 05 e5 73 2b f0 ee 	movb   $0xee,0xf02b73e5$/;"	l
f01041e0	obj/kern/kernel.asm	/^f01041e0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041e3	obj/kern/kernel.asm	/^f01041e3:	66 a3 e6 73 2b f0    	mov    %ax,0xf02b73e6$/;"	l
f01041e9	obj/kern/kernel.asm	/^f01041e9:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01041ee	obj/kern/kernel.asm	/^f01041ee:	8b 14 85 84 43 12 f0 	mov    -0xfedbc7c(,%eax,4),%edx$/;"	l
f01041f5	obj/kern/kernel.asm	/^f01041f5:	66 89 14 c5 60 72 2b 	mov    %dx,-0xfd48da0(,%eax,8)$/;"	l
f01041fc	obj/kern/kernel.asm	/^f01041fc:	f0 $/;"	l
f01041fd	obj/kern/kernel.asm	/^f01041fd:	66 c7 04 c5 62 72 2b 	movw   $0x8,-0xfd48d9e(,%eax,8)$/;"	l
f0104204	obj/kern/kernel.asm	/^f0104204:	f0 08 00 $/;"	l
f0104207	obj/kern/kernel.asm	/^f0104207:	c6 04 c5 64 72 2b f0 	movb   $0x0,-0xfd48d9c(,%eax,8)$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	00 $/;"	l
f010420f	obj/kern/kernel.asm	/^f010420f:	c6 04 c5 65 72 2b f0 	movb   $0x8e,-0xfd48d9b(,%eax,8)$/;"	l
f0104216	obj/kern/kernel.asm	/^f0104216:	8e $/;"	l
f0104217	obj/kern/kernel.asm	/^f0104217:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	66 89 14 c5 66 72 2b 	mov    %dx,-0xfd48d9a(,%eax,8)$/;"	l
f0104221	obj/kern/kernel.asm	/^f0104221:	f0 $/;"	l
f0104222	obj/kern/kernel.asm	/^f0104222:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104225	obj/kern/kernel.asm	/^f0104225:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
f0104228	obj/kern/kernel.asm	/^f0104228:	75 c4                	jne    f01041ee <trap_init+0xa6>$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	55                   	push   %ebp$/;"	l
f010422b	obj/kern/kernel.asm	/^f010422b:	89 e5                	mov    %esp,%ebp$/;"	l
f010422d	obj/kern/kernel.asm	/^f010422d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104230	obj/kern/kernel.asm	/^f0104230:	e8 5b fe ff ff       	call   f0104090 <trap_init_percpu>$/;"	l
f0104235	obj/kern/kernel.asm	/^f0104235:	c9                   	leave  $/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	c3                   	ret    $/;"	l
f0104237	obj/kern/kernel.asm	/^f0104237 <print_regs>:$/;"	l
f0104237	obj/kern/kernel.asm	/^f0104237:	55                   	push   %ebp$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	89 e5                	mov    %esp,%ebp$/;"	l
f010423a	obj/kern/kernel.asm	/^f010423a:	53                   	push   %ebx$/;"	l
f010423b	obj/kern/kernel.asm	/^f010423b:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104241	obj/kern/kernel.asm	/^f0104241:	8b 03                	mov    (%ebx),%eax$/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104247	obj/kern/kernel.asm	/^f0104247:	c7 04 24 5f 89 10 f0 	movl   $0xf010895f,(%esp)$/;"	l
f010424e	obj/kern/kernel.asm	/^f010424e:	e8 15 fe ff ff       	call   f0104068 <cprintf>$/;"	l
f0104253	obj/kern/kernel.asm	/^f0104253:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010425a	obj/kern/kernel.asm	/^f010425a:	c7 04 24 6e 89 10 f0 	movl   $0xf010896e,(%esp)$/;"	l
f0104261	obj/kern/kernel.asm	/^f0104261:	e8 02 fe ff ff       	call   f0104068 <cprintf>$/;"	l
f0104266	obj/kern/kernel.asm	/^f0104266:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104269	obj/kern/kernel.asm	/^f0104269:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010426d	obj/kern/kernel.asm	/^f010426d:	c7 04 24 7d 89 10 f0 	movl   $0xf010897d,(%esp)$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	e8 ef fd ff ff       	call   f0104068 <cprintf>$/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104280	obj/kern/kernel.asm	/^f0104280:	c7 04 24 8c 89 10 f0 	movl   $0xf010898c,(%esp)$/;"	l
f0104287	obj/kern/kernel.asm	/^f0104287:	e8 dc fd ff ff       	call   f0104068 <cprintf>$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f010428f	obj/kern/kernel.asm	/^f010428f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104293	obj/kern/kernel.asm	/^f0104293:	c7 04 24 9b 89 10 f0 	movl   $0xf010899b,(%esp)$/;"	l
f010429a	obj/kern/kernel.asm	/^f010429a:	e8 c9 fd ff ff       	call   f0104068 <cprintf>$/;"	l
f010429f	obj/kern/kernel.asm	/^f010429f:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01042a2	obj/kern/kernel.asm	/^f01042a2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01042a6	obj/kern/kernel.asm	/^f01042a6:	c7 04 24 aa 89 10 f0 	movl   $0xf01089aa,(%esp)$/;"	l
f01042ad	obj/kern/kernel.asm	/^f01042ad:	e8 b6 fd ff ff       	call   f0104068 <cprintf>$/;"	l
f01042b2	obj/kern/kernel.asm	/^f01042b2:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01042b5	obj/kern/kernel.asm	/^f01042b5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01042b9	obj/kern/kernel.asm	/^f01042b9:	c7 04 24 b9 89 10 f0 	movl   $0xf01089b9,(%esp)$/;"	l
f01042c0	obj/kern/kernel.asm	/^f01042c0:	e8 a3 fd ff ff       	call   f0104068 <cprintf>$/;"	l
f01042c5	obj/kern/kernel.asm	/^f01042c5:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f01042c8	obj/kern/kernel.asm	/^f01042c8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01042cc	obj/kern/kernel.asm	/^f01042cc:	c7 04 24 c8 89 10 f0 	movl   $0xf01089c8,(%esp)$/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	e8 90 fd ff ff       	call   f0104068 <cprintf>$/;"	l
f01042d8	obj/kern/kernel.asm	/^f01042d8:	83 c4 14             	add    $0x14,%esp$/;"	l
f01042db	obj/kern/kernel.asm	/^f01042db:	5b                   	pop    %ebx$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc:	5d                   	pop    %ebp$/;"	l
f01042dd	obj/kern/kernel.asm	/^f01042dd:	c3                   	ret    $/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de <print_trapframe>:$/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de:	55                   	push   %ebp$/;"	l
f01042df	obj/kern/kernel.asm	/^f01042df:	89 e5                	mov    %esp,%ebp$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	56                   	push   %esi$/;"	l
f01042e2	obj/kern/kernel.asm	/^f01042e2:	53                   	push   %ebx$/;"	l
f01042e3	obj/kern/kernel.asm	/^f01042e3:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01042e6	obj/kern/kernel.asm	/^f01042e6:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01042e9	obj/kern/kernel.asm	/^f01042e9:	e8 fb 21 00 00       	call   f01064e9 <cpunum>$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01042f2	obj/kern/kernel.asm	/^f01042f2:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01042f6	obj/kern/kernel.asm	/^f01042f6:	c7 04 24 2c 8a 10 f0 	movl   $0xf0108a2c,(%esp)$/;"	l
f01042fd	obj/kern/kernel.asm	/^f01042fd:	e8 66 fd ff ff       	call   f0104068 <cprintf>$/;"	l
f0104302	obj/kern/kernel.asm	/^f0104302:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104305	obj/kern/kernel.asm	/^f0104305:	e8 2d ff ff ff       	call   f0104237 <print_regs>$/;"	l
f010430a	obj/kern/kernel.asm	/^f010430a:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f010430e	obj/kern/kernel.asm	/^f010430e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104312	obj/kern/kernel.asm	/^f0104312:	c7 04 24 4a 8a 10 f0 	movl   $0xf0108a4a,(%esp)$/;"	l
f0104319	obj/kern/kernel.asm	/^f0104319:	e8 4a fd ff ff       	call   f0104068 <cprintf>$/;"	l
f010431e	obj/kern/kernel.asm	/^f010431e:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0104322	obj/kern/kernel.asm	/^f0104322:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104326	obj/kern/kernel.asm	/^f0104326:	c7 04 24 5d 8a 10 f0 	movl   $0xf0108a5d,(%esp)$/;"	l
f010432d	obj/kern/kernel.asm	/^f010432d:	e8 36 fd ff ff       	call   f0104068 <cprintf>$/;"	l
f0104332	obj/kern/kernel.asm	/^f0104332:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0104335	obj/kern/kernel.asm	/^f0104335:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0104338	obj/kern/kernel.asm	/^f0104338:	77 09                	ja     f0104343 <print_trapframe+0x65>$/;"	l
f010433a	obj/kern/kernel.asm	/^f010433a:	8b 14 85 e0 8c 10 f0 	mov    -0xfef7320(,%eax,4),%edx$/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	eb 1f                	jmp    f0104362 <print_trapframe+0x84>$/;"	l
f0104343	obj/kern/kernel.asm	/^f0104343:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104346	obj/kern/kernel.asm	/^f0104346:	74 15                	je     f010435d <print_trapframe+0x7f>$/;"	l
f0104348	obj/kern/kernel.asm	/^f0104348:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f010434b	obj/kern/kernel.asm	/^f010434b:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f010434e	obj/kern/kernel.asm	/^f010434e:	ba e3 89 10 f0       	mov    $0xf01089e3,%edx$/;"	l
f0104353	obj/kern/kernel.asm	/^f0104353:	b9 f6 89 10 f0       	mov    $0xf01089f6,%ecx$/;"	l
f0104358	obj/kern/kernel.asm	/^f0104358:	0f 47 d1             	cmova  %ecx,%edx$/;"	l
f010435b	obj/kern/kernel.asm	/^f010435b:	eb 05                	jmp    f0104362 <print_trapframe+0x84>$/;"	l
f010435d	obj/kern/kernel.asm	/^f010435d:	ba d7 89 10 f0       	mov    $0xf01089d7,%edx$/;"	l
f0104362	obj/kern/kernel.asm	/^f0104362:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104366	obj/kern/kernel.asm	/^f0104366:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010436a	obj/kern/kernel.asm	/^f010436a:	c7 04 24 70 8a 10 f0 	movl   $0xf0108a70,(%esp)$/;"	l
f0104371	obj/kern/kernel.asm	/^f0104371:	e8 f2 fc ff ff       	call   f0104068 <cprintf>$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	3b 1d 60 7a 2b f0    	cmp    0xf02b7a60,%ebx$/;"	l
f010437c	obj/kern/kernel.asm	/^f010437c:	75 19                	jne    f0104397 <print_trapframe+0xb9>$/;"	l
f010437e	obj/kern/kernel.asm	/^f010437e:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104382	obj/kern/kernel.asm	/^f0104382:	75 13                	jne    f0104397 <print_trapframe+0xb9>$/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0104387	obj/kern/kernel.asm	/^f0104387:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010438b	obj/kern/kernel.asm	/^f010438b:	c7 04 24 82 8a 10 f0 	movl   $0xf0108a82,(%esp)$/;"	l
f0104392	obj/kern/kernel.asm	/^f0104392:	e8 d1 fc ff ff       	call   f0104068 <cprintf>$/;"	l
f0104397	obj/kern/kernel.asm	/^f0104397:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f010439a	obj/kern/kernel.asm	/^f010439a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	c7 04 24 91 8a 10 f0 	movl   $0xf0108a91,(%esp)$/;"	l
f01043a5	obj/kern/kernel.asm	/^f01043a5:	e8 be fc ff ff       	call   f0104068 <cprintf>$/;"	l
f01043aa	obj/kern/kernel.asm	/^f01043aa:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01043ae	obj/kern/kernel.asm	/^f01043ae:	75 51                	jne    f0104401 <print_trapframe+0x123>$/;"	l
f01043b0	obj/kern/kernel.asm	/^f01043b0:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01043b3	obj/kern/kernel.asm	/^f01043b3:	89 c2                	mov    %eax,%edx$/;"	l
f01043b5	obj/kern/kernel.asm	/^f01043b5:	83 e2 01             	and    $0x1,%edx$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	ba 05 8a 10 f0       	mov    $0xf0108a05,%edx$/;"	l
f01043bd	obj/kern/kernel.asm	/^f01043bd:	b9 10 8a 10 f0       	mov    $0xf0108a10,%ecx$/;"	l
f01043c2	obj/kern/kernel.asm	/^f01043c2:	0f 45 ca             	cmovne %edx,%ecx$/;"	l
f01043c5	obj/kern/kernel.asm	/^f01043c5:	89 c2                	mov    %eax,%edx$/;"	l
f01043c7	obj/kern/kernel.asm	/^f01043c7:	83 e2 02             	and    $0x2,%edx$/;"	l
f01043ca	obj/kern/kernel.asm	/^f01043ca:	ba 1c 8a 10 f0       	mov    $0xf0108a1c,%edx$/;"	l
f01043cf	obj/kern/kernel.asm	/^f01043cf:	be 22 8a 10 f0       	mov    $0xf0108a22,%esi$/;"	l
f01043d4	obj/kern/kernel.asm	/^f01043d4:	0f 44 d6             	cmove  %esi,%edx$/;"	l
f01043d7	obj/kern/kernel.asm	/^f01043d7:	83 e0 04             	and    $0x4,%eax$/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	b8 27 8a 10 f0       	mov    $0xf0108a27,%eax$/;"	l
f01043df	obj/kern/kernel.asm	/^f01043df:	be 71 8b 10 f0       	mov    $0xf0108b71,%esi$/;"	l
f01043e4	obj/kern/kernel.asm	/^f01043e4:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f01043e7	obj/kern/kernel.asm	/^f01043e7:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01043eb	obj/kern/kernel.asm	/^f01043eb:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01043ef	obj/kern/kernel.asm	/^f01043ef:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01043f3	obj/kern/kernel.asm	/^f01043f3:	c7 04 24 9f 8a 10 f0 	movl   $0xf0108a9f,(%esp)$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	e8 69 fc ff ff       	call   f0104068 <cprintf>$/;"	l
f01043ff	obj/kern/kernel.asm	/^f01043ff:	eb 0c                	jmp    f010440d <print_trapframe+0x12f>$/;"	l
f0104401	obj/kern/kernel.asm	/^f0104401:	c7 04 24 9f 88 10 f0 	movl   $0xf010889f,(%esp)$/;"	l
f0104408	obj/kern/kernel.asm	/^f0104408:	e8 5b fc ff ff       	call   f0104068 <cprintf>$/;"	l
f010440d	obj/kern/kernel.asm	/^f010440d:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104410	obj/kern/kernel.asm	/^f0104410:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104414	obj/kern/kernel.asm	/^f0104414:	c7 04 24 ae 8a 10 f0 	movl   $0xf0108aae,(%esp)$/;"	l
f010441b	obj/kern/kernel.asm	/^f010441b:	e8 48 fc ff ff       	call   f0104068 <cprintf>$/;"	l
f0104420	obj/kern/kernel.asm	/^f0104420:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0104424	obj/kern/kernel.asm	/^f0104424:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104428	obj/kern/kernel.asm	/^f0104428:	c7 04 24 bd 8a 10 f0 	movl   $0xf0108abd,(%esp)$/;"	l
f010442f	obj/kern/kernel.asm	/^f010442f:	e8 34 fc ff ff       	call   f0104068 <cprintf>$/;"	l
f0104434	obj/kern/kernel.asm	/^f0104434:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0104437	obj/kern/kernel.asm	/^f0104437:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010443b	obj/kern/kernel.asm	/^f010443b:	c7 04 24 d0 8a 10 f0 	movl   $0xf0108ad0,(%esp)$/;"	l
f0104442	obj/kern/kernel.asm	/^f0104442:	e8 21 fc ff ff       	call   f0104068 <cprintf>$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f010444b	obj/kern/kernel.asm	/^f010444b:	74 27                	je     f0104474 <print_trapframe+0x196>$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104450	obj/kern/kernel.asm	/^f0104450:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	c7 04 24 df 8a 10 f0 	movl   $0xf0108adf,(%esp)$/;"	l
f010445b	obj/kern/kernel.asm	/^f010445b:	e8 08 fc ff ff       	call   f0104068 <cprintf>$/;"	l
f0104460	obj/kern/kernel.asm	/^f0104460:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0104464	obj/kern/kernel.asm	/^f0104464:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	c7 04 24 ee 8a 10 f0 	movl   $0xf0108aee,(%esp)$/;"	l
f010446f	obj/kern/kernel.asm	/^f010446f:	e8 f4 fb ff ff       	call   f0104068 <cprintf>$/;"	l
f0104474	obj/kern/kernel.asm	/^f0104474:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104477	obj/kern/kernel.asm	/^f0104477:	5b                   	pop    %ebx$/;"	l
f0104478	obj/kern/kernel.asm	/^f0104478:	5e                   	pop    %esi$/;"	l
f0104479	obj/kern/kernel.asm	/^f0104479:	5d                   	pop    %ebp$/;"	l
f010447a	obj/kern/kernel.asm	/^f010447a:	c3                   	ret    $/;"	l
f010447b	obj/kern/kernel.asm	/^f010447b <page_fault_handler>:$/;"	l
f010447b	obj/kern/kernel.asm	/^f010447b:	55                   	push   %ebp$/;"	l
f010447c	obj/kern/kernel.asm	/^f010447c:	89 e5                	mov    %esp,%ebp$/;"	l
f010447e	obj/kern/kernel.asm	/^f010447e:	57                   	push   %edi$/;"	l
f010447f	obj/kern/kernel.asm	/^f010447f:	56                   	push   %esi$/;"	l
f0104480	obj/kern/kernel.asm	/^f0104480:	53                   	push   %ebx$/;"	l
f0104481	obj/kern/kernel.asm	/^f0104481:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0104484	obj/kern/kernel.asm	/^f0104484:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104487	obj/kern/kernel.asm	/^f0104487:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f010448a	obj/kern/kernel.asm	/^f010448a:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f010448e	obj/kern/kernel.asm	/^f010448e:	75 1c                	jne    f01044ac <page_fault_handler+0x31>$/;"	l
f0104490	obj/kern/kernel.asm	/^f0104490:	c7 44 24 08 01 8b 10 	movl   $0xf0108b01,0x8(%esp)$/;"	l
f0104497	obj/kern/kernel.asm	/^f0104497:	f0 $/;"	l
f0104498	obj/kern/kernel.asm	/^f0104498:	c7 44 24 04 58 01 00 	movl   $0x158,0x4(%esp)$/;"	l
f010449f	obj/kern/kernel.asm	/^f010449f:	00 $/;"	l
f01044a0	obj/kern/kernel.asm	/^f01044a0:	c7 04 24 16 8b 10 f0 	movl   $0xf0108b16,(%esp)$/;"	l
f01044a7	obj/kern/kernel.asm	/^f01044a7:	e8 f1 bb ff ff       	call   f010009d <_panic>$/;"	l
f01044ac	obj/kern/kernel.asm	/^f01044ac:	e8 38 20 00 00       	call   f01064e9 <cpunum>$/;"	l
f01044b1	obj/kern/kernel.asm	/^f01044b1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f01044ba	obj/kern/kernel.asm	/^f01044ba:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	0f 84 ff 00 00 00    	je     f01045c3 <page_fault_handler+0x148>$/;"	l
f01044c4	obj/kern/kernel.asm	/^f01044c4:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	89 c2                	mov    %eax,%edx$/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9:	05 00 10 40 11       	add    $0x11401000,%eax$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f01044d1	obj/kern/kernel.asm	/^f01044d1:	8d 7a c8             	lea    -0x38(%edx),%edi$/;"	l
f01044d4	obj/kern/kernel.asm	/^f01044d4:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
f01044d9	obj/kern/kernel.asm	/^f01044d9:	b8 cc ff bf ee       	mov    $0xeebfffcc,%eax$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de:	0f 47 f8             	cmova  %eax,%edi$/;"	l
f01044e1	obj/kern/kernel.asm	/^f01044e1:	8b 4b 2c             	mov    0x2c(%ebx),%ecx$/;"	l
f01044e4	obj/kern/kernel.asm	/^f01044e4:	89 4d d8             	mov    %ecx,-0x28(%ebp)$/;"	l
f01044e7	obj/kern/kernel.asm	/^f01044e7:	8b 0b                	mov    (%ebx),%ecx$/;"	l
f01044e9	obj/kern/kernel.asm	/^f01044e9:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f01044ec	obj/kern/kernel.asm	/^f01044ec:	8b 53 04             	mov    0x4(%ebx),%edx$/;"	l
f01044ef	obj/kern/kernel.asm	/^f01044ef:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f01044f2	obj/kern/kernel.asm	/^f01044f2:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01044f5	obj/kern/kernel.asm	/^f01044f5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01044f8	obj/kern/kernel.asm	/^f01044f8:	8b 53 0c             	mov    0xc(%ebx),%edx$/;"	l
f01044fb	obj/kern/kernel.asm	/^f01044fb:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01044fe	obj/kern/kernel.asm	/^f01044fe:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104501	obj/kern/kernel.asm	/^f0104501:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104504	obj/kern/kernel.asm	/^f0104504:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f0104507	obj/kern/kernel.asm	/^f0104507:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f010450a	obj/kern/kernel.asm	/^f010450a:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f010450d	obj/kern/kernel.asm	/^f010450d:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f0104510	obj/kern/kernel.asm	/^f0104510:	8b 53 1c             	mov    0x1c(%ebx),%edx$/;"	l
f0104513	obj/kern/kernel.asm	/^f0104513:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
f0104516	obj/kern/kernel.asm	/^f0104516:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104519	obj/kern/kernel.asm	/^f0104519:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010451c	obj/kern/kernel.asm	/^f010451c:	8b 53 38             	mov    0x38(%ebx),%edx$/;"	l
f010451f	obj/kern/kernel.asm	/^f010451f:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f0104522	obj/kern/kernel.asm	/^f0104522:	e8 c2 1f 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104527	obj/kern/kernel.asm	/^f0104527:	c7 44 24 0c 07 00 00 	movl   $0x7,0xc(%esp)$/;"	l
f010452e	obj/kern/kernel.asm	/^f010452e:	00 $/;"	l
f010452f	obj/kern/kernel.asm	/^f010452f:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0104536	obj/kern/kernel.asm	/^f0104536:	00 $/;"	l
f0104537	obj/kern/kernel.asm	/^f0104537:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010453b	obj/kern/kernel.asm	/^f010453b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010453e	obj/kern/kernel.asm	/^f010453e:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0104544	obj/kern/kernel.asm	/^f0104544:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547:	e8 ff f0 ff ff       	call   f010364b <user_mem_assert>$/;"	l
f010454c	obj/kern/kernel.asm	/^f010454c:	89 37                	mov    %esi,(%edi)$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0104551	obj/kern/kernel.asm	/^f0104551:	89 4f 04             	mov    %ecx,0x4(%edi)$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0104557	obj/kern/kernel.asm	/^f0104557:	89 4f 08             	mov    %ecx,0x8(%edi)$/;"	l
f010455a	obj/kern/kernel.asm	/^f010455a:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f010455d	obj/kern/kernel.asm	/^f010455d:	89 4f 0c             	mov    %ecx,0xc(%edi)$/;"	l
f0104560	obj/kern/kernel.asm	/^f0104560:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0104563	obj/kern/kernel.asm	/^f0104563:	89 4f 10             	mov    %ecx,0x10(%edi)$/;"	l
f0104566	obj/kern/kernel.asm	/^f0104566:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0104569	obj/kern/kernel.asm	/^f0104569:	89 4f 14             	mov    %ecx,0x14(%edi)$/;"	l
f010456c	obj/kern/kernel.asm	/^f010456c:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f010456f	obj/kern/kernel.asm	/^f010456f:	89 4f 18             	mov    %ecx,0x18(%edi)$/;"	l
f0104572	obj/kern/kernel.asm	/^f0104572:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f0104575	obj/kern/kernel.asm	/^f0104575:	89 4f 1c             	mov    %ecx,0x1c(%edi)$/;"	l
f0104578	obj/kern/kernel.asm	/^f0104578:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f010457b	obj/kern/kernel.asm	/^f010457b:	89 4f 20             	mov    %ecx,0x20(%edi)$/;"	l
f010457e	obj/kern/kernel.asm	/^f010457e:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f0104581	obj/kern/kernel.asm	/^f0104581:	89 4f 24             	mov    %ecx,0x24(%edi)$/;"	l
f0104584	obj/kern/kernel.asm	/^f0104584:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0104587	obj/kern/kernel.asm	/^f0104587:	89 4f 28             	mov    %ecx,0x28(%edi)$/;"	l
f010458a	obj/kern/kernel.asm	/^f010458a:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f010458d	obj/kern/kernel.asm	/^f010458d:	89 4f 2c             	mov    %ecx,0x2c(%edi)$/;"	l
f0104590	obj/kern/kernel.asm	/^f0104590:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104593	obj/kern/kernel.asm	/^f0104593:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0104596	obj/kern/kernel.asm	/^f0104596:	e8 4e 1f 00 00       	call   f01064e9 <cpunum>$/;"	l
f010459b	obj/kern/kernel.asm	/^f010459b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010459e	obj/kern/kernel.asm	/^f010459e:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f01045a4	obj/kern/kernel.asm	/^f01045a4:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f01045a7	obj/kern/kernel.asm	/^f01045a7:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f01045aa	obj/kern/kernel.asm	/^f01045aa:	89 7b 3c             	mov    %edi,0x3c(%ebx)$/;"	l
f01045ad	obj/kern/kernel.asm	/^f01045ad:	e8 37 1f 00 00       	call   f01064e9 <cpunum>$/;"	l
f01045b2	obj/kern/kernel.asm	/^f01045b2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045b5	obj/kern/kernel.asm	/^f01045b5:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f01045bb	obj/kern/kernel.asm	/^f01045bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01045be	obj/kern/kernel.asm	/^f01045be:	e8 4d f8 ff ff       	call   f0103e10 <env_run>$/;"	l
f01045c3	obj/kern/kernel.asm	/^f01045c3:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f01045c6	obj/kern/kernel.asm	/^f01045c6:	e8 1e 1f 00 00       	call   f01064e9 <cpunum>$/;"	l
f01045cb	obj/kern/kernel.asm	/^f01045cb:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01045cf	obj/kern/kernel.asm	/^f01045cf:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01045d3	obj/kern/kernel.asm	/^f01045d3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045d6	obj/kern/kernel.asm	/^f01045d6:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f01045dc	obj/kern/kernel.asm	/^f01045dc:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01045df	obj/kern/kernel.asm	/^f01045df:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045e3	obj/kern/kernel.asm	/^f01045e3:	c7 04 24 bc 8c 10 f0 	movl   $0xf0108cbc,(%esp)$/;"	l
f01045ea	obj/kern/kernel.asm	/^f01045ea:	e8 79 fa ff ff       	call   f0104068 <cprintf>$/;"	l
f01045ef	obj/kern/kernel.asm	/^f01045ef:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	e8 e7 fc ff ff       	call   f01042de <print_trapframe>$/;"	l
f01045f7	obj/kern/kernel.asm	/^f01045f7:	e8 ed 1e 00 00       	call   f01064e9 <cpunum>$/;"	l
f01045fc	obj/kern/kernel.asm	/^f01045fc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045ff	obj/kern/kernel.asm	/^f01045ff:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104608	obj/kern/kernel.asm	/^f0104608:	e8 62 f7 ff ff       	call   f0103d6f <env_destroy>$/;"	l
f010460d	obj/kern/kernel.asm	/^f010460d:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	5b                   	pop    %ebx$/;"	l
f0104611	obj/kern/kernel.asm	/^f0104611:	5e                   	pop    %esi$/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	5f                   	pop    %edi$/;"	l
f0104613	obj/kern/kernel.asm	/^f0104613:	5d                   	pop    %ebp$/;"	l
f0104614	obj/kern/kernel.asm	/^f0104614:	c3                   	ret    $/;"	l
f0104615	obj/kern/kernel.asm	/^f0104615 <trap>:$/;"	l
f0104615	obj/kern/kernel.asm	/^f0104615:	55                   	push   %ebp$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	89 e5                	mov    %esp,%ebp$/;"	l
f0104618	obj/kern/kernel.asm	/^f0104618:	57                   	push   %edi$/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619:	56                   	push   %esi$/;"	l
f010461a	obj/kern/kernel.asm	/^f010461a:	83 ec 20             	sub    $0x20,%esp$/;"	l
f010461d	obj/kern/kernel.asm	/^f010461d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620:	fc                   	cld    $/;"	l
f0104621	obj/kern/kernel.asm	/^f0104621:	83 3d 0c fd 2f f0 00 	cmpl   $0x0,0xf02ffd0c$/;"	l
f0104628	obj/kern/kernel.asm	/^f0104628:	74 01                	je     f010462b <trap+0x16>$/;"	l
f010462a	obj/kern/kernel.asm	/^f010462a:	f4                   	hlt    $/;"	l
f010462b	obj/kern/kernel.asm	/^f010462b:	e8 b9 1e 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104630	obj/kern/kernel.asm	/^f0104630:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104633	obj/kern/kernel.asm	/^f0104633:	81 c2 20 00 30 f0    	add    $0xf0300020,%edx$/;"	l
f0104639	obj/kern/kernel.asm	/^f0104639:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010463e	obj/kern/kernel.asm	/^f010463e:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104642	obj/kern/kernel.asm	/^f0104642:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104645	obj/kern/kernel.asm	/^f0104645:	75 0c                	jne    f0104653 <trap+0x3e>$/;"	l
f0104647	obj/kern/kernel.asm	/^f0104647:	c7 04 24 60 44 12 f0 	movl   $0xf0124460,(%esp)$/;"	l
f010464e	obj/kern/kernel.asm	/^f010464e:	e8 14 21 00 00       	call   f0106767 <spin_lock>$/;"	l
f0104653	obj/kern/kernel.asm	/^f0104653:	9c                   	pushf  $/;"	l
f0104654	obj/kern/kernel.asm	/^f0104654:	58                   	pop    %eax$/;"	l
f0104655	obj/kern/kernel.asm	/^f0104655:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0104658	obj/kern/kernel.asm	/^f0104658:	74 24                	je     f010467e <trap+0x69>$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	c7 44 24 0c 22 8b 10 	movl   $0xf0108b22,0xc(%esp)$/;"	l
f0104661	obj/kern/kernel.asm	/^f0104661:	f0 $/;"	l
f0104662	obj/kern/kernel.asm	/^f0104662:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0104669	obj/kern/kernel.asm	/^f0104669:	f0 $/;"	l
f010466a	obj/kern/kernel.asm	/^f010466a:	c7 44 24 04 22 01 00 	movl   $0x122,0x4(%esp)$/;"	l
f0104671	obj/kern/kernel.asm	/^f0104671:	00 $/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	c7 04 24 16 8b 10 f0 	movl   $0xf0108b16,(%esp)$/;"	l
f0104679	obj/kern/kernel.asm	/^f0104679:	e8 1f ba ff ff       	call   f010009d <_panic>$/;"	l
f010467e	obj/kern/kernel.asm	/^f010467e:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104682	obj/kern/kernel.asm	/^f0104682:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104685	obj/kern/kernel.asm	/^f0104685:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0104689	obj/kern/kernel.asm	/^f0104689:	0f 85 a7 00 00 00    	jne    f0104736 <trap+0x121>$/;"	l
f010468f	obj/kern/kernel.asm	/^f010468f:	c7 04 24 60 44 12 f0 	movl   $0xf0124460,(%esp)$/;"	l
f0104696	obj/kern/kernel.asm	/^f0104696:	e8 cc 20 00 00       	call   f0106767 <spin_lock>$/;"	l
f010469b	obj/kern/kernel.asm	/^f010469b:	e8 49 1e 00 00       	call   f01064e9 <cpunum>$/;"	l
f01046a0	obj/kern/kernel.asm	/^f01046a0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046a3	obj/kern/kernel.asm	/^f01046a3:	83 b8 28 00 30 f0 00 	cmpl   $0x0,-0xfcfffd8(%eax)$/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa:	75 24                	jne    f01046d0 <trap+0xbb>$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	c7 44 24 0c 3b 8b 10 	movl   $0xf0108b3b,0xc(%esp)$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	f0 $/;"	l
f01046b4	obj/kern/kernel.asm	/^f01046b4:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	f0 $/;"	l
f01046bc	obj/kern/kernel.asm	/^f01046bc:	c7 44 24 04 29 01 00 	movl   $0x129,0x4(%esp)$/;"	l
f01046c3	obj/kern/kernel.asm	/^f01046c3:	00 $/;"	l
f01046c4	obj/kern/kernel.asm	/^f01046c4:	c7 04 24 16 8b 10 f0 	movl   $0xf0108b16,(%esp)$/;"	l
f01046cb	obj/kern/kernel.asm	/^f01046cb:	e8 cd b9 ff ff       	call   f010009d <_panic>$/;"	l
f01046d0	obj/kern/kernel.asm	/^f01046d0:	e8 14 1e 00 00       	call   f01064e9 <cpunum>$/;"	l
f01046d5	obj/kern/kernel.asm	/^f01046d5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046d8	obj/kern/kernel.asm	/^f01046d8:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f01046e2	obj/kern/kernel.asm	/^f01046e2:	75 2d                	jne    f0104711 <trap+0xfc>$/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	e8 00 1e 00 00       	call   f01064e9 <cpunum>$/;"	l
f01046e9	obj/kern/kernel.asm	/^f01046e9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046ec	obj/kern/kernel.asm	/^f01046ec:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f01046f2	obj/kern/kernel.asm	/^f01046f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01046f5	obj/kern/kernel.asm	/^f01046f5:	e8 70 f4 ff ff       	call   f0103b6a <env_free>$/;"	l
f01046fa	obj/kern/kernel.asm	/^f01046fa:	e8 ea 1d 00 00       	call   f01064e9 <cpunum>$/;"	l
f01046ff	obj/kern/kernel.asm	/^f01046ff:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104702	obj/kern/kernel.asm	/^f0104702:	c7 80 28 00 30 f0 00 	movl   $0x0,-0xfcfffd8(%eax)$/;"	l
f0104709	obj/kern/kernel.asm	/^f0104709:	00 00 00 $/;"	l
f010470c	obj/kern/kernel.asm	/^f010470c:	e8 55 03 00 00       	call   f0104a66 <sched_yield>$/;"	l
f0104711	obj/kern/kernel.asm	/^f0104711:	e8 d3 1d 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104716	obj/kern/kernel.asm	/^f0104716:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104719	obj/kern/kernel.asm	/^f0104719:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f010471f	obj/kern/kernel.asm	/^f010471f:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104724	obj/kern/kernel.asm	/^f0104724:	89 c7                	mov    %eax,%edi$/;"	l
f0104726	obj/kern/kernel.asm	/^f0104726:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104728	obj/kern/kernel.asm	/^f0104728:	e8 bc 1d 00 00       	call   f01064e9 <cpunum>$/;"	l
f010472d	obj/kern/kernel.asm	/^f010472d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104730	obj/kern/kernel.asm	/^f0104730:	8b b0 28 00 30 f0    	mov    -0xfcfffd8(%eax),%esi$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	89 35 60 7a 2b f0    	mov    %esi,0xf02b7a60$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104742	obj/kern/kernel.asm	/^f0104742:	75 0d                	jne    f0104751 <trap+0x13c>$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104747	obj/kern/kernel.asm	/^f0104747:	e8 2f fd ff ff       	call   f010447b <page_fault_handler>$/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	e9 dd 00 00 00       	jmp    f010482e <trap+0x219>$/;"	l
f0104751	obj/kern/kernel.asm	/^f0104751:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	75 0f                	jne    f0104765 <trap+0x150>$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104759	obj/kern/kernel.asm	/^f0104759:	e8 00 c3 ff ff       	call   f0100a5e <monitor>$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	66 90                	xchg   %ax,%ax$/;"	l
f0104760	obj/kern/kernel.asm	/^f0104760:	e9 c9 00 00 00       	jmp    f010482e <trap+0x219>$/;"	l
f0104765	obj/kern/kernel.asm	/^f0104765:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	75 35                	jne    f010479f <trap+0x18a>$/;"	l
f010476a	obj/kern/kernel.asm	/^f010476a:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f010476d	obj/kern/kernel.asm	/^f010476d:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0104771	obj/kern/kernel.asm	/^f0104771:	8b 06                	mov    (%esi),%eax$/;"	l
f0104773	obj/kern/kernel.asm	/^f0104773:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104777	obj/kern/kernel.asm	/^f0104777:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f010477a	obj/kern/kernel.asm	/^f010477a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0104781	obj/kern/kernel.asm	/^f0104781:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104785	obj/kern/kernel.asm	/^f0104785:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0104788	obj/kern/kernel.asm	/^f0104788:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010478c	obj/kern/kernel.asm	/^f010478c:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f010478f	obj/kern/kernel.asm	/^f010478f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104792	obj/kern/kernel.asm	/^f0104792:	e8 99 03 00 00       	call   f0104b30 <syscall>$/;"	l
f0104797	obj/kern/kernel.asm	/^f0104797:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f010479a	obj/kern/kernel.asm	/^f010479a:	e9 8f 00 00 00       	jmp    f010482e <trap+0x219>$/;"	l
f010479f	obj/kern/kernel.asm	/^f010479f:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f01047a2	obj/kern/kernel.asm	/^f01047a2:	75 16                	jne    f01047ba <trap+0x1a5>$/;"	l
f01047a4	obj/kern/kernel.asm	/^f01047a4:	c7 04 24 42 8b 10 f0 	movl   $0xf0108b42,(%esp)$/;"	l
f01047ab	obj/kern/kernel.asm	/^f01047ab:	e8 b8 f8 ff ff       	call   f0104068 <cprintf>$/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01047b3	obj/kern/kernel.asm	/^f01047b3:	e8 26 fb ff ff       	call   f01042de <print_trapframe>$/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8:	eb 74                	jmp    f010482e <trap+0x219>$/;"	l
f01047ba	obj/kern/kernel.asm	/^f01047ba:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f01047bd	obj/kern/kernel.asm	/^f01047bd:	75 10                	jne    f01047cf <trap+0x1ba>$/;"	l
f01047bf	obj/kern/kernel.asm	/^f01047bf:	90                   	nop$/;"	l
f01047c0	obj/kern/kernel.asm	/^f01047c0:	e8 71 1e 00 00       	call   f0106636 <lapic_eoi>$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	e8 7f 2b 00 00       	call   f0107349 <time_tick>$/;"	l
f01047ca	obj/kern/kernel.asm	/^f01047ca:	e8 97 02 00 00       	call   f0104a66 <sched_yield>$/;"	l
f01047cf	obj/kern/kernel.asm	/^f01047cf:	83 f8 21             	cmp    $0x21,%eax$/;"	l
f01047d2	obj/kern/kernel.asm	/^f01047d2:	75 07                	jne    f01047db <trap+0x1c6>$/;"	l
f01047d4	obj/kern/kernel.asm	/^f01047d4:	e8 da be ff ff       	call   f01006b3 <kbd_intr>$/;"	l
f01047d9	obj/kern/kernel.asm	/^f01047d9:	eb 53                	jmp    f010482e <trap+0x219>$/;"	l
f01047db	obj/kern/kernel.asm	/^f01047db:	83 f8 24             	cmp    $0x24,%eax$/;"	l
f01047de	obj/kern/kernel.asm	/^f01047de:	66 90                	xchg   %ax,%ax$/;"	l
f01047e0	obj/kern/kernel.asm	/^f01047e0:	75 07                	jne    f01047e9 <trap+0x1d4>$/;"	l
f01047e2	obj/kern/kernel.asm	/^f01047e2:	e8 b0 be ff ff       	call   f0100697 <serial_intr>$/;"	l
f01047e7	obj/kern/kernel.asm	/^f01047e7:	eb 45                	jmp    f010482e <trap+0x219>$/;"	l
f01047e9	obj/kern/kernel.asm	/^f01047e9:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01047ec	obj/kern/kernel.asm	/^f01047ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01047f0	obj/kern/kernel.asm	/^f01047f0:	e8 e9 fa ff ff       	call   f01042de <print_trapframe>$/;"	l
f01047f5	obj/kern/kernel.asm	/^f01047f5:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	75 1c                	jne    f0104818 <trap+0x203>$/;"	l
f01047fc	obj/kern/kernel.asm	/^f01047fc:	c7 44 24 08 5f 8b 10 	movl   $0xf0108b5f,0x8(%esp)$/;"	l
f0104803	obj/kern/kernel.asm	/^f0104803:	f0 $/;"	l
f0104804	obj/kern/kernel.asm	/^f0104804:	c7 44 24 04 08 01 00 	movl   $0x108,0x4(%esp)$/;"	l
f010480b	obj/kern/kernel.asm	/^f010480b:	00 $/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c:	c7 04 24 16 8b 10 f0 	movl   $0xf0108b16,(%esp)$/;"	l
f0104813	obj/kern/kernel.asm	/^f0104813:	e8 85 b8 ff ff       	call   f010009d <_panic>$/;"	l
f0104818	obj/kern/kernel.asm	/^f0104818:	e8 cc 1c 00 00       	call   f01064e9 <cpunum>$/;"	l
f010481d	obj/kern/kernel.asm	/^f010481d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104829	obj/kern/kernel.asm	/^f0104829:	e8 41 f5 ff ff       	call   f0103d6f <env_destroy>$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	e8 b6 1c 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104833	obj/kern/kernel.asm	/^f0104833:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104836	obj/kern/kernel.asm	/^f0104836:	83 b8 28 00 30 f0 00 	cmpl   $0x0,-0xfcfffd8(%eax)$/;"	l
f010483d	obj/kern/kernel.asm	/^f010483d:	74 2a                	je     f0104869 <trap+0x254>$/;"	l
f010483f	obj/kern/kernel.asm	/^f010483f:	e8 a5 1c 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f010484d	obj/kern/kernel.asm	/^f010484d:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104851	obj/kern/kernel.asm	/^f0104851:	75 16                	jne    f0104869 <trap+0x254>$/;"	l
f0104853	obj/kern/kernel.asm	/^f0104853:	e8 91 1c 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104858	obj/kern/kernel.asm	/^f0104858:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104864	obj/kern/kernel.asm	/^f0104864:	e8 a7 f5 ff ff       	call   f0103e10 <env_run>$/;"	l
f0104869	obj/kern/kernel.asm	/^f0104869:	e8 f8 01 00 00       	call   f0104a66 <sched_yield>$/;"	l
f010486e	obj/kern/kernel.asm	/^f010486e <divide_handler>:$/;"	l
f010486e	obj/kern/kernel.asm	/^f010486e:	6a 00                	push   $0x0$/;"	l
f0104870	obj/kern/kernel.asm	/^f0104870:	6a 00                	push   $0x0$/;"	l
f0104872	obj/kern/kernel.asm	/^f0104872:	e9 03 01 00 00       	jmp    f010497a <_alltraps>$/;"	l
f0104877	obj/kern/kernel.asm	/^f0104877:	90                   	nop$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878 <debug_handler>:$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	6a 00                	push   $0x0$/;"	l
f010487a	obj/kern/kernel.asm	/^f010487a:	6a 01                	push   $0x1$/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	e9 f9 00 00 00       	jmp    f010497a <_alltraps>$/;"	l
f0104881	obj/kern/kernel.asm	/^f0104881:	90                   	nop$/;"	l
f0104882	obj/kern/kernel.asm	/^f0104882 <nmi_handler>:$/;"	l
f0104882	obj/kern/kernel.asm	/^f0104882:	6a 00                	push   $0x0$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884:	6a 02                	push   $0x2$/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886:	e9 ef 00 00 00       	jmp    f010497a <_alltraps>$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	90                   	nop$/;"	l
f010488c	obj/kern/kernel.asm	/^f010488c <brkpt_handler>:$/;"	l
f010488c	obj/kern/kernel.asm	/^f010488c:	6a 00                	push   $0x0$/;"	l
f010488e	obj/kern/kernel.asm	/^f010488e:	6a 03                	push   $0x3$/;"	l
f0104890	obj/kern/kernel.asm	/^f0104890:	e9 e5 00 00 00       	jmp    f010497a <_alltraps>$/;"	l
f0104895	obj/kern/kernel.asm	/^f0104895:	90                   	nop$/;"	l
f0104896	obj/kern/kernel.asm	/^f0104896 <oflow_handler>:$/;"	l
f0104896	obj/kern/kernel.asm	/^f0104896:	6a 00                	push   $0x0$/;"	l
f0104898	obj/kern/kernel.asm	/^f0104898:	6a 04                	push   $0x4$/;"	l
f010489a	obj/kern/kernel.asm	/^f010489a:	e9 db 00 00 00       	jmp    f010497a <_alltraps>$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	90                   	nop$/;"	l
f01048a0	obj/kern/kernel.asm	/^f01048a0 <bound_handler>:$/;"	l
f01048a0	obj/kern/kernel.asm	/^f01048a0:	6a 00                	push   $0x0$/;"	l
f01048a2	obj/kern/kernel.asm	/^f01048a2:	6a 05                	push   $0x5$/;"	l
f01048a4	obj/kern/kernel.asm	/^f01048a4:	e9 d1 00 00 00       	jmp    f010497a <_alltraps>$/;"	l
f01048a9	obj/kern/kernel.asm	/^f01048a9:	90                   	nop$/;"	l
f01048aa	obj/kern/kernel.asm	/^f01048aa <illop_handler>:$/;"	l
f01048aa	obj/kern/kernel.asm	/^f01048aa:	6a 00                	push   $0x0$/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	6a 06                	push   $0x6$/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae:	e9 c7 00 00 00       	jmp    f010497a <_alltraps>$/;"	l
f01048b3	obj/kern/kernel.asm	/^f01048b3:	90                   	nop$/;"	l
f01048b4	obj/kern/kernel.asm	/^f01048b4 <device_handler>:$/;"	l
f01048b4	obj/kern/kernel.asm	/^f01048b4:	6a 00                	push   $0x0$/;"	l
f01048b6	obj/kern/kernel.asm	/^f01048b6:	6a 07                	push   $0x7$/;"	l
f01048b8	obj/kern/kernel.asm	/^f01048b8:	e9 bd 00 00 00       	jmp    f010497a <_alltraps>$/;"	l
f01048bd	obj/kern/kernel.asm	/^f01048bd:	90                   	nop$/;"	l
f01048be	obj/kern/kernel.asm	/^f01048be <dblflt_handler>:$/;"	l
f01048be	obj/kern/kernel.asm	/^f01048be:	6a 08                	push   $0x8$/;"	l
f01048c0	obj/kern/kernel.asm	/^f01048c0:	e9 b5 00 00 00       	jmp    f010497a <_alltraps>$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	90                   	nop$/;"	l
f01048c6	obj/kern/kernel.asm	/^f01048c6 <temp1_handler>:$/;"	l
f01048c6	obj/kern/kernel.asm	/^f01048c6:	6a 00                	push   $0x0$/;"	l
f01048c8	obj/kern/kernel.asm	/^f01048c8:	6a 09                	push   $0x9$/;"	l
f01048ca	obj/kern/kernel.asm	/^f01048ca:	e9 ab 00 00 00       	jmp    f010497a <_alltraps>$/;"	l
f01048cf	obj/kern/kernel.asm	/^f01048cf:	90                   	nop$/;"	l
f01048d0	obj/kern/kernel.asm	/^f01048d0 <tss_handler>:$/;"	l
f01048d0	obj/kern/kernel.asm	/^f01048d0:	6a 0a                	push   $0xa$/;"	l
f01048d2	obj/kern/kernel.asm	/^f01048d2:	e9 a3 00 00 00       	jmp    f010497a <_alltraps>$/;"	l
f01048d7	obj/kern/kernel.asm	/^f01048d7:	90                   	nop$/;"	l
f01048d8	obj/kern/kernel.asm	/^f01048d8 <segnp_handler>:$/;"	l
f01048d8	obj/kern/kernel.asm	/^f01048d8:	6a 0b                	push   $0xb$/;"	l
f01048da	obj/kern/kernel.asm	/^f01048da:	e9 9b 00 00 00       	jmp    f010497a <_alltraps>$/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	90                   	nop$/;"	l
f01048e0	obj/kern/kernel.asm	/^f01048e0 <stack_handler>:$/;"	l
f01048e0	obj/kern/kernel.asm	/^f01048e0:	6a 0c                	push   $0xc$/;"	l
f01048e2	obj/kern/kernel.asm	/^f01048e2:	e9 93 00 00 00       	jmp    f010497a <_alltraps>$/;"	l
f01048e7	obj/kern/kernel.asm	/^f01048e7:	90                   	nop$/;"	l
f01048e8	obj/kern/kernel.asm	/^f01048e8 <gpflt_handler>:$/;"	l
f01048e8	obj/kern/kernel.asm	/^f01048e8:	6a 0d                	push   $0xd$/;"	l
f01048ea	obj/kern/kernel.asm	/^f01048ea:	e9 8b 00 00 00       	jmp    f010497a <_alltraps>$/;"	l
f01048ef	obj/kern/kernel.asm	/^f01048ef:	90                   	nop$/;"	l
f01048f0	obj/kern/kernel.asm	/^f01048f0 <pgflt_handler>:$/;"	l
f01048f0	obj/kern/kernel.asm	/^f01048f0:	6a 0e                	push   $0xe$/;"	l
f01048f2	obj/kern/kernel.asm	/^f01048f2:	e9 83 00 00 00       	jmp    f010497a <_alltraps>$/;"	l
f01048f7	obj/kern/kernel.asm	/^f01048f7:	90                   	nop$/;"	l
f01048f8	obj/kern/kernel.asm	/^f01048f8 <temp2_handler>:$/;"	l
f01048f8	obj/kern/kernel.asm	/^f01048f8:	6a 00                	push   $0x0$/;"	l
f01048fa	obj/kern/kernel.asm	/^f01048fa:	6a 0f                	push   $0xf$/;"	l
f01048fc	obj/kern/kernel.asm	/^f01048fc:	eb 7c                	jmp    f010497a <_alltraps>$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe <fperr_handler>:$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe:	6a 00                	push   $0x0$/;"	l
f0104900	obj/kern/kernel.asm	/^f0104900:	6a 10                	push   $0x10$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	eb 76                	jmp    f010497a <_alltraps>$/;"	l
f0104904	obj/kern/kernel.asm	/^f0104904 <align_handler>:$/;"	l
f0104904	obj/kern/kernel.asm	/^f0104904:	6a 11                	push   $0x11$/;"	l
f0104906	obj/kern/kernel.asm	/^f0104906:	eb 72                	jmp    f010497a <_alltraps>$/;"	l
f0104908	obj/kern/kernel.asm	/^f0104908 <mchk_handler>:$/;"	l
f0104908	obj/kern/kernel.asm	/^f0104908:	6a 00                	push   $0x0$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	6a 12                	push   $0x12$/;"	l
f010490c	obj/kern/kernel.asm	/^f010490c:	eb 6c                	jmp    f010497a <_alltraps>$/;"	l
f010490e	obj/kern/kernel.asm	/^f010490e <simderr_handler>:$/;"	l
f010490e	obj/kern/kernel.asm	/^f010490e:	6a 00                	push   $0x0$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	6a 13                	push   $0x13$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	eb 66                	jmp    f010497a <_alltraps>$/;"	l
f0104914	obj/kern/kernel.asm	/^f0104914 <syscall_handler>:$/;"	l
f0104914	obj/kern/kernel.asm	/^f0104914:	6a 00                	push   $0x0$/;"	l
f0104916	obj/kern/kernel.asm	/^f0104916:	6a 30                	push   $0x30$/;"	l
f0104918	obj/kern/kernel.asm	/^f0104918:	eb 60                	jmp    f010497a <_alltraps>$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a <irq0_handler>:$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	6a 00                	push   $0x0$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c:	6a 20                	push   $0x20$/;"	l
f010491e	obj/kern/kernel.asm	/^f010491e:	eb 5a                	jmp    f010497a <_alltraps>$/;"	l
f0104920	obj/kern/kernel.asm	/^f0104920 <irq1_handler>:$/;"	l
f0104920	obj/kern/kernel.asm	/^f0104920:	6a 00                	push   $0x0$/;"	l
f0104922	obj/kern/kernel.asm	/^f0104922:	6a 21                	push   $0x21$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	eb 54                	jmp    f010497a <_alltraps>$/;"	l
f0104926	obj/kern/kernel.asm	/^f0104926 <irq2_handler>:$/;"	l
f0104926	obj/kern/kernel.asm	/^f0104926:	6a 00                	push   $0x0$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	6a 22                	push   $0x22$/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a:	eb 4e                	jmp    f010497a <_alltraps>$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c <irq3_handler>:$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	6a 00                	push   $0x0$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	6a 23                	push   $0x23$/;"	l
f0104930	obj/kern/kernel.asm	/^f0104930:	eb 48                	jmp    f010497a <_alltraps>$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932 <irq4_handler>:$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	6a 00                	push   $0x0$/;"	l
f0104934	obj/kern/kernel.asm	/^f0104934:	6a 24                	push   $0x24$/;"	l
f0104936	obj/kern/kernel.asm	/^f0104936:	eb 42                	jmp    f010497a <_alltraps>$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938 <irq5_handler>:$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	6a 00                	push   $0x0$/;"	l
f010493a	obj/kern/kernel.asm	/^f010493a:	6a 25                	push   $0x25$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	eb 3c                	jmp    f010497a <_alltraps>$/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e <irq6_handler>:$/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e:	6a 00                	push   $0x0$/;"	l
f0104940	obj/kern/kernel.asm	/^f0104940:	6a 26                	push   $0x26$/;"	l
f0104942	obj/kern/kernel.asm	/^f0104942:	eb 36                	jmp    f010497a <_alltraps>$/;"	l
f0104944	obj/kern/kernel.asm	/^f0104944 <irq7_handler>:$/;"	l
f0104944	obj/kern/kernel.asm	/^f0104944:	6a 00                	push   $0x0$/;"	l
f0104946	obj/kern/kernel.asm	/^f0104946:	6a 27                	push   $0x27$/;"	l
f0104948	obj/kern/kernel.asm	/^f0104948:	eb 30                	jmp    f010497a <_alltraps>$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a <irq8_handler>:$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	6a 00                	push   $0x0$/;"	l
f010494c	obj/kern/kernel.asm	/^f010494c:	6a 28                	push   $0x28$/;"	l
f010494e	obj/kern/kernel.asm	/^f010494e:	eb 2a                	jmp    f010497a <_alltraps>$/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950 <irq9_handler>:$/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	6a 00                	push   $0x0$/;"	l
f0104952	obj/kern/kernel.asm	/^f0104952:	6a 29                	push   $0x29$/;"	l
f0104954	obj/kern/kernel.asm	/^f0104954:	eb 24                	jmp    f010497a <_alltraps>$/;"	l
f0104956	obj/kern/kernel.asm	/^f0104956 <irq10_handler>:$/;"	l
f0104956	obj/kern/kernel.asm	/^f0104956:	6a 00                	push   $0x0$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	6a 2a                	push   $0x2a$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	eb 1e                	jmp    f010497a <_alltraps>$/;"	l
f010495c	obj/kern/kernel.asm	/^f010495c <irq11_handler>:$/;"	l
f010495c	obj/kern/kernel.asm	/^f010495c:	6a 00                	push   $0x0$/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e:	6a 2b                	push   $0x2b$/;"	l
f0104960	obj/kern/kernel.asm	/^f0104960:	eb 18                	jmp    f010497a <_alltraps>$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962 <irq12_handler>:$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962:	6a 00                	push   $0x0$/;"	l
f0104964	obj/kern/kernel.asm	/^f0104964:	6a 2c                	push   $0x2c$/;"	l
f0104966	obj/kern/kernel.asm	/^f0104966:	eb 12                	jmp    f010497a <_alltraps>$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968 <irq13_handler>:$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968:	6a 00                	push   $0x0$/;"	l
f010496a	obj/kern/kernel.asm	/^f010496a:	6a 2d                	push   $0x2d$/;"	l
f010496c	obj/kern/kernel.asm	/^f010496c:	eb 0c                	jmp    f010497a <_alltraps>$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e <irq14_handler>:$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	6a 00                	push   $0x0$/;"	l
f0104970	obj/kern/kernel.asm	/^f0104970:	6a 2e                	push   $0x2e$/;"	l
f0104972	obj/kern/kernel.asm	/^f0104972:	eb 06                	jmp    f010497a <_alltraps>$/;"	l
f0104974	obj/kern/kernel.asm	/^f0104974 <irq15_handler>:$/;"	l
f0104974	obj/kern/kernel.asm	/^f0104974:	6a 00                	push   $0x0$/;"	l
f0104976	obj/kern/kernel.asm	/^f0104976:	6a 2f                	push   $0x2f$/;"	l
f0104978	obj/kern/kernel.asm	/^f0104978:	eb 00                	jmp    f010497a <_alltraps>$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a <_alltraps>:$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	1e                   	push   %ds$/;"	l
f010497b	obj/kern/kernel.asm	/^f010497b:	06                   	push   %es$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	60                   	pusha  $/;"	l
f010497d	obj/kern/kernel.asm	/^f010497d:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0104981	obj/kern/kernel.asm	/^f0104981:	8e d8                	mov    %eax,%ds$/;"	l
f0104983	obj/kern/kernel.asm	/^f0104983:	8e c0                	mov    %eax,%es$/;"	l
f0104985	obj/kern/kernel.asm	/^f0104985:	54                   	push   %esp$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	e8 8a fc ff ff       	call   f0104615 <trap>$/;"	l
f010498b	obj/kern/kernel.asm	/^f010498b:	66 90                	xchg   %ax,%ax$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	66 90                	xchg   %ax,%ax$/;"	l
f010498f	obj/kern/kernel.asm	/^f010498f:	90                   	nop$/;"	l
f0104990	obj/kern/kernel.asm	/^f0104990 <sched_halt>:$/;"	l
f0104990	obj/kern/kernel.asm	/^f0104990:	55                   	push   %ebp$/;"	l
f0104991	obj/kern/kernel.asm	/^f0104991:	89 e5                	mov    %esp,%ebp$/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	8b 15 48 72 2b f0    	mov    0xf02b7248,%edx$/;"	l
f010499c	obj/kern/kernel.asm	/^f010499c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01049a1	obj/kern/kernel.asm	/^f01049a1:	8b 4a 54             	mov    0x54(%edx),%ecx$/;"	l
f01049a4	obj/kern/kernel.asm	/^f01049a4:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f01049a7	obj/kern/kernel.asm	/^f01049a7:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f01049aa	obj/kern/kernel.asm	/^f01049aa:	76 0f                	jbe    f01049bb <sched_halt+0x2b>$/;"	l
f01049ac	obj/kern/kernel.asm	/^f01049ac:	83 c0 01             	add    $0x1,%eax$/;"	l
f01049af	obj/kern/kernel.asm	/^f01049af:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f01049b2	obj/kern/kernel.asm	/^f01049b2:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f01049b7	obj/kern/kernel.asm	/^f01049b7:	75 e8                	jne    f01049a1 <sched_halt+0x11>$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	eb 07                	jmp    f01049c2 <sched_halt+0x32>$/;"	l
f01049bb	obj/kern/kernel.asm	/^f01049bb:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0:	75 1a                	jne    f01049dc <sched_halt+0x4c>$/;"	l
f01049c2	obj/kern/kernel.asm	/^f01049c2:	c7 04 24 30 8d 10 f0 	movl   $0xf0108d30,(%esp)$/;"	l
f01049c9	obj/kern/kernel.asm	/^f01049c9:	e8 9a f6 ff ff       	call   f0104068 <cprintf>$/;"	l
f01049ce	obj/kern/kernel.asm	/^f01049ce:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01049d5	obj/kern/kernel.asm	/^f01049d5:	e8 84 c0 ff ff       	call   f0100a5e <monitor>$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	eb f2                	jmp    f01049ce <sched_halt+0x3e>$/;"	l
f01049dc	obj/kern/kernel.asm	/^f01049dc:	e8 08 1b 00 00       	call   f01064e9 <cpunum>$/;"	l
f01049e1	obj/kern/kernel.asm	/^f01049e1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049e4	obj/kern/kernel.asm	/^f01049e4:	c7 80 28 00 30 f0 00 	movl   $0x0,-0xfcfffd8(%eax)$/;"	l
f01049eb	obj/kern/kernel.asm	/^f01049eb:	00 00 00 $/;"	l
f01049ee	obj/kern/kernel.asm	/^f01049ee:	a1 18 fd 2f f0       	mov    0xf02ffd18,%eax$/;"	l
f01049f3	obj/kern/kernel.asm	/^f01049f3:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01049f8	obj/kern/kernel.asm	/^f01049f8:	77 20                	ja     f0104a1a <sched_halt+0x8a>$/;"	l
f01049fa	obj/kern/kernel.asm	/^f01049fa:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0104a05	obj/kern/kernel.asm	/^f0104a05:	f0 $/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	c7 44 24 04 59 00 00 	movl   $0x59,0x4(%esp)$/;"	l
f0104a0d	obj/kern/kernel.asm	/^f0104a0d:	00 $/;"	l
f0104a0e	obj/kern/kernel.asm	/^f0104a0e:	c7 04 24 59 8d 10 f0 	movl   $0xf0108d59,(%esp)$/;"	l
f0104a15	obj/kern/kernel.asm	/^f0104a15:	e8 83 b6 ff ff       	call   f010009d <_panic>$/;"	l
f0104a1a	obj/kern/kernel.asm	/^f0104a1a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104a1f	obj/kern/kernel.asm	/^f0104a1f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104a22	obj/kern/kernel.asm	/^f0104a22:	e8 c2 1a 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104a27	obj/kern/kernel.asm	/^f0104a27:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104a2a	obj/kern/kernel.asm	/^f0104a2a:	81 c2 20 00 30 f0    	add    $0xf0300020,%edx$/;"	l
f0104a30	obj/kern/kernel.asm	/^f0104a30:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104a35	obj/kern/kernel.asm	/^f0104a35:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104a39	obj/kern/kernel.asm	/^f0104a39:	c7 04 24 60 44 12 f0 	movl   $0xf0124460,(%esp)$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	e8 ce 1d 00 00       	call   f0106813 <spin_unlock>$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	f3 90                	pause  $/;"	l
f0104a47	obj/kern/kernel.asm	/^f0104a47:	e8 9d 1a 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104a4c	obj/kern/kernel.asm	/^f0104a4c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	8b 80 30 00 30 f0    	mov    -0xfcfffd0(%eax),%eax$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0104a5a	obj/kern/kernel.asm	/^f0104a5a:	89 c4                	mov    %eax,%esp$/;"	l
f0104a5c	obj/kern/kernel.asm	/^f0104a5c:	6a 00                	push   $0x0$/;"	l
f0104a5e	obj/kern/kernel.asm	/^f0104a5e:	6a 00                	push   $0x0$/;"	l
f0104a60	obj/kern/kernel.asm	/^f0104a60:	fb                   	sti    $/;"	l
f0104a61	obj/kern/kernel.asm	/^f0104a61:	f4                   	hlt    $/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	eb fd                	jmp    f0104a61 <sched_halt+0xd1>$/;"	l
f0104a64	obj/kern/kernel.asm	/^f0104a64:	c9                   	leave  $/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65:	c3                   	ret    $/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66 <sched_yield>:$/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66:	55                   	push   %ebp$/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a69	obj/kern/kernel.asm	/^f0104a69:	53                   	push   %ebx$/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104a6d	obj/kern/kernel.asm	/^f0104a6d:	e8 77 1a 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104a72	obj/kern/kernel.asm	/^f0104a72:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f0104a7a	obj/kern/kernel.asm	/^f0104a7a:	83 b8 28 00 30 f0 00 	cmpl   $0x0,-0xfcfffd8(%eax)$/;"	l
f0104a81	obj/kern/kernel.asm	/^f0104a81:	74 2d                	je     f0104ab0 <sched_yield+0x4a>$/;"	l
f0104a83	obj/kern/kernel.asm	/^f0104a83:	e8 61 1a 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104a88	obj/kern/kernel.asm	/^f0104a88:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0104a91	obj/kern/kernel.asm	/^f0104a91:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104a96	obj/kern/kernel.asm	/^f0104a96:	81 78 48 00 04 00 00 	cmpl   $0x400,0x48(%eax)$/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	74 11                	je     f0104ab0 <sched_yield+0x4a>$/;"	l
f0104a9f	obj/kern/kernel.asm	/^f0104a9f:	e8 45 1a 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104aa4	obj/kern/kernel.asm	/^f0104aa4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104aa7	obj/kern/kernel.asm	/^f0104aa7:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0104aad	obj/kern/kernel.asm	/^f0104aad:	8b 48 48             	mov    0x48(%eax),%ecx$/;"	l
f0104ab0	obj/kern/kernel.asm	/^f0104ab0:	8b 1d 48 72 2b f0    	mov    0xf02b7248,%ebx$/;"	l
f0104ab6	obj/kern/kernel.asm	/^f0104ab6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104abb	obj/kern/kernel.asm	/^f0104abb:	8d 14 08             	lea    (%eax,%ecx,1),%edx$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0104ac4	obj/kern/kernel.asm	/^f0104ac4:	6b d2 7c             	imul   $0x7c,%edx,%edx$/;"	l
f0104ac7	obj/kern/kernel.asm	/^f0104ac7:	01 da                	add    %ebx,%edx$/;"	l
f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	83 7a 54 02          	cmpl   $0x2,0x54(%edx)$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	74 0c                	je     f0104adb <sched_yield+0x75>$/;"	l
f0104acf	obj/kern/kernel.asm	/^f0104acf:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104ad2	obj/kern/kernel.asm	/^f0104ad2:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104ad7	obj/kern/kernel.asm	/^f0104ad7:	75 e2                	jne    f0104abb <sched_yield+0x55>$/;"	l
f0104ad9	obj/kern/kernel.asm	/^f0104ad9:	eb 04                	jmp    f0104adf <sched_yield+0x79>$/;"	l
f0104adb	obj/kern/kernel.asm	/^f0104adb:	85 d2                	test   %edx,%edx$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	75 38                	jne    f0104b17 <sched_yield+0xb1>$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	90                   	nop$/;"	l
f0104ae0	obj/kern/kernel.asm	/^f0104ae0:	e8 04 1a 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104ae5	obj/kern/kernel.asm	/^f0104ae5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ae8	obj/kern/kernel.asm	/^f0104ae8:	83 b8 28 00 30 f0 00 	cmpl   $0x0,-0xfcfffd8(%eax)$/;"	l
f0104aef	obj/kern/kernel.asm	/^f0104aef:	74 2e                	je     f0104b1f <sched_yield+0xb9>$/;"	l
f0104af1	obj/kern/kernel.asm	/^f0104af1:	e8 f3 19 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104af6	obj/kern/kernel.asm	/^f0104af6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104af9	obj/kern/kernel.asm	/^f0104af9:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0104aff	obj/kern/kernel.asm	/^f0104aff:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	75 1a                	jne    f0104b1f <sched_yield+0xb9>$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	e8 df 19 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b0d	obj/kern/kernel.asm	/^f0104b0d:	8b 90 28 00 30 f0    	mov    -0xfcfffd8(%eax),%edx$/;"	l
f0104b13	obj/kern/kernel.asm	/^f0104b13:	85 d2                	test   %edx,%edx$/;"	l
f0104b15	obj/kern/kernel.asm	/^f0104b15:	74 08                	je     f0104b1f <sched_yield+0xb9>$/;"	l
f0104b17	obj/kern/kernel.asm	/^f0104b17:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0104b1a	obj/kern/kernel.asm	/^f0104b1a:	e8 f1 f2 ff ff       	call   f0103e10 <env_run>$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	e8 6c fe ff ff       	call   f0104990 <sched_halt>$/;"	l
f0104b24	obj/kern/kernel.asm	/^f0104b24:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104b27	obj/kern/kernel.asm	/^f0104b27:	5b                   	pop    %ebx$/;"	l
f0104b28	obj/kern/kernel.asm	/^f0104b28:	5d                   	pop    %ebp$/;"	l
f0104b29	obj/kern/kernel.asm	/^f0104b29:	c3                   	ret    $/;"	l
f0104b2a	obj/kern/kernel.asm	/^f0104b2a:	66 90                	xchg   %ax,%ax$/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	66 90                	xchg   %ax,%ax$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	66 90                	xchg   %ax,%ax$/;"	l
f0104b30	obj/kern/kernel.asm	/^f0104b30 <syscall>:$/;"	l
f0104b30	obj/kern/kernel.asm	/^f0104b30:	55                   	push   %ebp$/;"	l
f0104b31	obj/kern/kernel.asm	/^f0104b31:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b33	obj/kern/kernel.asm	/^f0104b33:	57                   	push   %edi$/;"	l
f0104b34	obj/kern/kernel.asm	/^f0104b34:	56                   	push   %esi$/;"	l
f0104b35	obj/kern/kernel.asm	/^f0104b35:	53                   	push   %ebx$/;"	l
f0104b36	obj/kern/kernel.asm	/^f0104b36:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104b39	obj/kern/kernel.asm	/^f0104b39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104b3c	obj/kern/kernel.asm	/^f0104b3c:	83 f8 10             	cmp    $0x10,%eax$/;"	l
f0104b3f	obj/kern/kernel.asm	/^f0104b3f:	0f 87 ed 06 00 00    	ja     f0105232 <syscall+0x702>$/;"	l
f0104b45	obj/kern/kernel.asm	/^f0104b45:	ff 24 85 a0 8d 10 f0 	jmp    *-0xfef7260(,%eax,4)$/;"	l
f0104b4c	obj/kern/kernel.asm	/^f0104b4c:	e8 98 19 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104b51	obj/kern/kernel.asm	/^f0104b51:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f0104b58	obj/kern/kernel.asm	/^f0104b58:	00 $/;"	l
f0104b59	obj/kern/kernel.asm	/^f0104b59:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0104b60	obj/kern/kernel.asm	/^f0104b60:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0104b67	obj/kern/kernel.asm	/^f0104b67:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b73	obj/kern/kernel.asm	/^f0104b73:	e8 d3 ea ff ff       	call   f010364b <user_mem_assert>$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104b7b	obj/kern/kernel.asm	/^f0104b7b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104b82	obj/kern/kernel.asm	/^f0104b82:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b86	obj/kern/kernel.asm	/^f0104b86:	c7 04 24 66 8d 10 f0 	movl   $0xf0108d66,(%esp)$/;"	l
f0104b8d	obj/kern/kernel.asm	/^f0104b8d:	e8 d6 f4 ff ff       	call   f0104068 <cprintf>$/;"	l
f0104b92	obj/kern/kernel.asm	/^f0104b92:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b97	obj/kern/kernel.asm	/^f0104b97:	e9 a2 06 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104b9c	obj/kern/kernel.asm	/^f0104b9c:	e8 24 bb ff ff       	call   f01006c5 <cons_getc>$/;"	l
f0104ba1	obj/kern/kernel.asm	/^f0104ba1:	e9 98 06 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104ba6	obj/kern/kernel.asm	/^f0104ba6:	e8 3e 19 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104bab	obj/kern/kernel.asm	/^f0104bab:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104bae	obj/kern/kernel.asm	/^f0104bae:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104bb7	obj/kern/kernel.asm	/^f0104bb7:	e9 82 06 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	00 $/;"	l
f0104bc4	obj/kern/kernel.asm	/^f0104bc4:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104bc7	obj/kern/kernel.asm	/^f0104bc7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104bcb	obj/kern/kernel.asm	/^f0104bcb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	e8 68 eb ff ff       	call   f010373e <envid2env>$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	89 c2                	mov    %eax,%edx$/;"	l
f0104bd8	obj/kern/kernel.asm	/^f0104bd8:	85 c0                	test   %eax,%eax$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda:	78 6e                	js     f0104c4a <syscall+0x11a>$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc:	e8 08 19 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104be1	obj/kern/kernel.asm	/^f0104be1:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104be4	obj/kern/kernel.asm	/^f0104be4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104be7	obj/kern/kernel.asm	/^f0104be7:	39 90 28 00 30 f0    	cmp    %edx,-0xfcfffd8(%eax)$/;"	l
f0104bed	obj/kern/kernel.asm	/^f0104bed:	75 23                	jne    f0104c12 <syscall+0xe2>$/;"	l
f0104bef	obj/kern/kernel.asm	/^f0104bef:	e8 f5 18 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104bf7	obj/kern/kernel.asm	/^f0104bf7:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c04	obj/kern/kernel.asm	/^f0104c04:	c7 04 24 6b 8d 10 f0 	movl   $0xf0108d6b,(%esp)$/;"	l
f0104c0b	obj/kern/kernel.asm	/^f0104c0b:	e8 58 f4 ff ff       	call   f0104068 <cprintf>$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	eb 28                	jmp    f0104c3a <syscall+0x10a>$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	e8 cf 18 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104c21	obj/kern/kernel.asm	/^f0104c21:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0104c27	obj/kern/kernel.asm	/^f0104c27:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104c2a	obj/kern/kernel.asm	/^f0104c2a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	c7 04 24 86 8d 10 f0 	movl   $0xf0108d86,(%esp)$/;"	l
f0104c35	obj/kern/kernel.asm	/^f0104c35:	e8 2e f4 ff ff       	call   f0104068 <cprintf>$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104c3d	obj/kern/kernel.asm	/^f0104c3d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	e8 2a f1 ff ff       	call   f0103d6f <env_destroy>$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a:	89 d0                	mov    %edx,%eax$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	e9 ed 05 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104c51	obj/kern/kernel.asm	/^f0104c51:	e8 10 fe ff ff       	call   f0104a66 <sched_yield>$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104c64	obj/kern/kernel.asm	/^f0104c64:	00 $/;"	l
f0104c65	obj/kern/kernel.asm	/^f0104c65:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	e8 c7 ea ff ff       	call   f010373e <envid2env>$/;"	l
f0104c77	obj/kern/kernel.asm	/^f0104c77:	85 c0                	test   %eax,%eax$/;"	l
f0104c79	obj/kern/kernel.asm	/^f0104c79:	0f 88 bf 05 00 00    	js     f010523e <syscall+0x70e>$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0104c83	obj/kern/kernel.asm	/^f0104c83:	74 5e                	je     f0104ce3 <syscall+0x1b3>$/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f0104c8d	obj/kern/kernel.asm	/^f0104c8d:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	75 5b                	jne    f0104ced <syscall+0x1bd>$/;"	l
f0104c92	obj/kern/kernel.asm	/^f0104c92:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	77 5c                	ja     f0104cf7 <syscall+0x1c7>$/;"	l
f0104c9b	obj/kern/kernel.asm	/^f0104c9b:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104ca2	obj/kern/kernel.asm	/^f0104ca2:	75 5d                	jne    f0104d01 <syscall+0x1d1>$/;"	l
f0104ca4	obj/kern/kernel.asm	/^f0104ca4:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0104cab	obj/kern/kernel.asm	/^f0104cab:	e8 8a c4 ff ff       	call   f010113a <page_alloc>$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	85 c0                	test   %eax,%eax$/;"	l
f0104cb2	obj/kern/kernel.asm	/^f0104cb2:	74 57                	je     f0104d0b <syscall+0x1db>$/;"	l
f0104cb4	obj/kern/kernel.asm	/^f0104cb4:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f0104cb7	obj/kern/kernel.asm	/^f0104cb7:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0104cbb	obj/kern/kernel.asm	/^f0104cbb:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0104cbe	obj/kern/kernel.asm	/^f0104cbe:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104cc6	obj/kern/kernel.asm	/^f0104cc6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104cc9	obj/kern/kernel.asm	/^f0104cc9:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ccf	obj/kern/kernel.asm	/^f0104ccf:	e8 aa c7 ff ff       	call   f010147e <page_insert>$/;"	l
f0104cd4	obj/kern/kernel.asm	/^f0104cd4:	85 c0                	test   %eax,%eax$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104cdb	obj/kern/kernel.asm	/^f0104cdb:	0f 4f c2             	cmovg  %edx,%eax$/;"	l
f0104cde	obj/kern/kernel.asm	/^f0104cde:	e9 5b 05 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104ce3	obj/kern/kernel.asm	/^f0104ce3:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	e9 51 05 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104ced	obj/kern/kernel.asm	/^f0104ced:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	e9 47 05 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104cf7	obj/kern/kernel.asm	/^f0104cf7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	e9 3d 05 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104d01	obj/kern/kernel.asm	/^f0104d01:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104d06	obj/kern/kernel.asm	/^f0104d06:	e9 33 05 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104d0b	obj/kern/kernel.asm	/^f0104d0b:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	e9 29 05 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104d15	obj/kern/kernel.asm	/^f0104d15:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f0104d18	obj/kern/kernel.asm	/^f0104d18:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f0104d1d	obj/kern/kernel.asm	/^f0104d1d:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	0f 85 fb 00 00 00    	jne    f0104e21 <syscall+0x2f1>$/;"	l
f0104d26	obj/kern/kernel.asm	/^f0104d26:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104d2d	obj/kern/kernel.asm	/^f0104d2d:	0f 87 f8 00 00 00    	ja     f0104e2b <syscall+0x2fb>$/;"	l
f0104d33	obj/kern/kernel.asm	/^f0104d33:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	0f 85 f5 00 00 00    	jne    f0104e35 <syscall+0x305>$/;"	l
f0104d40	obj/kern/kernel.asm	/^f0104d40:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f0104d47	obj/kern/kernel.asm	/^f0104d47:	0f 87 f2 00 00 00    	ja     f0104e3f <syscall+0x30f>$/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	f7 45 18 ff 0f 00 00 	testl  $0xfff,0x18(%ebp)$/;"	l
f0104d54	obj/kern/kernel.asm	/^f0104d54:	0f 85 ef 00 00 00    	jne    f0104e49 <syscall+0x319>$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0104d61	obj/kern/kernel.asm	/^f0104d61:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0104d68	obj/kern/kernel.asm	/^f0104d68:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104d6f	obj/kern/kernel.asm	/^f0104d6f:	00 $/;"	l
f0104d70	obj/kern/kernel.asm	/^f0104d70:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104d73	obj/kern/kernel.asm	/^f0104d73:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104d77	obj/kern/kernel.asm	/^f0104d77:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d7d	obj/kern/kernel.asm	/^f0104d7d:	e8 bc e9 ff ff       	call   f010373e <envid2env>$/;"	l
f0104d82	obj/kern/kernel.asm	/^f0104d82:	85 c0                	test   %eax,%eax$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	0f 88 b4 04 00 00    	js     f010523e <syscall+0x70e>$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0104d8e	obj/kern/kernel.asm	/^f0104d8e:	0f 84 bf 00 00 00    	je     f0104e53 <syscall+0x323>$/;"	l
f0104d94	obj/kern/kernel.asm	/^f0104d94:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104d9b	obj/kern/kernel.asm	/^f0104d9b:	00 $/;"	l
f0104d9c	obj/kern/kernel.asm	/^f0104d9c:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104d9f	obj/kern/kernel.asm	/^f0104d9f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104da3	obj/kern/kernel.asm	/^f0104da3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104da6	obj/kern/kernel.asm	/^f0104da6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104da9	obj/kern/kernel.asm	/^f0104da9:	e8 90 e9 ff ff       	call   f010373e <envid2env>$/;"	l
f0104dae	obj/kern/kernel.asm	/^f0104dae:	85 c0                	test   %eax,%eax$/;"	l
f0104db0	obj/kern/kernel.asm	/^f0104db0:	0f 88 88 04 00 00    	js     f010523e <syscall+0x70e>$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0104dba	obj/kern/kernel.asm	/^f0104dba:	0f 84 9d 00 00 00    	je     f0104e5d <syscall+0x32d>$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104dc3	obj/kern/kernel.asm	/^f0104dc3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104dc7	obj/kern/kernel.asm	/^f0104dc7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104dd1	obj/kern/kernel.asm	/^f0104dd1:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104dd4	obj/kern/kernel.asm	/^f0104dd4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104dd7	obj/kern/kernel.asm	/^f0104dd7:	e8 b7 c5 ff ff       	call   f0101393 <page_lookup>$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	85 c0                	test   %eax,%eax$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	0f 84 83 00 00 00    	je     f0104e67 <syscall+0x337>$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	74 08                	je     f0104df2 <syscall+0x2c2>$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104ded	obj/kern/kernel.asm	/^f0104ded:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104df0	obj/kern/kernel.asm	/^f0104df0:	74 7f                	je     f0104e71 <syscall+0x341>$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	8b 75 1c             	mov    0x1c(%ebp),%esi$/;"	l
f0104df5	obj/kern/kernel.asm	/^f0104df5:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0104df9	obj/kern/kernel.asm	/^f0104df9:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0104dfc	obj/kern/kernel.asm	/^f0104dfc:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104e07	obj/kern/kernel.asm	/^f0104e07:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104e0a	obj/kern/kernel.asm	/^f0104e0a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e0d	obj/kern/kernel.asm	/^f0104e0d:	e8 6c c6 ff ff       	call   f010147e <page_insert>$/;"	l
f0104e12	obj/kern/kernel.asm	/^f0104e12:	85 c0                	test   %eax,%eax$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104e19	obj/kern/kernel.asm	/^f0104e19:	0f 4f c2             	cmovg  %edx,%eax$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c:	e9 1d 04 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26:	e9 13 04 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104e2b	obj/kern/kernel.asm	/^f0104e2b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e30	obj/kern/kernel.asm	/^f0104e30:	e9 09 04 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104e35	obj/kern/kernel.asm	/^f0104e35:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e3a	obj/kern/kernel.asm	/^f0104e3a:	e9 ff 03 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104e3f	obj/kern/kernel.asm	/^f0104e3f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	e9 f5 03 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104e49	obj/kern/kernel.asm	/^f0104e49:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	e9 eb 03 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104e53	obj/kern/kernel.asm	/^f0104e53:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0104e58	obj/kern/kernel.asm	/^f0104e58:	e9 e1 03 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104e5d	obj/kern/kernel.asm	/^f0104e5d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	e9 d7 03 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e6c	obj/kern/kernel.asm	/^f0104e6c:	e9 cd 03 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104e71	obj/kern/kernel.asm	/^f0104e71:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e76	obj/kern/kernel.asm	/^f0104e76:	e9 c3 03 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104e7b	obj/kern/kernel.asm	/^f0104e7b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104e82	obj/kern/kernel.asm	/^f0104e82:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104e89	obj/kern/kernel.asm	/^f0104e89:	00 $/;"	l
f0104e8a	obj/kern/kernel.asm	/^f0104e8a:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104e8d	obj/kern/kernel.asm	/^f0104e8d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104e91	obj/kern/kernel.asm	/^f0104e91:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104e94	obj/kern/kernel.asm	/^f0104e94:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	e8 a2 e8 ff ff       	call   f010373e <envid2env>$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	85 c0                	test   %eax,%eax$/;"	l
f0104e9e	obj/kern/kernel.asm	/^f0104e9e:	0f 88 9a 03 00 00    	js     f010523e <syscall+0x70e>$/;"	l
f0104ea4	obj/kern/kernel.asm	/^f0104ea4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104ea7	obj/kern/kernel.asm	/^f0104ea7:	85 c0                	test   %eax,%eax$/;"	l
f0104ea9	obj/kern/kernel.asm	/^f0104ea9:	74 2e                	je     f0104ed9 <syscall+0x3a9>$/;"	l
f0104eab	obj/kern/kernel.asm	/^f0104eab:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104eb2	obj/kern/kernel.asm	/^f0104eb2:	77 2f                	ja     f0104ee3 <syscall+0x3b3>$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104ebb	obj/kern/kernel.asm	/^f0104ebb:	75 30                	jne    f0104eed <syscall+0x3bd>$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104ec4	obj/kern/kernel.asm	/^f0104ec4:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104ec7	obj/kern/kernel.asm	/^f0104ec7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	e8 66 c5 ff ff       	call   f0101435 <page_remove>$/;"	l
f0104ecf	obj/kern/kernel.asm	/^f0104ecf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	e9 65 03 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104ed9	obj/kern/kernel.asm	/^f0104ed9:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	e9 5b 03 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104ee3	obj/kern/kernel.asm	/^f0104ee3:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8:	e9 51 03 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104eed	obj/kern/kernel.asm	/^f0104eed:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	e9 47 03 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104ef7	obj/kern/kernel.asm	/^f0104ef7:	e8 ed 15 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0104f05	obj/kern/kernel.asm	/^f0104f05:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104f08	obj/kern/kernel.asm	/^f0104f08:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104f0f	obj/kern/kernel.asm	/^f0104f0f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104f12	obj/kern/kernel.asm	/^f0104f12:	e8 38 e9 ff ff       	call   f010384f <env_alloc>$/;"	l
f0104f17	obj/kern/kernel.asm	/^f0104f17:	89 c2                	mov    %eax,%edx$/;"	l
f0104f19	obj/kern/kernel.asm	/^f0104f19:	85 c0                	test   %eax,%eax$/;"	l
f0104f1b	obj/kern/kernel.asm	/^f0104f1b:	78 2e                	js     f0104f4b <syscall+0x41b>$/;"	l
f0104f1d	obj/kern/kernel.asm	/^f0104f1d:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104f20	obj/kern/kernel.asm	/^f0104f20:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	e8 bd 15 00 00       	call   f01064e9 <cpunum>$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f2f	obj/kern/kernel.asm	/^f0104f2f:	8b b0 28 00 30 f0    	mov    -0xfcfffd8(%eax),%esi$/;"	l
f0104f35	obj/kern/kernel.asm	/^f0104f35:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104f3a	obj/kern/kernel.asm	/^f0104f3a:	89 df                	mov    %ebx,%edi$/;"	l
f0104f3c	obj/kern/kernel.asm	/^f0104f3c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104f3e	obj/kern/kernel.asm	/^f0104f3e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104f41	obj/kern/kernel.asm	/^f0104f41:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0104f48	obj/kern/kernel.asm	/^f0104f48:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f0104f4b	obj/kern/kernel.asm	/^f0104f4b:	89 d0                	mov    %edx,%eax$/;"	l
f0104f4d	obj/kern/kernel.asm	/^f0104f4d:	e9 ec 02 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104f52	obj/kern/kernel.asm	/^f0104f52:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104f59	obj/kern/kernel.asm	/^f0104f59:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	00 $/;"	l
f0104f61	obj/kern/kernel.asm	/^f0104f61:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104f64	obj/kern/kernel.asm	/^f0104f64:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104f6b	obj/kern/kernel.asm	/^f0104f6b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104f6e	obj/kern/kernel.asm	/^f0104f6e:	e8 cb e7 ff ff       	call   f010373e <envid2env>$/;"	l
f0104f73	obj/kern/kernel.asm	/^f0104f73:	85 c0                	test   %eax,%eax$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	0f 88 c3 02 00 00    	js     f010523e <syscall+0x70e>$/;"	l
f0104f7b	obj/kern/kernel.asm	/^f0104f7b:	83 7d 10 04          	cmpl   $0x4,0x10(%ebp)$/;"	l
f0104f7f	obj/kern/kernel.asm	/^f0104f7f:	74 06                	je     f0104f87 <syscall+0x457>$/;"	l
f0104f81	obj/kern/kernel.asm	/^f0104f81:	83 7d 10 02          	cmpl   $0x2,0x10(%ebp)$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	75 13                	jne    f0104f9a <syscall+0x46a>$/;"	l
f0104f87	obj/kern/kernel.asm	/^f0104f87:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104f8a	obj/kern/kernel.asm	/^f0104f8a:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	89 70 54             	mov    %esi,0x54(%eax)$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f95	obj/kern/kernel.asm	/^f0104f95:	e9 a4 02 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104f9a	obj/kern/kernel.asm	/^f0104f9a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104f9f	obj/kern/kernel.asm	/^f0104f9f:	e9 9a 02 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0104fa4	obj/kern/kernel.asm	/^f0104fa4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104fab	obj/kern/kernel.asm	/^f0104fab:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	00 $/;"	l
f0104fb3	obj/kern/kernel.asm	/^f0104fb3:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104fb6	obj/kern/kernel.asm	/^f0104fb6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104fba	obj/kern/kernel.asm	/^f0104fba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104fc0	obj/kern/kernel.asm	/^f0104fc0:	e8 79 e7 ff ff       	call   f010373e <envid2env>$/;"	l
f0104fc5	obj/kern/kernel.asm	/^f0104fc5:	89 c2                	mov    %eax,%edx$/;"	l
f0104fc7	obj/kern/kernel.asm	/^f0104fc7:	85 c0                	test   %eax,%eax$/;"	l
f0104fc9	obj/kern/kernel.asm	/^f0104fc9:	78 30                	js     f0104ffb <syscall+0x4cb>$/;"	l
f0104fcb	obj/kern/kernel.asm	/^f0104fcb:	c7 44 24 0c 07 00 00 	movl   $0x7,0xc(%esp)$/;"	l
f0104fd2	obj/kern/kernel.asm	/^f0104fd2:	00 $/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0104fda	obj/kern/kernel.asm	/^f0104fda:	00 $/;"	l
f0104fdb	obj/kern/kernel.asm	/^f0104fdb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104fde	obj/kern/kernel.asm	/^f0104fde:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104fe2	obj/kern/kernel.asm	/^f0104fe2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104fe5	obj/kern/kernel.asm	/^f0104fe5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104fe8	obj/kern/kernel.asm	/^f0104fe8:	e8 5e e6 ff ff       	call   f010364b <user_mem_assert>$/;"	l
f0104fed	obj/kern/kernel.asm	/^f0104fed:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104ff0	obj/kern/kernel.asm	/^f0104ff0:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0104ff3	obj/kern/kernel.asm	/^f0104ff3:	89 78 64             	mov    %edi,0x64(%eax)$/;"	l
f0104ff6	obj/kern/kernel.asm	/^f0104ff6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104ffb	obj/kern/kernel.asm	/^f0104ffb:	89 d0                	mov    %edx,%eax$/;"	l
f0104ffd	obj/kern/kernel.asm	/^f0104ffd:	e9 3c 02 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0105002	obj/kern/kernel.asm	/^f0105002:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f0105009	obj/kern/kernel.asm	/^f0105009:	77 21                	ja     f010502c <syscall+0x4fc>$/;"	l
f010500b	obj/kern/kernel.asm	/^f010500b:	f7 45 0c ff 0f 00 00 	testl  $0xfff,0xc(%ebp)$/;"	l
f0105012	obj/kern/kernel.asm	/^f0105012:	0f 85 21 02 00 00    	jne    f0105239 <syscall+0x709>$/;"	l
f0105018	obj/kern/kernel.asm	/^f0105018:	e8 cc 14 00 00       	call   f01064e9 <cpunum>$/;"	l
f010501d	obj/kern/kernel.asm	/^f010501d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105020	obj/kern/kernel.asm	/^f0105020:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0105026	obj/kern/kernel.asm	/^f0105026:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	89 48 6c             	mov    %ecx,0x6c(%eax)$/;"	l
f010502c	obj/kern/kernel.asm	/^f010502c:	e8 b8 14 00 00       	call   f01064e9 <cpunum>$/;"	l
f0105031	obj/kern/kernel.asm	/^f0105031:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f010503a	obj/kern/kernel.asm	/^f010503a:	c6 40 68 01          	movb   $0x1,0x68(%eax)$/;"	l
f010503e	obj/kern/kernel.asm	/^f010503e:	e8 a6 14 00 00       	call   f01064e9 <cpunum>$/;"	l
f0105043	obj/kern/kernel.asm	/^f0105043:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105046	obj/kern/kernel.asm	/^f0105046:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f010504c	obj/kern/kernel.asm	/^f010504c:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0105053	obj/kern/kernel.asm	/^f0105053:	e8 91 14 00 00       	call   f01064e9 <cpunum>$/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010505b	obj/kern/kernel.asm	/^f010505b:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0105061	obj/kern/kernel.asm	/^f0105061:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0105068	obj/kern/kernel.asm	/^f0105068:	e8 f9 f9 ff ff       	call   f0104a66 <sched_yield>$/;"	l
f010506d	obj/kern/kernel.asm	/^f010506d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0105074	obj/kern/kernel.asm	/^f0105074:	00 $/;"	l
f0105075	obj/kern/kernel.asm	/^f0105075:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0105078	obj/kern/kernel.asm	/^f0105078:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010507c	obj/kern/kernel.asm	/^f010507c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010507f	obj/kern/kernel.asm	/^f010507f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105082	obj/kern/kernel.asm	/^f0105082:	e8 b7 e6 ff ff       	call   f010373e <envid2env>$/;"	l
f0105087	obj/kern/kernel.asm	/^f0105087:	85 c0                	test   %eax,%eax$/;"	l
f0105089	obj/kern/kernel.asm	/^f0105089:	0f 88 f9 00 00 00    	js     f0105188 <syscall+0x658>$/;"	l
f010508f	obj/kern/kernel.asm	/^f010508f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105092	obj/kern/kernel.asm	/^f0105092:	80 78 68 00          	cmpb   $0x0,0x68(%eax)$/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096:	0f 84 f6 00 00 00    	je     f0105192 <syscall+0x662>$/;"	l
f010509c	obj/kern/kernel.asm	/^f010509c:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f01050a3	obj/kern/kernel.asm	/^f01050a3:	0f 87 9c 00 00 00    	ja     f0105145 <syscall+0x615>$/;"	l
f01050a9	obj/kern/kernel.asm	/^f01050a9:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01050ae	obj/kern/kernel.asm	/^f01050ae:	f7 45 14 ff 0f 00 00 	testl  $0xfff,0x14(%ebp)$/;"	l
f01050b5	obj/kern/kernel.asm	/^f01050b5:	0f 85 83 01 00 00    	jne    f010523e <syscall+0x70e>$/;"	l
f01050bb	obj/kern/kernel.asm	/^f01050bb:	f7 45 18 f8 f1 ff ff 	testl  $0xfffff1f8,0x18(%ebp)$/;"	l
f01050c2	obj/kern/kernel.asm	/^f01050c2:	0f 85 76 01 00 00    	jne    f010523e <syscall+0x70e>$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	e8 1c 14 00 00       	call   f01064e9 <cpunum>$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f01050d0	obj/kern/kernel.asm	/^f01050d0:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01050d4	obj/kern/kernel.asm	/^f01050d4:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f01050d7	obj/kern/kernel.asm	/^f01050d7:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01050db	obj/kern/kernel.asm	/^f01050db:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050de	obj/kern/kernel.asm	/^f01050de:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f01050e4	obj/kern/kernel.asm	/^f01050e4:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01050e7	obj/kern/kernel.asm	/^f01050e7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050ea	obj/kern/kernel.asm	/^f01050ea:	e8 a4 c2 ff ff       	call   f0101393 <page_lookup>$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	89 c1                	mov    %eax,%ecx$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	85 c0                	test   %eax,%eax$/;"	l
f01050f3	obj/kern/kernel.asm	/^f01050f3:	74 43                	je     f0105138 <syscall+0x608>$/;"	l
f01050f5	obj/kern/kernel.asm	/^f01050f5:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	74 11                	je     f010510c <syscall+0x5dc>$/;"	l
f01050fb	obj/kern/kernel.asm	/^f01050fb:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105100	obj/kern/kernel.asm	/^f0105100:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105103	obj/kern/kernel.asm	/^f0105103:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0105106	obj/kern/kernel.asm	/^f0105106:	0f 84 32 01 00 00    	je     f010523e <syscall+0x70e>$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f010510f	obj/kern/kernel.asm	/^f010510f:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105112	obj/kern/kernel.asm	/^f0105112:	89 42 78             	mov    %eax,0x78(%edx)$/;"	l
f0105115	obj/kern/kernel.asm	/^f0105115:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105119	obj/kern/kernel.asm	/^f0105119:	8b 42 6c             	mov    0x6c(%edx),%eax$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105120	obj/kern/kernel.asm	/^f0105120:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105124	obj/kern/kernel.asm	/^f0105124:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f0105127	obj/kern/kernel.asm	/^f0105127:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010512a	obj/kern/kernel.asm	/^f010512a:	e8 4f c3 ff ff       	call   f010147e <page_insert>$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	85 c0                	test   %eax,%eax$/;"	l
f0105131	obj/kern/kernel.asm	/^f0105131:	79 19                	jns    f010514c <syscall+0x61c>$/;"	l
f0105133	obj/kern/kernel.asm	/^f0105133:	e9 06 01 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0105138	obj/kern/kernel.asm	/^f0105138:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010513d	obj/kern/kernel.asm	/^f010513d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140:	e9 f9 00 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0105145	obj/kern/kernel.asm	/^f0105145:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)$/;"	l
f010514c	obj/kern/kernel.asm	/^f010514c:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f010514f	obj/kern/kernel.asm	/^f010514f:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f0105153	obj/kern/kernel.asm	/^f0105153:	e8 91 13 00 00       	call   f01064e9 <cpunum>$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010515b	obj/kern/kernel.asm	/^f010515b:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0105161	obj/kern/kernel.asm	/^f0105161:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105164	obj/kern/kernel.asm	/^f0105164:	89 43 74             	mov    %eax,0x74(%ebx)$/;"	l
f0105167	obj/kern/kernel.asm	/^f0105167:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010516a	obj/kern/kernel.asm	/^f010516a:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010516d	obj/kern/kernel.asm	/^f010516d:	89 58 70             	mov    %ebx,0x70(%eax)$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105183	obj/kern/kernel.asm	/^f0105183:	e9 b6 00 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010518d	obj/kern/kernel.asm	/^f010518d:	e9 ac 00 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f0105192	obj/kern/kernel.asm	/^f0105192:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f0105197	obj/kern/kernel.asm	/^f0105197:	e9 a2 00 00 00       	jmp    f010523e <syscall+0x70e>$/;"	l
f010519c	obj/kern/kernel.asm	/^f010519c:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01051a3	obj/kern/kernel.asm	/^f01051a3:	00 $/;"	l
f01051a4	obj/kern/kernel.asm	/^f01051a4:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01051a7	obj/kern/kernel.asm	/^f01051a7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01051ab	obj/kern/kernel.asm	/^f01051ab:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01051ae	obj/kern/kernel.asm	/^f01051ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	e8 88 e5 ff ff       	call   f010373e <envid2env>$/;"	l
f01051b6	obj/kern/kernel.asm	/^f01051b6:	89 c2                	mov    %eax,%edx$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8:	85 c0                	test   %eax,%eax$/;"	l
f01051ba	obj/kern/kernel.asm	/^f01051ba:	78 49                	js     f0105205 <syscall+0x6d5>$/;"	l
f01051bc	obj/kern/kernel.asm	/^f01051bc:	e8 28 13 00 00       	call   f01064e9 <cpunum>$/;"	l
f01051c1	obj/kern/kernel.asm	/^f01051c1:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f01051c8	obj/kern/kernel.asm	/^f01051c8:	00 $/;"	l
f01051c9	obj/kern/kernel.asm	/^f01051c9:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0:	00 $/;"	l
f01051d1	obj/kern/kernel.asm	/^f01051d1:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01051d4	obj/kern/kernel.asm	/^f01051d4:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01051db	obj/kern/kernel.asm	/^f01051db:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f01051e1	obj/kern/kernel.asm	/^f01051e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01051e4	obj/kern/kernel.asm	/^f01051e4:	e8 62 e4 ff ff       	call   f010364b <user_mem_assert>$/;"	l
f01051e9	obj/kern/kernel.asm	/^f01051e9:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01051ee	obj/kern/kernel.asm	/^f01051ee:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01051f1	obj/kern/kernel.asm	/^f01051f1:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01051f4	obj/kern/kernel.asm	/^f01051f4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01051f6	obj/kern/kernel.asm	/^f01051f6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01051f9	obj/kern/kernel.asm	/^f01051f9:	81 48 38 00 02 00 00 	orl    $0x200,0x38(%eax)$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105205	obj/kern/kernel.asm	/^f0105205:	89 d0                	mov    %edx,%eax$/;"	l
f0105207	obj/kern/kernel.asm	/^f0105207:	eb 35                	jmp    f010523e <syscall+0x70e>$/;"	l
f0105209	obj/kern/kernel.asm	/^f0105209:	e8 75 21 00 00       	call   f0107383 <time_msec>$/;"	l
f010520e	obj/kern/kernel.asm	/^f010520e:	eb 2e                	jmp    f010523e <syscall+0x70e>$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105213	obj/kern/kernel.asm	/^f0105213:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105217	obj/kern/kernel.asm	/^f0105217:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010521a	obj/kern/kernel.asm	/^f010521a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010521d	obj/kern/kernel.asm	/^f010521d:	e8 aa 19 00 00       	call   f0106bcc <transmit>$/;"	l
f0105222	obj/kern/kernel.asm	/^f0105222:	eb 1a                	jmp    f010523e <syscall+0x70e>$/;"	l
f0105224	obj/kern/kernel.asm	/^f0105224:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105227	obj/kern/kernel.asm	/^f0105227:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a:	e8 5b 1a 00 00       	call   f0106c8a <receive>$/;"	l
f010522f	obj/kern/kernel.asm	/^f010522f:	90                   	nop$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	eb 0c                	jmp    f010523e <syscall+0x70e>$/;"	l
f0105232	obj/kern/kernel.asm	/^f0105232:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105237	obj/kern/kernel.asm	/^f0105237:	eb 05                	jmp    f010523e <syscall+0x70e>$/;"	l
f0105239	obj/kern/kernel.asm	/^f0105239:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010523e	obj/kern/kernel.asm	/^f010523e:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0105241	obj/kern/kernel.asm	/^f0105241:	5b                   	pop    %ebx$/;"	l
f0105242	obj/kern/kernel.asm	/^f0105242:	5e                   	pop    %esi$/;"	l
f0105243	obj/kern/kernel.asm	/^f0105243:	5f                   	pop    %edi$/;"	l
f0105244	obj/kern/kernel.asm	/^f0105244:	5d                   	pop    %ebp$/;"	l
f0105245	obj/kern/kernel.asm	/^f0105245:	c3                   	ret    $/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246 <stab_binsearch>:$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	55                   	push   %ebp$/;"	l
f0105247	obj/kern/kernel.asm	/^f0105247:	89 e5                	mov    %esp,%ebp$/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249:	57                   	push   %edi$/;"	l
f010524a	obj/kern/kernel.asm	/^f010524a:	56                   	push   %esi$/;"	l
f010524b	obj/kern/kernel.asm	/^f010524b:	53                   	push   %ebx$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010524f	obj/kern/kernel.asm	/^f010524f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105252	obj/kern/kernel.asm	/^f0105252:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105255	obj/kern/kernel.asm	/^f0105255:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010525b	obj/kern/kernel.asm	/^f010525b:	8b 1a                	mov    (%edx),%ebx$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	8b 01                	mov    (%ecx),%eax$/;"	l
f010525f	obj/kern/kernel.asm	/^f010525f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105262	obj/kern/kernel.asm	/^f0105262:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0105269	obj/kern/kernel.asm	/^f0105269:	e9 88 00 00 00       	jmp    f01052f6 <stab_binsearch+0xb0>$/;"	l
f010526e	obj/kern/kernel.asm	/^f010526e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105271	obj/kern/kernel.asm	/^f0105271:	01 d8                	add    %ebx,%eax$/;"	l
f0105273	obj/kern/kernel.asm	/^f0105273:	89 c7                	mov    %eax,%edi$/;"	l
f0105275	obj/kern/kernel.asm	/^f0105275:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	01 c7                	add    %eax,%edi$/;"	l
f010527a	obj/kern/kernel.asm	/^f010527a:	d1 ff                	sar    %edi$/;"	d
f010527c	obj/kern/kernel.asm	/^f010527c:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f010527f	obj/kern/kernel.asm	/^f010527f:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f0105285	obj/kern/kernel.asm	/^f0105285:	89 f8                	mov    %edi,%eax$/;"	l
f0105287	obj/kern/kernel.asm	/^f0105287:	eb 03                	jmp    f010528c <stab_binsearch+0x46>$/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010528c	obj/kern/kernel.asm	/^f010528c:	39 c3                	cmp    %eax,%ebx$/;"	l
f010528e	obj/kern/kernel.asm	/^f010528e:	7f 1f                	jg     f01052af <stab_binsearch+0x69>$/;"	l
f0105290	obj/kern/kernel.asm	/^f0105290:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105294	obj/kern/kernel.asm	/^f0105294:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105297	obj/kern/kernel.asm	/^f0105297:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105299	obj/kern/kernel.asm	/^f0105299:	75 ee                	jne    f0105289 <stab_binsearch+0x43>$/;"	l
f010529b	obj/kern/kernel.asm	/^f010529b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f010529e	obj/kern/kernel.asm	/^f010529e:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01052a1	obj/kern/kernel.asm	/^f01052a1:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01052a4	obj/kern/kernel.asm	/^f01052a4:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f01052a8	obj/kern/kernel.asm	/^f01052a8:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f01052ab	obj/kern/kernel.asm	/^f01052ab:	76 18                	jbe    f01052c5 <stab_binsearch+0x7f>$/;"	l
f01052ad	obj/kern/kernel.asm	/^f01052ad:	eb 05                	jmp    f01052b4 <stab_binsearch+0x6e>$/;"	l
f01052af	obj/kern/kernel.asm	/^f01052af:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01052b2	obj/kern/kernel.asm	/^f01052b2:	eb 42                	jmp    f01052f6 <stab_binsearch+0xb0>$/;"	l
f01052b4	obj/kern/kernel.asm	/^f01052b4:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01052b7	obj/kern/kernel.asm	/^f01052b7:	89 03                	mov    %eax,(%ebx)$/;"	l
f01052b9	obj/kern/kernel.asm	/^f01052b9:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01052bc	obj/kern/kernel.asm	/^f01052bc:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01052c3	obj/kern/kernel.asm	/^f01052c3:	eb 31                	jmp    f01052f6 <stab_binsearch+0xb0>$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	73 17                	jae    f01052e1 <stab_binsearch+0x9b>$/;"	l
f01052ca	obj/kern/kernel.asm	/^f01052ca:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01052cd	obj/kern/kernel.asm	/^f01052cd:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01052d0	obj/kern/kernel.asm	/^f01052d0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01052d3	obj/kern/kernel.asm	/^f01052d3:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6:	89 07                	mov    %eax,(%edi)$/;"	l
f01052d8	obj/kern/kernel.asm	/^f01052d8:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01052df	obj/kern/kernel.asm	/^f01052df:	eb 15                	jmp    f01052f6 <stab_binsearch+0xb0>$/;"	l
f01052e1	obj/kern/kernel.asm	/^f01052e1:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01052e4	obj/kern/kernel.asm	/^f01052e4:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f01052e7	obj/kern/kernel.asm	/^f01052e7:	89 1f                	mov    %ebx,(%edi)$/;"	l
f01052e9	obj/kern/kernel.asm	/^f01052e9:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	89 c3                	mov    %eax,%ebx$/;"	l
f01052ef	obj/kern/kernel.asm	/^f01052ef:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01052f6	obj/kern/kernel.asm	/^f01052f6:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f01052f9	obj/kern/kernel.asm	/^f01052f9:	0f 8e 6f ff ff ff    	jle    f010526e <stab_binsearch+0x28>$/;"	l
f01052ff	obj/kern/kernel.asm	/^f01052ff:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0105303	obj/kern/kernel.asm	/^f0105303:	75 0f                	jne    f0105314 <stab_binsearch+0xce>$/;"	l
f0105305	obj/kern/kernel.asm	/^f0105305:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105308	obj/kern/kernel.asm	/^f0105308:	8b 00                	mov    (%eax),%eax$/;"	l
f010530a	obj/kern/kernel.asm	/^f010530a:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010530d	obj/kern/kernel.asm	/^f010530d:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0105310	obj/kern/kernel.asm	/^f0105310:	89 07                	mov    %eax,(%edi)$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	eb 2c                	jmp    f0105340 <stab_binsearch+0xfa>$/;"	l
f0105314	obj/kern/kernel.asm	/^f0105314:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105317	obj/kern/kernel.asm	/^f0105317:	8b 00                	mov    (%eax),%eax$/;"	l
f0105319	obj/kern/kernel.asm	/^f0105319:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	8b 0f                	mov    (%edi),%ecx$/;"	l
f010531e	obj/kern/kernel.asm	/^f010531e:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105321	obj/kern/kernel.asm	/^f0105321:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f0105324	obj/kern/kernel.asm	/^f0105324:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0105327	obj/kern/kernel.asm	/^f0105327:	eb 03                	jmp    f010532c <stab_binsearch+0xe6>$/;"	l
f0105329	obj/kern/kernel.asm	/^f0105329:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010532c	obj/kern/kernel.asm	/^f010532c:	39 c8                	cmp    %ecx,%eax$/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	7e 0b                	jle    f010533b <stab_binsearch+0xf5>$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105337	obj/kern/kernel.asm	/^f0105337:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105339	obj/kern/kernel.asm	/^f0105339:	75 ee                	jne    f0105329 <stab_binsearch+0xe3>$/;"	l
f010533b	obj/kern/kernel.asm	/^f010533b:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010533e	obj/kern/kernel.asm	/^f010533e:	89 07                	mov    %eax,(%edi)$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	5b                   	pop    %ebx$/;"	l
f0105344	obj/kern/kernel.asm	/^f0105344:	5e                   	pop    %esi$/;"	l
f0105345	obj/kern/kernel.asm	/^f0105345:	5f                   	pop    %edi$/;"	l
f0105346	obj/kern/kernel.asm	/^f0105346:	5d                   	pop    %ebp$/;"	l
f0105347	obj/kern/kernel.asm	/^f0105347:	c3                   	ret    $/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348 <debuginfo_eip>:$/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348:	55                   	push   %ebp$/;"	l
f0105349	obj/kern/kernel.asm	/^f0105349:	89 e5                	mov    %esp,%ebp$/;"	l
f010534b	obj/kern/kernel.asm	/^f010534b:	57                   	push   %edi$/;"	l
f010534c	obj/kern/kernel.asm	/^f010534c:	56                   	push   %esi$/;"	l
f010534d	obj/kern/kernel.asm	/^f010534d:	53                   	push   %ebx$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105351	obj/kern/kernel.asm	/^f0105351:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105354	obj/kern/kernel.asm	/^f0105354:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105357	obj/kern/kernel.asm	/^f0105357:	c7 07 e4 8d 10 f0    	movl   $0xf0108de4,(%edi)$/;"	l
f010535d	obj/kern/kernel.asm	/^f010535d:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)$/;"	l
f0105364	obj/kern/kernel.asm	/^f0105364:	c7 47 08 e4 8d 10 f0 	movl   $0xf0108de4,0x8(%edi)$/;"	l
f010536b	obj/kern/kernel.asm	/^f010536b:	c7 47 0c 09 00 00 00 	movl   $0x9,0xc(%edi)$/;"	l
f0105372	obj/kern/kernel.asm	/^f0105372:	89 77 10             	mov    %esi,0x10(%edi)$/;"	l
f0105375	obj/kern/kernel.asm	/^f0105375:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%edi)$/;"	l
f010537c	obj/kern/kernel.asm	/^f010537c:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	0f 87 ca 00 00 00    	ja     f0105452 <debuginfo_eip+0x10a>$/;"	l
f0105388	obj/kern/kernel.asm	/^f0105388:	e8 5c 11 00 00       	call   f01064e9 <cpunum>$/;"	l
f010538d	obj/kern/kernel.asm	/^f010538d:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f0105394	obj/kern/kernel.asm	/^f0105394:	00 $/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f010539c	obj/kern/kernel.asm	/^f010539c:	00 $/;"	l
f010539d	obj/kern/kernel.asm	/^f010539d:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f01053a4	obj/kern/kernel.asm	/^f01053a4:	00 $/;"	l
f01053a5	obj/kern/kernel.asm	/^f01053a5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f01053ae	obj/kern/kernel.asm	/^f01053ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01053b1	obj/kern/kernel.asm	/^f01053b1:	e8 d7 e1 ff ff       	call   f010358d <user_mem_check>$/;"	l
f01053b6	obj/kern/kernel.asm	/^f01053b6:	85 c0                	test   %eax,%eax$/;"	l
f01053b8	obj/kern/kernel.asm	/^f01053b8:	0f 88 5a 02 00 00    	js     f0105618 <debuginfo_eip+0x2d0>$/;"	l
f01053be	obj/kern/kernel.asm	/^f01053be:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f01053c3	obj/kern/kernel.asm	/^f01053c3:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f01053c6	obj/kern/kernel.asm	/^f01053c6:	8b 1d 04 00 20 00    	mov    0x200004,%ebx$/;"	l
f01053cc	obj/kern/kernel.asm	/^f01053cc:	8b 15 08 00 20 00    	mov    0x200008,%edx$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f01053d5	obj/kern/kernel.asm	/^f01053d5:	a1 0c 00 20 00       	mov    0x20000c,%eax$/;"	l
f01053da	obj/kern/kernel.asm	/^f01053da:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f01053dd	obj/kern/kernel.asm	/^f01053dd:	e8 07 11 00 00       	call   f01064e9 <cpunum>$/;"	l
f01053e2	obj/kern/kernel.asm	/^f01053e2:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	00 $/;"	l
f01053ea	obj/kern/kernel.asm	/^f01053ea:	89 da                	mov    %ebx,%edx$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f01053ef	obj/kern/kernel.asm	/^f01053ef:	29 ca                	sub    %ecx,%edx$/;"	l
f01053f1	obj/kern/kernel.asm	/^f01053f1:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01053f4	obj/kern/kernel.asm	/^f01053f4:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f01053fa	obj/kern/kernel.asm	/^f01053fa:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01053fe	obj/kern/kernel.asm	/^f01053fe:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105402	obj/kern/kernel.asm	/^f0105402:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105405	obj/kern/kernel.asm	/^f0105405:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f010540b	obj/kern/kernel.asm	/^f010540b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010540e	obj/kern/kernel.asm	/^f010540e:	e8 7a e1 ff ff       	call   f010358d <user_mem_check>$/;"	l
f0105413	obj/kern/kernel.asm	/^f0105413:	85 c0                	test   %eax,%eax$/;"	l
f0105415	obj/kern/kernel.asm	/^f0105415:	0f 88 04 02 00 00    	js     f010561f <debuginfo_eip+0x2d7>$/;"	l
f010541b	obj/kern/kernel.asm	/^f010541b:	e8 c9 10 00 00       	call   f01064e9 <cpunum>$/;"	l
f0105420	obj/kern/kernel.asm	/^f0105420:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f0105427	obj/kern/kernel.asm	/^f0105427:	00 $/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f010542e	obj/kern/kernel.asm	/^f010542e:	29 ca                	sub    %ecx,%edx$/;"	l
f0105430	obj/kern/kernel.asm	/^f0105430:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010543b	obj/kern/kernel.asm	/^f010543b:	8b 80 28 00 30 f0    	mov    -0xfcfffd8(%eax),%eax$/;"	l
f0105441	obj/kern/kernel.asm	/^f0105441:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105444	obj/kern/kernel.asm	/^f0105444:	e8 44 e1 ff ff       	call   f010358d <user_mem_check>$/;"	l
f0105449	obj/kern/kernel.asm	/^f0105449:	85 c0                	test   %eax,%eax$/;"	l
f010544b	obj/kern/kernel.asm	/^f010544b:	79 1f                	jns    f010546c <debuginfo_eip+0x124>$/;"	l
f010544d	obj/kern/kernel.asm	/^f010544d:	e9 d4 01 00 00       	jmp    f0105626 <debuginfo_eip+0x2de>$/;"	l
f0105452	obj/kern/kernel.asm	/^f0105452:	c7 45 bc 7c 96 11 f0 	movl   $0xf011967c,-0x44(%ebp)$/;"	l
f0105459	obj/kern/kernel.asm	/^f0105459:	c7 45 c0 55 53 11 f0 	movl   $0xf0115355,-0x40(%ebp)$/;"	l
f0105460	obj/kern/kernel.asm	/^f0105460:	bb 54 53 11 f0       	mov    $0xf0115354,%ebx$/;"	l
f0105465	obj/kern/kernel.asm	/^f0105465:	c7 45 c4 00 96 10 f0 	movl   $0xf0109600,-0x3c(%ebp)$/;"	l
f010546c	obj/kern/kernel.asm	/^f010546c:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	39 45 c0             	cmp    %eax,-0x40(%ebp)$/;"	l
f0105472	obj/kern/kernel.asm	/^f0105472:	0f 83 b5 01 00 00    	jae    f010562d <debuginfo_eip+0x2e5>$/;"	l
f0105478	obj/kern/kernel.asm	/^f0105478:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f010547c	obj/kern/kernel.asm	/^f010547c:	0f 85 b2 01 00 00    	jne    f0105634 <debuginfo_eip+0x2ec>$/;"	l
f0105482	obj/kern/kernel.asm	/^f0105482:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105489	obj/kern/kernel.asm	/^f0105489:	2b 5d c4             	sub    -0x3c(%ebp),%ebx$/;"	l
f010548c	obj/kern/kernel.asm	/^f010548c:	c1 fb 02             	sar    $0x2,%ebx$/;"	l
f010548f	obj/kern/kernel.asm	/^f010548f:	69 c3 ab aa aa aa    	imul   $0xaaaaaaab,%ebx,%eax$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105498	obj/kern/kernel.asm	/^f0105498:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010549b	obj/kern/kernel.asm	/^f010549b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010549f	obj/kern/kernel.asm	/^f010549f:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f01054a6	obj/kern/kernel.asm	/^f01054a6:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f01054a9	obj/kern/kernel.asm	/^f01054a9:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f01054ac	obj/kern/kernel.asm	/^f01054ac:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f01054af	obj/kern/kernel.asm	/^f01054af:	89 d8                	mov    %ebx,%eax$/;"	l
f01054b1	obj/kern/kernel.asm	/^f01054b1:	e8 90 fd ff ff       	call   f0105246 <stab_binsearch>$/;"	l
f01054b6	obj/kern/kernel.asm	/^f01054b6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01054b9	obj/kern/kernel.asm	/^f01054b9:	85 c0                	test   %eax,%eax$/;"	l
f01054bb	obj/kern/kernel.asm	/^f01054bb:	0f 84 7a 01 00 00    	je     f010563b <debuginfo_eip+0x2f3>$/;"	l
f01054c1	obj/kern/kernel.asm	/^f01054c1:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01054c7	obj/kern/kernel.asm	/^f01054c7:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01054ca	obj/kern/kernel.asm	/^f01054ca:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01054ce	obj/kern/kernel.asm	/^f01054ce:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f01054d5	obj/kern/kernel.asm	/^f01054d5:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f01054db	obj/kern/kernel.asm	/^f01054db:	89 d8                	mov    %ebx,%eax$/;"	l
f01054dd	obj/kern/kernel.asm	/^f01054dd:	e8 64 fd ff ff       	call   f0105246 <stab_binsearch>$/;"	l
f01054e2	obj/kern/kernel.asm	/^f01054e2:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01054e5	obj/kern/kernel.asm	/^f01054e5:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f01054e8	obj/kern/kernel.asm	/^f01054e8:	39 d8                	cmp    %ebx,%eax$/;"	l
f01054ea	obj/kern/kernel.asm	/^f01054ea:	7f 32                	jg     f010551e <debuginfo_eip+0x1d6>$/;"	l
f01054ec	obj/kern/kernel.asm	/^f01054ec:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01054ef	obj/kern/kernel.asm	/^f01054ef:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f01054f2	obj/kern/kernel.asm	/^f01054f2:	8d 14 91             	lea    (%ecx,%edx,4),%edx$/;"	l
f01054f5	obj/kern/kernel.asm	/^f01054f5:	8b 0a                	mov    (%edx),%ecx$/;"	l
f01054f7	obj/kern/kernel.asm	/^f01054f7:	89 4d b8             	mov    %ecx,-0x48(%ebp)$/;"	l
f01054fa	obj/kern/kernel.asm	/^f01054fa:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	2b 4d c0             	sub    -0x40(%ebp),%ecx$/;"	l
f0105500	obj/kern/kernel.asm	/^f0105500:	39 4d b8             	cmp    %ecx,-0x48(%ebp)$/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503:	73 09                	jae    f010550e <debuginfo_eip+0x1c6>$/;"	l
f0105505	obj/kern/kernel.asm	/^f0105505:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f0105508	obj/kern/kernel.asm	/^f0105508:	03 4d c0             	add    -0x40(%ebp),%ecx$/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b:	89 4f 08             	mov    %ecx,0x8(%edi)$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
f0105511	obj/kern/kernel.asm	/^f0105511:	89 57 10             	mov    %edx,0x10(%edi)$/;"	l
f0105514	obj/kern/kernel.asm	/^f0105514:	29 d6                	sub    %edx,%esi$/;"	l
f0105516	obj/kern/kernel.asm	/^f0105516:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105519	obj/kern/kernel.asm	/^f0105519:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f010551c	obj/kern/kernel.asm	/^f010551c:	eb 0f                	jmp    f010552d <debuginfo_eip+0x1e5>$/;"	l
f010551e	obj/kern/kernel.asm	/^f010551e:	89 77 10             	mov    %esi,0x10(%edi)$/;"	l
f0105521	obj/kern/kernel.asm	/^f0105521:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105524	obj/kern/kernel.asm	/^f0105524:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105527	obj/kern/kernel.asm	/^f0105527:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010552d	obj/kern/kernel.asm	/^f010552d:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0105534	obj/kern/kernel.asm	/^f0105534:	00 $/;"	l
f0105535	obj/kern/kernel.asm	/^f0105535:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0105538	obj/kern/kernel.asm	/^f0105538:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010553b	obj/kern/kernel.asm	/^f010553b:	e8 3b 09 00 00       	call   f0105e7b <strfind>$/;"	l
f0105540	obj/kern/kernel.asm	/^f0105540:	2b 47 08             	sub    0x8(%edi),%eax$/;"	l
f0105543	obj/kern/kernel.asm	/^f0105543:	89 47 0c             	mov    %eax,0xc(%edi)$/;"	l
f0105546	obj/kern/kernel.asm	/^f0105546:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010554a	obj/kern/kernel.asm	/^f010554a:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f0105551	obj/kern/kernel.asm	/^f0105551:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0105554	obj/kern/kernel.asm	/^f0105554:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0105557	obj/kern/kernel.asm	/^f0105557:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f010555a	obj/kern/kernel.asm	/^f010555a:	89 f0                	mov    %esi,%eax$/;"	l
f010555c	obj/kern/kernel.asm	/^f010555c:	e8 e5 fc ff ff       	call   f0105246 <stab_binsearch>$/;"	l
f0105561	obj/kern/kernel.asm	/^f0105561:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0105564	obj/kern/kernel.asm	/^f0105564:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0105567	obj/kern/kernel.asm	/^f0105567:	0f 8f d5 00 00 00    	jg     f0105642 <debuginfo_eip+0x2fa>$/;"	l
f010556d	obj/kern/kernel.asm	/^f010556d:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105570	obj/kern/kernel.asm	/^f0105570:	0f b7 44 86 06       	movzwl 0x6(%esi,%eax,4),%eax$/;"	l
f0105575	obj/kern/kernel.asm	/^f0105575:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f0105578	obj/kern/kernel.asm	/^f0105578:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010557b	obj/kern/kernel.asm	/^f010557b:	89 c3                	mov    %eax,%ebx$/;"	l
f010557d	obj/kern/kernel.asm	/^f010557d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105580	obj/kern/kernel.asm	/^f0105580:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105583	obj/kern/kernel.asm	/^f0105583:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0105586	obj/kern/kernel.asm	/^f0105586:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105589	obj/kern/kernel.asm	/^f0105589:	89 df                	mov    %ebx,%edi$/;"	l
f010558b	obj/kern/kernel.asm	/^f010558b:	eb 06                	jmp    f0105593 <debuginfo_eip+0x24b>$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105593	obj/kern/kernel.asm	/^f0105593:	89 c6                	mov    %eax,%esi$/;"	l
f0105595	obj/kern/kernel.asm	/^f0105595:	39 c7                	cmp    %eax,%edi$/;"	l
f0105597	obj/kern/kernel.asm	/^f0105597:	7f 3c                	jg     f01055d5 <debuginfo_eip+0x28d>$/;"	l
f0105599	obj/kern/kernel.asm	/^f0105599:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f010559d	obj/kern/kernel.asm	/^f010559d:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f01055a0	obj/kern/kernel.asm	/^f01055a0:	75 08                	jne    f01055aa <debuginfo_eip+0x262>$/;"	l
f01055a2	obj/kern/kernel.asm	/^f01055a2:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01055a5	obj/kern/kernel.asm	/^f01055a5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01055a8	obj/kern/kernel.asm	/^f01055a8:	eb 11                	jmp    f01055bb <debuginfo_eip+0x273>$/;"	l
f01055aa	obj/kern/kernel.asm	/^f01055aa:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f01055ad	obj/kern/kernel.asm	/^f01055ad:	75 de                	jne    f010558d <debuginfo_eip+0x245>$/;"	l
f01055af	obj/kern/kernel.asm	/^f01055af:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f01055b3	obj/kern/kernel.asm	/^f01055b3:	74 d8                	je     f010558d <debuginfo_eip+0x245>$/;"	l
f01055b5	obj/kern/kernel.asm	/^f01055b5:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01055b8	obj/kern/kernel.asm	/^f01055b8:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01055bb	obj/kern/kernel.asm	/^f01055bb:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f01055be	obj/kern/kernel.asm	/^f01055be:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f01055c1	obj/kern/kernel.asm	/^f01055c1:	8b 04 86             	mov    (%esi,%eax,4),%eax$/;"	l
f01055c4	obj/kern/kernel.asm	/^f01055c4:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f01055c7	obj/kern/kernel.asm	/^f01055c7:	2b 55 c0             	sub    -0x40(%ebp),%edx$/;"	l
f01055ca	obj/kern/kernel.asm	/^f01055ca:	39 d0                	cmp    %edx,%eax$/;"	l
f01055cc	obj/kern/kernel.asm	/^f01055cc:	73 0a                	jae    f01055d8 <debuginfo_eip+0x290>$/;"	l
f01055ce	obj/kern/kernel.asm	/^f01055ce:	03 45 c0             	add    -0x40(%ebp),%eax$/;"	l
f01055d1	obj/kern/kernel.asm	/^f01055d1:	89 07                	mov    %eax,(%edi)$/;"	l
f01055d3	obj/kern/kernel.asm	/^f01055d3:	eb 03                	jmp    f01055d8 <debuginfo_eip+0x290>$/;"	l
f01055d5	obj/kern/kernel.asm	/^f01055d5:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01055db	obj/kern/kernel.asm	/^f01055db:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01055e3	obj/kern/kernel.asm	/^f01055e3:	39 da                	cmp    %ebx,%edx$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	7d 67                	jge    f010564e <debuginfo_eip+0x306>$/;"	l
f01055e7	obj/kern/kernel.asm	/^f01055e7:	83 c2 01             	add    $0x1,%edx$/;"	l
f01055ea	obj/kern/kernel.asm	/^f01055ea:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01055ed	obj/kern/kernel.asm	/^f01055ed:	89 d0                	mov    %edx,%eax$/;"	l
f01055ef	obj/kern/kernel.asm	/^f01055ef:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f01055f2	obj/kern/kernel.asm	/^f01055f2:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f01055f5	obj/kern/kernel.asm	/^f01055f5:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f01055f8	obj/kern/kernel.asm	/^f01055f8:	eb 04                	jmp    f01055fe <debuginfo_eip+0x2b6>$/;"	l
f01055fa	obj/kern/kernel.asm	/^f01055fa:	83 47 14 01          	addl   $0x1,0x14(%edi)$/;"	l
f01055fe	obj/kern/kernel.asm	/^f01055fe:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105600	obj/kern/kernel.asm	/^f0105600:	7e 47                	jle    f0105649 <debuginfo_eip+0x301>$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105606	obj/kern/kernel.asm	/^f0105606:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105609	obj/kern/kernel.asm	/^f0105609:	83 c2 0c             	add    $0xc,%edx$/;"	l
f010560c	obj/kern/kernel.asm	/^f010560c:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	74 e9                	je     f01055fa <debuginfo_eip+0x2b2>$/;"	l
f0105611	obj/kern/kernel.asm	/^f0105611:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105616	obj/kern/kernel.asm	/^f0105616:	eb 36                	jmp    f010564e <debuginfo_eip+0x306>$/;"	l
f0105618	obj/kern/kernel.asm	/^f0105618:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010561d	obj/kern/kernel.asm	/^f010561d:	eb 2f                	jmp    f010564e <debuginfo_eip+0x306>$/;"	l
f010561f	obj/kern/kernel.asm	/^f010561f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105624	obj/kern/kernel.asm	/^f0105624:	eb 28                	jmp    f010564e <debuginfo_eip+0x306>$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010562b	obj/kern/kernel.asm	/^f010562b:	eb 21                	jmp    f010564e <debuginfo_eip+0x306>$/;"	l
f010562d	obj/kern/kernel.asm	/^f010562d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105632	obj/kern/kernel.asm	/^f0105632:	eb 1a                	jmp    f010564e <debuginfo_eip+0x306>$/;"	l
f0105634	obj/kern/kernel.asm	/^f0105634:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105639	obj/kern/kernel.asm	/^f0105639:	eb 13                	jmp    f010564e <debuginfo_eip+0x306>$/;"	l
f010563b	obj/kern/kernel.asm	/^f010563b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105640	obj/kern/kernel.asm	/^f0105640:	eb 0c                	jmp    f010564e <debuginfo_eip+0x306>$/;"	l
f0105642	obj/kern/kernel.asm	/^f0105642:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647:	eb 05                	jmp    f010564e <debuginfo_eip+0x306>$/;"	l
f0105649	obj/kern/kernel.asm	/^f0105649:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010564e	obj/kern/kernel.asm	/^f010564e:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0105651	obj/kern/kernel.asm	/^f0105651:	5b                   	pop    %ebx$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	5e                   	pop    %esi$/;"	l
f0105653	obj/kern/kernel.asm	/^f0105653:	5f                   	pop    %edi$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	5d                   	pop    %ebp$/;"	l
f0105655	obj/kern/kernel.asm	/^f0105655:	c3                   	ret    $/;"	l
f0105656	obj/kern/kernel.asm	/^f0105656:	66 90                	xchg   %ax,%ax$/;"	l
f0105658	obj/kern/kernel.asm	/^f0105658:	66 90                	xchg   %ax,%ax$/;"	l
f010565a	obj/kern/kernel.asm	/^f010565a:	66 90                	xchg   %ax,%ax$/;"	l
f010565c	obj/kern/kernel.asm	/^f010565c:	66 90                	xchg   %ax,%ax$/;"	l
f010565e	obj/kern/kernel.asm	/^f010565e:	66 90                	xchg   %ax,%ax$/;"	l
f0105660	obj/kern/kernel.asm	/^f0105660 <printnum>:$/;"	l
f0105660	obj/kern/kernel.asm	/^f0105660:	55                   	push   %ebp$/;"	l
f0105661	obj/kern/kernel.asm	/^f0105661:	89 e5                	mov    %esp,%ebp$/;"	l
f0105663	obj/kern/kernel.asm	/^f0105663:	57                   	push   %edi$/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664:	56                   	push   %esi$/;"	l
f0105665	obj/kern/kernel.asm	/^f0105665:	53                   	push   %ebx$/;"	l
f0105666	obj/kern/kernel.asm	/^f0105666:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105669	obj/kern/kernel.asm	/^f0105669:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010566c	obj/kern/kernel.asm	/^f010566c:	89 d7                	mov    %edx,%edi$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105671	obj/kern/kernel.asm	/^f0105671:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105674	obj/kern/kernel.asm	/^f0105674:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105677	obj/kern/kernel.asm	/^f0105677:	89 c3                	mov    %eax,%ebx$/;"	l
f0105679	obj/kern/kernel.asm	/^f0105679:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010567c	obj/kern/kernel.asm	/^f010567c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010567f	obj/kern/kernel.asm	/^f010567f:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0105682	obj/kern/kernel.asm	/^f0105682:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105687	obj/kern/kernel.asm	/^f0105687:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010568a	obj/kern/kernel.asm	/^f010568a:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f010568d	obj/kern/kernel.asm	/^f010568d:	39 d9                	cmp    %ebx,%ecx$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	72 05                	jb     f0105696 <printnum+0x36>$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	77 69                	ja     f01056ff <printnum+0x9f>$/;"	l
f0105696	obj/kern/kernel.asm	/^f0105696:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0105699	obj/kern/kernel.asm	/^f0105699:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f010569d	obj/kern/kernel.asm	/^f010569d:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01056a0	obj/kern/kernel.asm	/^f01056a0:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01056a4	obj/kern/kernel.asm	/^f01056a4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01056a8	obj/kern/kernel.asm	/^f01056a8:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f01056b0	obj/kern/kernel.asm	/^f01056b0:	89 c3                	mov    %eax,%ebx$/;"	l
f01056b2	obj/kern/kernel.asm	/^f01056b2:	89 d6                	mov    %edx,%esi$/;"	l
f01056b4	obj/kern/kernel.asm	/^f01056b4:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01056b7	obj/kern/kernel.asm	/^f01056b7:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01056ba	obj/kern/kernel.asm	/^f01056ba:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01056be	obj/kern/kernel.asm	/^f01056be:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01056c5	obj/kern/kernel.asm	/^f01056c5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01056cb	obj/kern/kernel.asm	/^f01056cb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01056cf	obj/kern/kernel.asm	/^f01056cf:	e8 cc 1c 00 00       	call   f01073a0 <__udivdi3>$/;"	l
f01056d4	obj/kern/kernel.asm	/^f01056d4:	89 d9                	mov    %ebx,%ecx$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01056da	obj/kern/kernel.asm	/^f01056da:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01056de	obj/kern/kernel.asm	/^f01056de:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01056e1	obj/kern/kernel.asm	/^f01056e1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01056e5	obj/kern/kernel.asm	/^f01056e5:	89 fa                	mov    %edi,%edx$/;"	l
f01056e7	obj/kern/kernel.asm	/^f01056e7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01056ea	obj/kern/kernel.asm	/^f01056ea:	e8 71 ff ff ff       	call   f0105660 <printnum>$/;"	l
f01056ef	obj/kern/kernel.asm	/^f01056ef:	eb 1b                	jmp    f010570c <printnum+0xac>$/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01056f5	obj/kern/kernel.asm	/^f01056f5:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f01056f8	obj/kern/kernel.asm	/^f01056f8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01056fb	obj/kern/kernel.asm	/^f01056fb:	ff d3                	call   *%ebx$/;"	l
f01056fd	obj/kern/kernel.asm	/^f01056fd:	eb 03                	jmp    f0105702 <printnum+0xa2>$/;"	l
f01056ff	obj/kern/kernel.asm	/^f01056ff:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105702	obj/kern/kernel.asm	/^f0105702:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	85 f6                	test   %esi,%esi$/;"	l
f0105707	obj/kern/kernel.asm	/^f0105707:	7f e8                	jg     f01056f1 <printnum+0x91>$/;"	l
f0105709	obj/kern/kernel.asm	/^f0105709:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f010570c	obj/kern/kernel.asm	/^f010570c:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0105714	obj/kern/kernel.asm	/^f0105714:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105717	obj/kern/kernel.asm	/^f0105717:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010571a	obj/kern/kernel.asm	/^f010571a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010571e	obj/kern/kernel.asm	/^f010571e:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105722	obj/kern/kernel.asm	/^f0105722:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105725	obj/kern/kernel.asm	/^f0105725:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105728	obj/kern/kernel.asm	/^f0105728:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010572b	obj/kern/kernel.asm	/^f010572b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010572f	obj/kern/kernel.asm	/^f010572f:	e8 9c 1d 00 00       	call   f01074d0 <__umoddi3>$/;"	l
f0105734	obj/kern/kernel.asm	/^f0105734:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105738	obj/kern/kernel.asm	/^f0105738:	0f be 80 ee 8d 10 f0 	movsbl -0xfef7212(%eax),%eax$/;"	l
f010573f	obj/kern/kernel.asm	/^f010573f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105742	obj/kern/kernel.asm	/^f0105742:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105745	obj/kern/kernel.asm	/^f0105745:	ff d0                	call   *%eax$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f010574a	obj/kern/kernel.asm	/^f010574a:	5b                   	pop    %ebx$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	5e                   	pop    %esi$/;"	l
f010574c	obj/kern/kernel.asm	/^f010574c:	5f                   	pop    %edi$/;"	l
f010574d	obj/kern/kernel.asm	/^f010574d:	5d                   	pop    %ebp$/;"	l
f010574e	obj/kern/kernel.asm	/^f010574e:	c3                   	ret    $/;"	l
f010574f	obj/kern/kernel.asm	/^f010574f <getuint>:$/;"	l
f010574f	obj/kern/kernel.asm	/^f010574f:	55                   	push   %ebp$/;"	l
f0105750	obj/kern/kernel.asm	/^f0105750:	89 e5                	mov    %esp,%ebp$/;"	l
f0105752	obj/kern/kernel.asm	/^f0105752:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755:	7e 0e                	jle    f0105765 <getuint+0x16>$/;"	l
f0105757	obj/kern/kernel.asm	/^f0105757:	8b 10                	mov    (%eax),%edx$/;"	l
f0105759	obj/kern/kernel.asm	/^f0105759:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f010575c	obj/kern/kernel.asm	/^f010575c:	89 08                	mov    %ecx,(%eax)$/;"	l
f010575e	obj/kern/kernel.asm	/^f010575e:	8b 02                	mov    (%edx),%eax$/;"	l
f0105760	obj/kern/kernel.asm	/^f0105760:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0105763	obj/kern/kernel.asm	/^f0105763:	eb 22                	jmp    f0105787 <getuint+0x38>$/;"	l
f0105765	obj/kern/kernel.asm	/^f0105765:	85 d2                	test   %edx,%edx$/;"	l
f0105767	obj/kern/kernel.asm	/^f0105767:	74 10                	je     f0105779 <getuint+0x2a>$/;"	l
f0105769	obj/kern/kernel.asm	/^f0105769:	8b 10                	mov    (%eax),%edx$/;"	l
f010576b	obj/kern/kernel.asm	/^f010576b:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	8b 02                	mov    (%edx),%eax$/;"	l
f0105772	obj/kern/kernel.asm	/^f0105772:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	eb 0e                	jmp    f0105787 <getuint+0x38>$/;"	l
f0105779	obj/kern/kernel.asm	/^f0105779:	8b 10                	mov    (%eax),%edx$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010577e	obj/kern/kernel.asm	/^f010577e:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105780	obj/kern/kernel.asm	/^f0105780:	8b 02                	mov    (%edx),%eax$/;"	l
f0105782	obj/kern/kernel.asm	/^f0105782:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105787	obj/kern/kernel.asm	/^f0105787:	5d                   	pop    %ebp$/;"	l
f0105788	obj/kern/kernel.asm	/^f0105788:	c3                   	ret    $/;"	l
f0105789	obj/kern/kernel.asm	/^f0105789 <sprintputch>:$/;"	l
f0105789	obj/kern/kernel.asm	/^f0105789:	55                   	push   %ebp$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	89 e5                	mov    %esp,%ebp$/;"	l
f010578c	obj/kern/kernel.asm	/^f010578c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010578f	obj/kern/kernel.asm	/^f010578f:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0105793	obj/kern/kernel.asm	/^f0105793:	8b 10                	mov    (%eax),%edx$/;"	l
f0105795	obj/kern/kernel.asm	/^f0105795:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105798	obj/kern/kernel.asm	/^f0105798:	73 0a                	jae    f01057a4 <sprintputch+0x1b>$/;"	l
f010579a	obj/kern/kernel.asm	/^f010579a:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f010579d	obj/kern/kernel.asm	/^f010579d:	89 08                	mov    %ecx,(%eax)$/;"	l
f010579f	obj/kern/kernel.asm	/^f010579f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01057a2	obj/kern/kernel.asm	/^f01057a2:	88 02                	mov    %al,(%edx)$/;"	l
f01057a4	obj/kern/kernel.asm	/^f01057a4:	5d                   	pop    %ebp$/;"	l
f01057a5	obj/kern/kernel.asm	/^f01057a5:	c3                   	ret    $/;"	l
f01057a6	obj/kern/kernel.asm	/^f01057a6 <printfmt>:$/;"	l
f01057a6	obj/kern/kernel.asm	/^f01057a6:	55                   	push   %ebp$/;"	l
f01057a7	obj/kern/kernel.asm	/^f01057a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01057a9	obj/kern/kernel.asm	/^f01057a9:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01057ac	obj/kern/kernel.asm	/^f01057ac:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01057af	obj/kern/kernel.asm	/^f01057af:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01057b3	obj/kern/kernel.asm	/^f01057b3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01057b6	obj/kern/kernel.asm	/^f01057b6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01057ba	obj/kern/kernel.asm	/^f01057ba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01057bd	obj/kern/kernel.asm	/^f01057bd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01057c1	obj/kern/kernel.asm	/^f01057c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01057c4	obj/kern/kernel.asm	/^f01057c4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	e8 02 00 00 00       	call   f01057ce <vprintfmt>$/;"	l
f01057cc	obj/kern/kernel.asm	/^f01057cc:	c9                   	leave  $/;"	l
f01057cd	obj/kern/kernel.asm	/^f01057cd:	c3                   	ret    $/;"	l
f01057ce	obj/kern/kernel.asm	/^f01057ce <vprintfmt>:$/;"	l
f01057ce	obj/kern/kernel.asm	/^f01057ce:	55                   	push   %ebp$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01057d1	obj/kern/kernel.asm	/^f01057d1:	57                   	push   %edi$/;"	l
f01057d2	obj/kern/kernel.asm	/^f01057d2:	56                   	push   %esi$/;"	l
f01057d3	obj/kern/kernel.asm	/^f01057d3:	53                   	push   %ebx$/;"	l
f01057d4	obj/kern/kernel.asm	/^f01057d4:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01057d7	obj/kern/kernel.asm	/^f01057d7:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01057da	obj/kern/kernel.asm	/^f01057da:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01057dd	obj/kern/kernel.asm	/^f01057dd:	eb 14                	jmp    f01057f3 <vprintfmt+0x25>$/;"	l
f01057df	obj/kern/kernel.asm	/^f01057df:	85 c0                	test   %eax,%eax$/;"	l
f01057e1	obj/kern/kernel.asm	/^f01057e1:	0f 84 b3 03 00 00    	je     f0105b9a <vprintfmt+0x3cc>$/;"	l
f01057e7	obj/kern/kernel.asm	/^f01057e7:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01057eb	obj/kern/kernel.asm	/^f01057eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01057ee	obj/kern/kernel.asm	/^f01057ee:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01057f1	obj/kern/kernel.asm	/^f01057f1:	89 f3                	mov    %esi,%ebx$/;"	l
f01057f3	obj/kern/kernel.asm	/^f01057f3:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f01057f6	obj/kern/kernel.asm	/^f01057f6:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01057f9	obj/kern/kernel.asm	/^f01057f9:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f01057fc	obj/kern/kernel.asm	/^f01057fc:	75 e1                	jne    f01057df <vprintfmt+0x11>$/;"	l
f01057fe	obj/kern/kernel.asm	/^f01057fe:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f0105802	obj/kern/kernel.asm	/^f0105802:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105809	obj/kern/kernel.asm	/^f0105809:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%ebp)$/;"	l
f0105817	obj/kern/kernel.asm	/^f0105817:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010581c	obj/kern/kernel.asm	/^f010581c:	eb 1d                	jmp    f010583b <vprintfmt+0x6d>$/;"	l
f010581e	obj/kern/kernel.asm	/^f010581e:	89 de                	mov    %ebx,%esi$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0105824	obj/kern/kernel.asm	/^f0105824:	eb 15                	jmp    f010583b <vprintfmt+0x6d>$/;"	l
f0105826	obj/kern/kernel.asm	/^f0105826:	89 de                	mov    %ebx,%esi$/;"	l
f0105828	obj/kern/kernel.asm	/^f0105828:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f010582c	obj/kern/kernel.asm	/^f010582c:	eb 0d                	jmp    f010583b <vprintfmt+0x6d>$/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105831	obj/kern/kernel.asm	/^f0105831:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105834	obj/kern/kernel.asm	/^f0105834:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f010583b	obj/kern/kernel.asm	/^f010583b:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f010583e	obj/kern/kernel.asm	/^f010583e:	0f b6 0e             	movzbl (%esi),%ecx$/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0105844	obj/kern/kernel.asm	/^f0105844:	83 e9 23             	sub    $0x23,%ecx$/;"	l
f0105847	obj/kern/kernel.asm	/^f0105847:	80 f9 55             	cmp    $0x55,%cl$/;"	l
f010584a	obj/kern/kernel.asm	/^f010584a:	0f 87 2a 03 00 00    	ja     f0105b7a <vprintfmt+0x3ac>$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f0105853	obj/kern/kernel.asm	/^f0105853:	ff 24 8d 40 8f 10 f0 	jmp    *-0xfef70c0(,%ecx,4)$/;"	l
f010585a	obj/kern/kernel.asm	/^f010585a:	89 de                	mov    %ebx,%esi$/;"	l
f010585c	obj/kern/kernel.asm	/^f010585c:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105861	obj/kern/kernel.asm	/^f0105861:	8d 0c 89             	lea    (%ecx,%ecx,4),%ecx$/;"	l
f0105864	obj/kern/kernel.asm	/^f0105864:	8d 4c 48 d0          	lea    -0x30(%eax,%ecx,2),%ecx$/;"	l
f0105868	obj/kern/kernel.asm	/^f0105868:	0f be 06             	movsbl (%esi),%eax$/;"	l
f010586b	obj/kern/kernel.asm	/^f010586b:	8d 58 d0             	lea    -0x30(%eax),%ebx$/;"	l
f010586e	obj/kern/kernel.asm	/^f010586e:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0105871	obj/kern/kernel.asm	/^f0105871:	77 36                	ja     f01058a9 <vprintfmt+0xdb>$/;"	l
f0105873	obj/kern/kernel.asm	/^f0105873:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105876	obj/kern/kernel.asm	/^f0105876:	eb e9                	jmp    f0105861 <vprintfmt+0x93>$/;"	l
f0105878	obj/kern/kernel.asm	/^f0105878:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010587b	obj/kern/kernel.asm	/^f010587b:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0105881	obj/kern/kernel.asm	/^f0105881:	8b 00                	mov    (%eax),%eax$/;"	l
f0105883	obj/kern/kernel.asm	/^f0105883:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105886	obj/kern/kernel.asm	/^f0105886:	89 de                	mov    %ebx,%esi$/;"	l
f0105888	obj/kern/kernel.asm	/^f0105888:	eb 22                	jmp    f01058ac <vprintfmt+0xde>$/;"	l
f010588a	obj/kern/kernel.asm	/^f010588a:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f010588d	obj/kern/kernel.asm	/^f010588d:	85 c9                	test   %ecx,%ecx$/;"	l
f010588f	obj/kern/kernel.asm	/^f010588f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105894	obj/kern/kernel.asm	/^f0105894:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0105897	obj/kern/kernel.asm	/^f0105897:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010589a	obj/kern/kernel.asm	/^f010589a:	89 de                	mov    %ebx,%esi$/;"	l
f010589c	obj/kern/kernel.asm	/^f010589c:	eb 9d                	jmp    f010583b <vprintfmt+0x6d>$/;"	l
f010589e	obj/kern/kernel.asm	/^f010589e:	89 de                	mov    %ebx,%esi$/;"	l
f01058a0	obj/kern/kernel.asm	/^f01058a0:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f01058a7	obj/kern/kernel.asm	/^f01058a7:	eb 92                	jmp    f010583b <vprintfmt+0x6d>$/;"	l
f01058a9	obj/kern/kernel.asm	/^f01058a9:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f01058ac	obj/kern/kernel.asm	/^f01058ac:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0:	79 89                	jns    f010583b <vprintfmt+0x6d>$/;"	l
f01058b2	obj/kern/kernel.asm	/^f01058b2:	e9 77 ff ff ff       	jmp    f010582e <vprintfmt+0x60>$/;"	l
f01058b7	obj/kern/kernel.asm	/^f01058b7:	83 c2 01             	add    $0x1,%edx$/;"	l
f01058ba	obj/kern/kernel.asm	/^f01058ba:	89 de                	mov    %ebx,%esi$/;"	l
f01058bc	obj/kern/kernel.asm	/^f01058bc:	e9 7a ff ff ff       	jmp    f010583b <vprintfmt+0x6d>$/;"	l
f01058c1	obj/kern/kernel.asm	/^f01058c1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01058ca	obj/kern/kernel.asm	/^f01058ca:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01058ce	obj/kern/kernel.asm	/^f01058ce:	8b 00                	mov    (%eax),%eax$/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01058d3	obj/kern/kernel.asm	/^f01058d3:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01058d6	obj/kern/kernel.asm	/^f01058d6:	e9 18 ff ff ff       	jmp    f01057f3 <vprintfmt+0x25>$/;"	l
f01058db	obj/kern/kernel.asm	/^f01058db:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01058de	obj/kern/kernel.asm	/^f01058de:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01058e1	obj/kern/kernel.asm	/^f01058e1:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01058e4	obj/kern/kernel.asm	/^f01058e4:	8b 00                	mov    (%eax),%eax$/;"	l
f01058e6	obj/kern/kernel.asm	/^f01058e6:	99                   	cltd   $/;"	l
f01058e7	obj/kern/kernel.asm	/^f01058e7:	31 d0                	xor    %edx,%eax$/;"	l
f01058e9	obj/kern/kernel.asm	/^f01058e9:	29 d0                	sub    %edx,%eax$/;"	l
f01058eb	obj/kern/kernel.asm	/^f01058eb:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f01058ee	obj/kern/kernel.asm	/^f01058ee:	7f 0b                	jg     f01058fb <vprintfmt+0x12d>$/;"	l
f01058f0	obj/kern/kernel.asm	/^f01058f0:	8b 14 85 a0 90 10 f0 	mov    -0xfef6f60(,%eax,4),%edx$/;"	l
f01058f7	obj/kern/kernel.asm	/^f01058f7:	85 d2                	test   %edx,%edx$/;"	l
f01058f9	obj/kern/kernel.asm	/^f01058f9:	75 20                	jne    f010591b <vprintfmt+0x14d>$/;"	l
f01058fb	obj/kern/kernel.asm	/^f01058fb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01058ff	obj/kern/kernel.asm	/^f01058ff:	c7 44 24 08 06 8e 10 	movl   $0xf0108e06,0x8(%esp)$/;"	l
f0105906	obj/kern/kernel.asm	/^f0105906:	f0 $/;"	l
f0105907	obj/kern/kernel.asm	/^f0105907:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010590b	obj/kern/kernel.asm	/^f010590b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010590e	obj/kern/kernel.asm	/^f010590e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105911	obj/kern/kernel.asm	/^f0105911:	e8 90 fe ff ff       	call   f01057a6 <printfmt>$/;"	l
f0105916	obj/kern/kernel.asm	/^f0105916:	e9 d8 fe ff ff       	jmp    f01057f3 <vprintfmt+0x25>$/;"	l
f010591b	obj/kern/kernel.asm	/^f010591b:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010591f	obj/kern/kernel.asm	/^f010591f:	c7 44 24 08 f3 85 10 	movl   $0xf01085f3,0x8(%esp)$/;"	l
f0105926	obj/kern/kernel.asm	/^f0105926:	f0 $/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010592b	obj/kern/kernel.asm	/^f010592b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010592e	obj/kern/kernel.asm	/^f010592e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	e8 70 fe ff ff       	call   f01057a6 <printfmt>$/;"	l
f0105936	obj/kern/kernel.asm	/^f0105936:	e9 b8 fe ff ff       	jmp    f01057f3 <vprintfmt+0x25>$/;"	l
f010593b	obj/kern/kernel.asm	/^f010593b:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f010593e	obj/kern/kernel.asm	/^f010593e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105941	obj/kern/kernel.asm	/^f0105941:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105947	obj/kern/kernel.asm	/^f0105947:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010594a	obj/kern/kernel.asm	/^f010594a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010594d	obj/kern/kernel.asm	/^f010594d:	8b 30                	mov    (%eax),%esi$/;"	l
f010594f	obj/kern/kernel.asm	/^f010594f:	85 f6                	test   %esi,%esi$/;"	l
f0105951	obj/kern/kernel.asm	/^f0105951:	b8 ff 8d 10 f0       	mov    $0xf0108dff,%eax$/;"	l
f0105956	obj/kern/kernel.asm	/^f0105956:	0f 44 f0             	cmove  %eax,%esi$/;"	l
f0105959	obj/kern/kernel.asm	/^f0105959:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f010595d	obj/kern/kernel.asm	/^f010595d:	0f 84 97 00 00 00    	je     f01059fa <vprintfmt+0x22c>$/;"	l
f0105963	obj/kern/kernel.asm	/^f0105963:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f0105967	obj/kern/kernel.asm	/^f0105967:	0f 8e 9b 00 00 00    	jle    f0105a08 <vprintfmt+0x23a>$/;"	l
f010596d	obj/kern/kernel.asm	/^f010596d:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105971	obj/kern/kernel.asm	/^f0105971:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105974	obj/kern/kernel.asm	/^f0105974:	e8 af 03 00 00       	call   f0105d28 <strnlen>$/;"	l
f0105979	obj/kern/kernel.asm	/^f0105979:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f010597c	obj/kern/kernel.asm	/^f010597c:	29 c2                	sub    %eax,%edx$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0105981	obj/kern/kernel.asm	/^f0105981:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f0105985	obj/kern/kernel.asm	/^f0105985:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f010598b	obj/kern/kernel.asm	/^f010598b:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010598e	obj/kern/kernel.asm	/^f010598e:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105991	obj/kern/kernel.asm	/^f0105991:	89 d3                	mov    %edx,%ebx$/;"	l
f0105993	obj/kern/kernel.asm	/^f0105993:	eb 0f                	jmp    f01059a4 <vprintfmt+0x1d6>$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105999	obj/kern/kernel.asm	/^f0105999:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010599c	obj/kern/kernel.asm	/^f010599c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	ff d6                	call   *%esi$/;"	l
f01059a1	obj/kern/kernel.asm	/^f01059a1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01059a4	obj/kern/kernel.asm	/^f01059a4:	85 db                	test   %ebx,%ebx$/;"	l
f01059a6	obj/kern/kernel.asm	/^f01059a6:	7f ed                	jg     f0105995 <vprintfmt+0x1c7>$/;"	l
f01059a8	obj/kern/kernel.asm	/^f01059a8:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f01059ab	obj/kern/kernel.asm	/^f01059ab:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01059ae	obj/kern/kernel.asm	/^f01059ae:	85 d2                	test   %edx,%edx$/;"	l
f01059b0	obj/kern/kernel.asm	/^f01059b0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01059b5	obj/kern/kernel.asm	/^f01059b5:	0f 49 c2             	cmovns %edx,%eax$/;"	l
f01059b8	obj/kern/kernel.asm	/^f01059b8:	29 c2                	sub    %eax,%edx$/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f01059bd	obj/kern/kernel.asm	/^f01059bd:	89 d7                	mov    %edx,%edi$/;"	l
f01059bf	obj/kern/kernel.asm	/^f01059bf:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01059c2	obj/kern/kernel.asm	/^f01059c2:	eb 50                	jmp    f0105a14 <vprintfmt+0x246>$/;"	l
f01059c4	obj/kern/kernel.asm	/^f01059c4:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01059c8	obj/kern/kernel.asm	/^f01059c8:	74 1e                	je     f01059e8 <vprintfmt+0x21a>$/;"	l
f01059ca	obj/kern/kernel.asm	/^f01059ca:	0f be d2             	movsbl %dl,%edx$/;"	l
f01059cd	obj/kern/kernel.asm	/^f01059cd:	83 ea 20             	sub    $0x20,%edx$/;"	l
f01059d0	obj/kern/kernel.asm	/^f01059d0:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f01059d3	obj/kern/kernel.asm	/^f01059d3:	76 13                	jbe    f01059e8 <vprintfmt+0x21a>$/;"	l
f01059d5	obj/kern/kernel.asm	/^f01059d5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01059dc	obj/kern/kernel.asm	/^f01059dc:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f01059e3	obj/kern/kernel.asm	/^f01059e3:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01059e6	obj/kern/kernel.asm	/^f01059e6:	eb 0d                	jmp    f01059f5 <vprintfmt+0x227>$/;"	l
f01059e8	obj/kern/kernel.asm	/^f01059e8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01059eb	obj/kern/kernel.asm	/^f01059eb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01059ef	obj/kern/kernel.asm	/^f01059ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01059f2	obj/kern/kernel.asm	/^f01059f2:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01059f5	obj/kern/kernel.asm	/^f01059f5:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01059f8	obj/kern/kernel.asm	/^f01059f8:	eb 1a                	jmp    f0105a14 <vprintfmt+0x246>$/;"	l
f01059fa	obj/kern/kernel.asm	/^f01059fa:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f01059fd	obj/kern/kernel.asm	/^f01059fd:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105a03	obj/kern/kernel.asm	/^f0105a03:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105a06	obj/kern/kernel.asm	/^f0105a06:	eb 0c                	jmp    f0105a14 <vprintfmt+0x246>$/;"	l
f0105a08	obj/kern/kernel.asm	/^f0105a08:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105a0b	obj/kern/kernel.asm	/^f0105a0b:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105a0e	obj/kern/kernel.asm	/^f0105a0e:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105a11	obj/kern/kernel.asm	/^f0105a11:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105a14	obj/kern/kernel.asm	/^f0105a14:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105a17	obj/kern/kernel.asm	/^f0105a17:	0f b6 56 ff          	movzbl -0x1(%esi),%edx$/;"	l
f0105a1b	obj/kern/kernel.asm	/^f0105a1b:	0f be c2             	movsbl %dl,%eax$/;"	l
f0105a1e	obj/kern/kernel.asm	/^f0105a1e:	85 c0                	test   %eax,%eax$/;"	l
f0105a20	obj/kern/kernel.asm	/^f0105a20:	74 27                	je     f0105a49 <vprintfmt+0x27b>$/;"	l
f0105a22	obj/kern/kernel.asm	/^f0105a22:	85 db                	test   %ebx,%ebx$/;"	l
f0105a24	obj/kern/kernel.asm	/^f0105a24:	78 9e                	js     f01059c4 <vprintfmt+0x1f6>$/;"	l
f0105a26	obj/kern/kernel.asm	/^f0105a26:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105a29	obj/kern/kernel.asm	/^f0105a29:	79 99                	jns    f01059c4 <vprintfmt+0x1f6>$/;"	l
f0105a2b	obj/kern/kernel.asm	/^f0105a2b:	89 f8                	mov    %edi,%eax$/;"	l
f0105a2d	obj/kern/kernel.asm	/^f0105a2d:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105a30	obj/kern/kernel.asm	/^f0105a30:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105a33	obj/kern/kernel.asm	/^f0105a33:	89 c3                	mov    %eax,%ebx$/;"	l
f0105a35	obj/kern/kernel.asm	/^f0105a35:	eb 1a                	jmp    f0105a51 <vprintfmt+0x283>$/;"	l
f0105a37	obj/kern/kernel.asm	/^f0105a37:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105a3b	obj/kern/kernel.asm	/^f0105a3b:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0105a42	obj/kern/kernel.asm	/^f0105a42:	ff d6                	call   *%esi$/;"	l
f0105a44	obj/kern/kernel.asm	/^f0105a44:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	eb 08                	jmp    f0105a51 <vprintfmt+0x283>$/;"	l
f0105a49	obj/kern/kernel.asm	/^f0105a49:	89 fb                	mov    %edi,%ebx$/;"	l
f0105a4b	obj/kern/kernel.asm	/^f0105a4b:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105a4e	obj/kern/kernel.asm	/^f0105a4e:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105a51	obj/kern/kernel.asm	/^f0105a51:	85 db                	test   %ebx,%ebx$/;"	l
f0105a53	obj/kern/kernel.asm	/^f0105a53:	7f e2                	jg     f0105a37 <vprintfmt+0x269>$/;"	l
f0105a55	obj/kern/kernel.asm	/^f0105a55:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0105a58	obj/kern/kernel.asm	/^f0105a58:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105a5b	obj/kern/kernel.asm	/^f0105a5b:	e9 93 fd ff ff       	jmp    f01057f3 <vprintfmt+0x25>$/;"	l
f0105a60	obj/kern/kernel.asm	/^f0105a60:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	7e 16                	jle    f0105a7b <vprintfmt+0x2ad>$/;"	l
f0105a65	obj/kern/kernel.asm	/^f0105a65:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105a68	obj/kern/kernel.asm	/^f0105a68:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0105a6b	obj/kern/kernel.asm	/^f0105a6b:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105a6e	obj/kern/kernel.asm	/^f0105a6e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0105a71	obj/kern/kernel.asm	/^f0105a71:	8b 00                	mov    (%eax),%eax$/;"	l
f0105a73	obj/kern/kernel.asm	/^f0105a73:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105a76	obj/kern/kernel.asm	/^f0105a76:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	eb 32                	jmp    f0105aad <vprintfmt+0x2df>$/;"	l
f0105a7b	obj/kern/kernel.asm	/^f0105a7b:	85 d2                	test   %edx,%edx$/;"	l
f0105a7d	obj/kern/kernel.asm	/^f0105a7d:	74 18                	je     f0105a97 <vprintfmt+0x2c9>$/;"	l
f0105a7f	obj/kern/kernel.asm	/^f0105a7f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105a82	obj/kern/kernel.asm	/^f0105a82:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105a85	obj/kern/kernel.asm	/^f0105a85:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105a88	obj/kern/kernel.asm	/^f0105a88:	8b 30                	mov    (%eax),%esi$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0105a8d	obj/kern/kernel.asm	/^f0105a8d:	89 f0                	mov    %esi,%eax$/;"	l
f0105a8f	obj/kern/kernel.asm	/^f0105a8f:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105a92	obj/kern/kernel.asm	/^f0105a92:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105a95	obj/kern/kernel.asm	/^f0105a95:	eb 16                	jmp    f0105aad <vprintfmt+0x2df>$/;"	l
f0105a97	obj/kern/kernel.asm	/^f0105a97:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105a9a	obj/kern/kernel.asm	/^f0105a9a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105a9d	obj/kern/kernel.asm	/^f0105a9d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105aa0	obj/kern/kernel.asm	/^f0105aa0:	8b 30                	mov    (%eax),%esi$/;"	l
f0105aa2	obj/kern/kernel.asm	/^f0105aa2:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0105aa5	obj/kern/kernel.asm	/^f0105aa5:	89 f0                	mov    %esi,%eax$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105aaa	obj/kern/kernel.asm	/^f0105aaa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105aad	obj/kern/kernel.asm	/^f0105aad:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105ab0	obj/kern/kernel.asm	/^f0105ab0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0105ab8	obj/kern/kernel.asm	/^f0105ab8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105abc	obj/kern/kernel.asm	/^f0105abc:	0f 89 80 00 00 00    	jns    f0105b42 <vprintfmt+0x374>$/;"	l
f0105ac2	obj/kern/kernel.asm	/^f0105ac2:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105ac6	obj/kern/kernel.asm	/^f0105ac6:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0105acd	obj/kern/kernel.asm	/^f0105acd:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105ad0	obj/kern/kernel.asm	/^f0105ad0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105ad3	obj/kern/kernel.asm	/^f0105ad3:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105ad6	obj/kern/kernel.asm	/^f0105ad6:	f7 d8                	neg    %eax$/;"	l
f0105ad8	obj/kern/kernel.asm	/^f0105ad8:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0105adb	obj/kern/kernel.asm	/^f0105adb:	f7 da                	neg    %edx$/;"	l
f0105add	obj/kern/kernel.asm	/^f0105add:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	eb 5e                	jmp    f0105b42 <vprintfmt+0x374>$/;"	l
f0105ae4	obj/kern/kernel.asm	/^f0105ae4:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105ae7	obj/kern/kernel.asm	/^f0105ae7:	e8 63 fc ff ff       	call   f010574f <getuint>$/;"	l
f0105aec	obj/kern/kernel.asm	/^f0105aec:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0105af1	obj/kern/kernel.asm	/^f0105af1:	eb 4f                	jmp    f0105b42 <vprintfmt+0x374>$/;"	l
f0105af3	obj/kern/kernel.asm	/^f0105af3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105af6	obj/kern/kernel.asm	/^f0105af6:	e8 54 fc ff ff       	call   f010574f <getuint>$/;"	l
f0105afb	obj/kern/kernel.asm	/^f0105afb:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0105b00	obj/kern/kernel.asm	/^f0105b00:	eb 40                	jmp    f0105b42 <vprintfmt+0x374>$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105b06	obj/kern/kernel.asm	/^f0105b06:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0105b0d	obj/kern/kernel.asm	/^f0105b0d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105b10	obj/kern/kernel.asm	/^f0105b10:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105b14	obj/kern/kernel.asm	/^f0105b14:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f0105b1b	obj/kern/kernel.asm	/^f0105b1b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105b1e	obj/kern/kernel.asm	/^f0105b1e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105b21	obj/kern/kernel.asm	/^f0105b21:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105b24	obj/kern/kernel.asm	/^f0105b24:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105b27	obj/kern/kernel.asm	/^f0105b27:	8b 00                	mov    (%eax),%eax$/;"	l
f0105b29	obj/kern/kernel.asm	/^f0105b29:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105b2e	obj/kern/kernel.asm	/^f0105b2e:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0105b33	obj/kern/kernel.asm	/^f0105b33:	eb 0d                	jmp    f0105b42 <vprintfmt+0x374>$/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105b38	obj/kern/kernel.asm	/^f0105b38:	e8 12 fc ff ff       	call   f010574f <getuint>$/;"	l
f0105b3d	obj/kern/kernel.asm	/^f0105b3d:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0105b42	obj/kern/kernel.asm	/^f0105b42:	0f be 75 d8          	movsbl -0x28(%ebp),%esi$/;"	l
f0105b46	obj/kern/kernel.asm	/^f0105b46:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0105b4a	obj/kern/kernel.asm	/^f0105b4a:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f0105b4d	obj/kern/kernel.asm	/^f0105b4d:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105b55	obj/kern/kernel.asm	/^f0105b55:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b58	obj/kern/kernel.asm	/^f0105b58:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105b5c	obj/kern/kernel.asm	/^f0105b5c:	89 fa                	mov    %edi,%edx$/;"	l
f0105b5e	obj/kern/kernel.asm	/^f0105b5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105b61	obj/kern/kernel.asm	/^f0105b61:	e8 fa fa ff ff       	call   f0105660 <printnum>$/;"	l
f0105b66	obj/kern/kernel.asm	/^f0105b66:	e9 88 fc ff ff       	jmp    f01057f3 <vprintfmt+0x25>$/;"	l
f0105b6b	obj/kern/kernel.asm	/^f0105b6b:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105b6f	obj/kern/kernel.asm	/^f0105b6f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b72	obj/kern/kernel.asm	/^f0105b72:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105b75	obj/kern/kernel.asm	/^f0105b75:	e9 79 fc ff ff       	jmp    f01057f3 <vprintfmt+0x25>$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105b7e	obj/kern/kernel.asm	/^f0105b7e:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0105b85	obj/kern/kernel.asm	/^f0105b85:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105b88	obj/kern/kernel.asm	/^f0105b88:	89 f3                	mov    %esi,%ebx$/;"	l
f0105b8a	obj/kern/kernel.asm	/^f0105b8a:	eb 03                	jmp    f0105b8f <vprintfmt+0x3c1>$/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105b8f	obj/kern/kernel.asm	/^f0105b8f:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f0105b93	obj/kern/kernel.asm	/^f0105b93:	75 f7                	jne    f0105b8c <vprintfmt+0x3be>$/;"	l
f0105b95	obj/kern/kernel.asm	/^f0105b95:	e9 59 fc ff ff       	jmp    f01057f3 <vprintfmt+0x25>$/;"	l
f0105b9a	obj/kern/kernel.asm	/^f0105b9a:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0105b9d	obj/kern/kernel.asm	/^f0105b9d:	5b                   	pop    %ebx$/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e:	5e                   	pop    %esi$/;"	l
f0105b9f	obj/kern/kernel.asm	/^f0105b9f:	5f                   	pop    %edi$/;"	l
f0105ba0	obj/kern/kernel.asm	/^f0105ba0:	5d                   	pop    %ebp$/;"	l
f0105ba1	obj/kern/kernel.asm	/^f0105ba1:	c3                   	ret    $/;"	l
f0105ba2	obj/kern/kernel.asm	/^f0105ba2 <vsnprintf>:$/;"	l
f0105ba2	obj/kern/kernel.asm	/^f0105ba2:	55                   	push   %ebp$/;"	l
f0105ba3	obj/kern/kernel.asm	/^f0105ba3:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ba5	obj/kern/kernel.asm	/^f0105ba5:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105bab	obj/kern/kernel.asm	/^f0105bab:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105bae	obj/kern/kernel.asm	/^f0105bae:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105bb1	obj/kern/kernel.asm	/^f0105bb1:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0105bb8	obj/kern/kernel.asm	/^f0105bb8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105bbf	obj/kern/kernel.asm	/^f0105bbf:	85 c0                	test   %eax,%eax$/;"	l
f0105bc1	obj/kern/kernel.asm	/^f0105bc1:	74 30                	je     f0105bf3 <vsnprintf+0x51>$/;"	l
f0105bc3	obj/kern/kernel.asm	/^f0105bc3:	85 d2                	test   %edx,%edx$/;"	l
f0105bc5	obj/kern/kernel.asm	/^f0105bc5:	7e 2c                	jle    f0105bf3 <vsnprintf+0x51>$/;"	l
f0105bc7	obj/kern/kernel.asm	/^f0105bc7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105bca	obj/kern/kernel.asm	/^f0105bca:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105bce	obj/kern/kernel.asm	/^f0105bce:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105bd1	obj/kern/kernel.asm	/^f0105bd1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105bd5	obj/kern/kernel.asm	/^f0105bd5:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0105bd8	obj/kern/kernel.asm	/^f0105bd8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105bdc	obj/kern/kernel.asm	/^f0105bdc:	c7 04 24 89 57 10 f0 	movl   $0xf0105789,(%esp)$/;"	l
f0105be3	obj/kern/kernel.asm	/^f0105be3:	e8 e6 fb ff ff       	call   f01057ce <vprintfmt>$/;"	l
f0105be8	obj/kern/kernel.asm	/^f0105be8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105beb	obj/kern/kernel.asm	/^f0105beb:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105bee	obj/kern/kernel.asm	/^f0105bee:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105bf1	obj/kern/kernel.asm	/^f0105bf1:	eb 05                	jmp    f0105bf8 <vsnprintf+0x56>$/;"	l
f0105bf3	obj/kern/kernel.asm	/^f0105bf3:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105bf8	obj/kern/kernel.asm	/^f0105bf8:	c9                   	leave  $/;"	l
f0105bf9	obj/kern/kernel.asm	/^f0105bf9:	c3                   	ret    $/;"	l
f0105bfa	obj/kern/kernel.asm	/^f0105bfa <snprintf>:$/;"	l
f0105bfa	obj/kern/kernel.asm	/^f0105bfa:	55                   	push   %ebp$/;"	l
f0105bfb	obj/kern/kernel.asm	/^f0105bfb:	89 e5                	mov    %esp,%ebp$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105c00	obj/kern/kernel.asm	/^f0105c00:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105c03	obj/kern/kernel.asm	/^f0105c03:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105c07	obj/kern/kernel.asm	/^f0105c07:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105c0a	obj/kern/kernel.asm	/^f0105c0a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105c11	obj/kern/kernel.asm	/^f0105c11:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105c18	obj/kern/kernel.asm	/^f0105c18:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c1b	obj/kern/kernel.asm	/^f0105c1b:	e8 82 ff ff ff       	call   f0105ba2 <vsnprintf>$/;"	l
f0105c20	obj/kern/kernel.asm	/^f0105c20:	c9                   	leave  $/;"	l
f0105c21	obj/kern/kernel.asm	/^f0105c21:	c3                   	ret    $/;"	l
f0105c22	obj/kern/kernel.asm	/^f0105c22:	66 90                	xchg   %ax,%ax$/;"	l
f0105c24	obj/kern/kernel.asm	/^f0105c24:	66 90                	xchg   %ax,%ax$/;"	l
f0105c26	obj/kern/kernel.asm	/^f0105c26:	66 90                	xchg   %ax,%ax$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28:	66 90                	xchg   %ax,%ax$/;"	l
f0105c2a	obj/kern/kernel.asm	/^f0105c2a:	66 90                	xchg   %ax,%ax$/;"	l
f0105c2c	obj/kern/kernel.asm	/^f0105c2c:	66 90                	xchg   %ax,%ax$/;"	l
f0105c2e	obj/kern/kernel.asm	/^f0105c2e:	66 90                	xchg   %ax,%ax$/;"	l
f0105c30	obj/kern/kernel.asm	/^f0105c30 <readline>:$/;"	l
f0105c30	obj/kern/kernel.asm	/^f0105c30:	55                   	push   %ebp$/;"	l
f0105c31	obj/kern/kernel.asm	/^f0105c31:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	57                   	push   %edi$/;"	l
f0105c34	obj/kern/kernel.asm	/^f0105c34:	56                   	push   %esi$/;"	l
f0105c35	obj/kern/kernel.asm	/^f0105c35:	53                   	push   %ebx$/;"	l
f0105c36	obj/kern/kernel.asm	/^f0105c36:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105c39	obj/kern/kernel.asm	/^f0105c39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105c3c	obj/kern/kernel.asm	/^f0105c3c:	85 c0                	test   %eax,%eax$/;"	l
f0105c3e	obj/kern/kernel.asm	/^f0105c3e:	74 10                	je     f0105c50 <readline+0x20>$/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105c44	obj/kern/kernel.asm	/^f0105c44:	c7 04 24 f3 85 10 f0 	movl   $0xf01085f3,(%esp)$/;"	l
f0105c4b	obj/kern/kernel.asm	/^f0105c4b:	e8 18 e4 ff ff       	call   f0104068 <cprintf>$/;"	l
f0105c50	obj/kern/kernel.asm	/^f0105c50:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0105c57	obj/kern/kernel.asm	/^f0105c57:	e8 fc ab ff ff       	call   f0100858 <iscons>$/;"	l
f0105c5c	obj/kern/kernel.asm	/^f0105c5c:	89 c7                	mov    %eax,%edi$/;"	l
f0105c5e	obj/kern/kernel.asm	/^f0105c5e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105c63	obj/kern/kernel.asm	/^f0105c63:	e8 df ab ff ff       	call   f0100847 <getchar>$/;"	l
f0105c68	obj/kern/kernel.asm	/^f0105c68:	89 c3                	mov    %eax,%ebx$/;"	l
f0105c6a	obj/kern/kernel.asm	/^f0105c6a:	85 c0                	test   %eax,%eax$/;"	l
f0105c6c	obj/kern/kernel.asm	/^f0105c6c:	79 25                	jns    f0105c93 <readline+0x63>$/;"	l
f0105c6e	obj/kern/kernel.asm	/^f0105c6e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c73	obj/kern/kernel.asm	/^f0105c73:	83 fb f8             	cmp    $0xfffffff8,%ebx$/;"	l
f0105c76	obj/kern/kernel.asm	/^f0105c76:	0f 84 89 00 00 00    	je     f0105d05 <readline+0xd5>$/;"	l
f0105c7c	obj/kern/kernel.asm	/^f0105c7c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105c80	obj/kern/kernel.asm	/^f0105c80:	c7 04 24 ff 90 10 f0 	movl   $0xf01090ff,(%esp)$/;"	l
f0105c87	obj/kern/kernel.asm	/^f0105c87:	e8 dc e3 ff ff       	call   f0104068 <cprintf>$/;"	l
f0105c8c	obj/kern/kernel.asm	/^f0105c8c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	eb 72                	jmp    f0105d05 <readline+0xd5>$/;"	l
f0105c93	obj/kern/kernel.asm	/^f0105c93:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0105c96	obj/kern/kernel.asm	/^f0105c96:	74 05                	je     f0105c9d <readline+0x6d>$/;"	l
f0105c98	obj/kern/kernel.asm	/^f0105c98:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105c9b	obj/kern/kernel.asm	/^f0105c9b:	75 1a                	jne    f0105cb7 <readline+0x87>$/;"	l
f0105c9d	obj/kern/kernel.asm	/^f0105c9d:	85 f6                	test   %esi,%esi$/;"	l
f0105c9f	obj/kern/kernel.asm	/^f0105c9f:	90                   	nop$/;"	l
f0105ca0	obj/kern/kernel.asm	/^f0105ca0:	7e 15                	jle    f0105cb7 <readline+0x87>$/;"	l
f0105ca2	obj/kern/kernel.asm	/^f0105ca2:	85 ff                	test   %edi,%edi$/;"	l
f0105ca4	obj/kern/kernel.asm	/^f0105ca4:	74 0c                	je     f0105cb2 <readline+0x82>$/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	e8 85 ab ff ff       	call   f0100837 <cputchar>$/;"	l
f0105cb2	obj/kern/kernel.asm	/^f0105cb2:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105cb5	obj/kern/kernel.asm	/^f0105cb5:	eb ac                	jmp    f0105c63 <readline+0x33>$/;"	l
f0105cb7	obj/kern/kernel.asm	/^f0105cb7:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0105cbd	obj/kern/kernel.asm	/^f0105cbd:	7f 1c                	jg     f0105cdb <readline+0xab>$/;"	l
f0105cbf	obj/kern/kernel.asm	/^f0105cbf:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0105cc2	obj/kern/kernel.asm	/^f0105cc2:	7e 17                	jle    f0105cdb <readline+0xab>$/;"	l
f0105cc4	obj/kern/kernel.asm	/^f0105cc4:	85 ff                	test   %edi,%edi$/;"	l
f0105cc6	obj/kern/kernel.asm	/^f0105cc6:	74 08                	je     f0105cd0 <readline+0xa0>$/;"	l
f0105cc8	obj/kern/kernel.asm	/^f0105cc8:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105ccb	obj/kern/kernel.asm	/^f0105ccb:	e8 67 ab ff ff       	call   f0100837 <cputchar>$/;"	l
f0105cd0	obj/kern/kernel.asm	/^f0105cd0:	88 9e 80 7a 2b f0    	mov    %bl,-0xfd48580(%esi)$/;"	l
f0105cd6	obj/kern/kernel.asm	/^f0105cd6:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0105cd9	obj/kern/kernel.asm	/^f0105cd9:	eb 88                	jmp    f0105c63 <readline+0x33>$/;"	l
f0105cdb	obj/kern/kernel.asm	/^f0105cdb:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0105cde	obj/kern/kernel.asm	/^f0105cde:	74 09                	je     f0105ce9 <readline+0xb9>$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0105ce3	obj/kern/kernel.asm	/^f0105ce3:	0f 85 7a ff ff ff    	jne    f0105c63 <readline+0x33>$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	85 ff                	test   %edi,%edi$/;"	l
f0105ceb	obj/kern/kernel.asm	/^f0105ceb:	74 0c                	je     f0105cf9 <readline+0xc9>$/;"	l
f0105ced	obj/kern/kernel.asm	/^f0105ced:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0105cf4	obj/kern/kernel.asm	/^f0105cf4:	e8 3e ab ff ff       	call   f0100837 <cputchar>$/;"	l
f0105cf9	obj/kern/kernel.asm	/^f0105cf9:	c6 86 80 7a 2b f0 00 	movb   $0x0,-0xfd48580(%esi)$/;"	l
f0105d00	obj/kern/kernel.asm	/^f0105d00:	b8 80 7a 2b f0       	mov    $0xf02b7a80,%eax$/;"	l
f0105d05	obj/kern/kernel.asm	/^f0105d05:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105d08	obj/kern/kernel.asm	/^f0105d08:	5b                   	pop    %ebx$/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09:	5e                   	pop    %esi$/;"	l
f0105d0a	obj/kern/kernel.asm	/^f0105d0a:	5f                   	pop    %edi$/;"	l
f0105d0b	obj/kern/kernel.asm	/^f0105d0b:	5d                   	pop    %ebp$/;"	l
f0105d0c	obj/kern/kernel.asm	/^f0105d0c:	c3                   	ret    $/;"	l
f0105d0d	obj/kern/kernel.asm	/^f0105d0d:	66 90                	xchg   %ax,%ax$/;"	l
f0105d0f	obj/kern/kernel.asm	/^f0105d0f:	90                   	nop$/;"	l
f0105d10	obj/kern/kernel.asm	/^f0105d10 <strlen>:$/;"	l
f0105d10	obj/kern/kernel.asm	/^f0105d10:	55                   	push   %ebp$/;"	l
f0105d11	obj/kern/kernel.asm	/^f0105d11:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d13	obj/kern/kernel.asm	/^f0105d13:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105d16	obj/kern/kernel.asm	/^f0105d16:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105d1b	obj/kern/kernel.asm	/^f0105d1b:	eb 03                	jmp    f0105d20 <strlen+0x10>$/;"	l
f0105d1d	obj/kern/kernel.asm	/^f0105d1d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105d20	obj/kern/kernel.asm	/^f0105d20:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0105d24	obj/kern/kernel.asm	/^f0105d24:	75 f7                	jne    f0105d1d <strlen+0xd>$/;"	l
f0105d26	obj/kern/kernel.asm	/^f0105d26:	5d                   	pop    %ebp$/;"	l
f0105d27	obj/kern/kernel.asm	/^f0105d27:	c3                   	ret    $/;"	l
f0105d28	obj/kern/kernel.asm	/^f0105d28 <strnlen>:$/;"	l
f0105d28	obj/kern/kernel.asm	/^f0105d28:	55                   	push   %ebp$/;"	l
f0105d29	obj/kern/kernel.asm	/^f0105d29:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d2b	obj/kern/kernel.asm	/^f0105d2b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105d2e	obj/kern/kernel.asm	/^f0105d2e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105d31	obj/kern/kernel.asm	/^f0105d31:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105d36	obj/kern/kernel.asm	/^f0105d36:	eb 03                	jmp    f0105d3b <strnlen+0x13>$/;"	l
f0105d38	obj/kern/kernel.asm	/^f0105d38:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	39 d0                	cmp    %edx,%eax$/;"	l
f0105d3d	obj/kern/kernel.asm	/^f0105d3d:	74 06                	je     f0105d45 <strnlen+0x1d>$/;"	l
f0105d3f	obj/kern/kernel.asm	/^f0105d3f:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f0105d43	obj/kern/kernel.asm	/^f0105d43:	75 f3                	jne    f0105d38 <strnlen+0x10>$/;"	l
f0105d45	obj/kern/kernel.asm	/^f0105d45:	5d                   	pop    %ebp$/;"	l
f0105d46	obj/kern/kernel.asm	/^f0105d46:	c3                   	ret    $/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47 <strcpy>:$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	55                   	push   %ebp$/;"	l
f0105d48	obj/kern/kernel.asm	/^f0105d48:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d4a	obj/kern/kernel.asm	/^f0105d4a:	53                   	push   %ebx$/;"	l
f0105d4b	obj/kern/kernel.asm	/^f0105d4b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105d4e	obj/kern/kernel.asm	/^f0105d4e:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105d51	obj/kern/kernel.asm	/^f0105d51:	89 c2                	mov    %eax,%edx$/;"	l
f0105d53	obj/kern/kernel.asm	/^f0105d53:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105d59	obj/kern/kernel.asm	/^f0105d59:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0105d60	obj/kern/kernel.asm	/^f0105d60:	84 db                	test   %bl,%bl$/;"	l
f0105d62	obj/kern/kernel.asm	/^f0105d62:	75 ef                	jne    f0105d53 <strcpy+0xc>$/;"	l
f0105d64	obj/kern/kernel.asm	/^f0105d64:	5b                   	pop    %ebx$/;"	l
f0105d65	obj/kern/kernel.asm	/^f0105d65:	5d                   	pop    %ebp$/;"	l
f0105d66	obj/kern/kernel.asm	/^f0105d66:	c3                   	ret    $/;"	l
f0105d67	obj/kern/kernel.asm	/^f0105d67 <strcat>:$/;"	l
f0105d67	obj/kern/kernel.asm	/^f0105d67:	55                   	push   %ebp$/;"	l
f0105d68	obj/kern/kernel.asm	/^f0105d68:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d6a	obj/kern/kernel.asm	/^f0105d6a:	53                   	push   %ebx$/;"	l
f0105d6b	obj/kern/kernel.asm	/^f0105d6b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105d6e	obj/kern/kernel.asm	/^f0105d6e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105d71	obj/kern/kernel.asm	/^f0105d71:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105d74	obj/kern/kernel.asm	/^f0105d74:	e8 97 ff ff ff       	call   f0105d10 <strlen>$/;"	l
f0105d79	obj/kern/kernel.asm	/^f0105d79:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105d7c	obj/kern/kernel.asm	/^f0105d7c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105d80	obj/kern/kernel.asm	/^f0105d80:	01 d8                	add    %ebx,%eax$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105d85	obj/kern/kernel.asm	/^f0105d85:	e8 bd ff ff ff       	call   f0105d47 <strcpy>$/;"	l
f0105d8a	obj/kern/kernel.asm	/^f0105d8a:	89 d8                	mov    %ebx,%eax$/;"	l
f0105d8c	obj/kern/kernel.asm	/^f0105d8c:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	5b                   	pop    %ebx$/;"	l
f0105d90	obj/kern/kernel.asm	/^f0105d90:	5d                   	pop    %ebp$/;"	l
f0105d91	obj/kern/kernel.asm	/^f0105d91:	c3                   	ret    $/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92 <strncpy>:$/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92:	55                   	push   %ebp$/;"	l
f0105d93	obj/kern/kernel.asm	/^f0105d93:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d95	obj/kern/kernel.asm	/^f0105d95:	56                   	push   %esi$/;"	l
f0105d96	obj/kern/kernel.asm	/^f0105d96:	53                   	push   %ebx$/;"	l
f0105d97	obj/kern/kernel.asm	/^f0105d97:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105d9a	obj/kern/kernel.asm	/^f0105d9a:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	89 f3                	mov    %esi,%ebx$/;"	l
f0105d9f	obj/kern/kernel.asm	/^f0105d9f:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0105da2	obj/kern/kernel.asm	/^f0105da2:	89 f2                	mov    %esi,%edx$/;"	l
f0105da4	obj/kern/kernel.asm	/^f0105da4:	eb 0f                	jmp    f0105db5 <strncpy+0x23>$/;"	l
f0105da6	obj/kern/kernel.asm	/^f0105da6:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105da9	obj/kern/kernel.asm	/^f0105da9:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105dac	obj/kern/kernel.asm	/^f0105dac:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f0105daf	obj/kern/kernel.asm	/^f0105daf:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0105db2	obj/kern/kernel.asm	/^f0105db2:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0105db5	obj/kern/kernel.asm	/^f0105db5:	39 da                	cmp    %ebx,%edx$/;"	l
f0105db7	obj/kern/kernel.asm	/^f0105db7:	75 ed                	jne    f0105da6 <strncpy+0x14>$/;"	l
f0105db9	obj/kern/kernel.asm	/^f0105db9:	89 f0                	mov    %esi,%eax$/;"	l
f0105dbb	obj/kern/kernel.asm	/^f0105dbb:	5b                   	pop    %ebx$/;"	l
f0105dbc	obj/kern/kernel.asm	/^f0105dbc:	5e                   	pop    %esi$/;"	l
f0105dbd	obj/kern/kernel.asm	/^f0105dbd:	5d                   	pop    %ebp$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	c3                   	ret    $/;"	l
f0105dbf	obj/kern/kernel.asm	/^f0105dbf <strlcpy>:$/;"	l
f0105dbf	obj/kern/kernel.asm	/^f0105dbf:	55                   	push   %ebp$/;"	l
f0105dc0	obj/kern/kernel.asm	/^f0105dc0:	89 e5                	mov    %esp,%ebp$/;"	l
f0105dc2	obj/kern/kernel.asm	/^f0105dc2:	56                   	push   %esi$/;"	l
f0105dc3	obj/kern/kernel.asm	/^f0105dc3:	53                   	push   %ebx$/;"	l
f0105dc4	obj/kern/kernel.asm	/^f0105dc4:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105dc7	obj/kern/kernel.asm	/^f0105dc7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105dca	obj/kern/kernel.asm	/^f0105dca:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105dcd	obj/kern/kernel.asm	/^f0105dcd:	89 f0                	mov    %esi,%eax$/;"	l
f0105dcf	obj/kern/kernel.asm	/^f0105dcf:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebx$/;"	l
f0105dd3	obj/kern/kernel.asm	/^f0105dd3:	85 c9                	test   %ecx,%ecx$/;"	l
f0105dd5	obj/kern/kernel.asm	/^f0105dd5:	75 0b                	jne    f0105de2 <strlcpy+0x23>$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	eb 1d                	jmp    f0105df6 <strlcpy+0x37>$/;"	l
f0105dd9	obj/kern/kernel.asm	/^f0105dd9:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105ddc	obj/kern/kernel.asm	/^f0105ddc:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f0105de2	obj/kern/kernel.asm	/^f0105de2:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105de4	obj/kern/kernel.asm	/^f0105de4:	74 0b                	je     f0105df1 <strlcpy+0x32>$/;"	l
f0105de6	obj/kern/kernel.asm	/^f0105de6:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	84 c9                	test   %cl,%cl$/;"	l
f0105deb	obj/kern/kernel.asm	/^f0105deb:	75 ec                	jne    f0105dd9 <strlcpy+0x1a>$/;"	l
f0105ded	obj/kern/kernel.asm	/^f0105ded:	89 c2                	mov    %eax,%edx$/;"	l
f0105def	obj/kern/kernel.asm	/^f0105def:	eb 02                	jmp    f0105df3 <strlcpy+0x34>$/;"	l
f0105df1	obj/kern/kernel.asm	/^f0105df1:	89 c2                	mov    %eax,%edx$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	c6 02 00             	movb   $0x0,(%edx)$/;"	l
f0105df6	obj/kern/kernel.asm	/^f0105df6:	29 f0                	sub    %esi,%eax$/;"	l
f0105df8	obj/kern/kernel.asm	/^f0105df8:	5b                   	pop    %ebx$/;"	l
f0105df9	obj/kern/kernel.asm	/^f0105df9:	5e                   	pop    %esi$/;"	l
f0105dfa	obj/kern/kernel.asm	/^f0105dfa:	5d                   	pop    %ebp$/;"	l
f0105dfb	obj/kern/kernel.asm	/^f0105dfb:	c3                   	ret    $/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc <strcmp>:$/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc:	55                   	push   %ebp$/;"	l
f0105dfd	obj/kern/kernel.asm	/^f0105dfd:	89 e5                	mov    %esp,%ebp$/;"	l
f0105dff	obj/kern/kernel.asm	/^f0105dff:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105e02	obj/kern/kernel.asm	/^f0105e02:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105e05	obj/kern/kernel.asm	/^f0105e05:	eb 06                	jmp    f0105e0d <strcmp+0x11>$/;"	l
f0105e07	obj/kern/kernel.asm	/^f0105e07:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105e0a	obj/kern/kernel.asm	/^f0105e0a:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105e0d	obj/kern/kernel.asm	/^f0105e0d:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105e10	obj/kern/kernel.asm	/^f0105e10:	84 c0                	test   %al,%al$/;"	l
f0105e12	obj/kern/kernel.asm	/^f0105e12:	74 04                	je     f0105e18 <strcmp+0x1c>$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	3a 02                	cmp    (%edx),%al$/;"	l
f0105e16	obj/kern/kernel.asm	/^f0105e16:	74 ef                	je     f0105e07 <strcmp+0xb>$/;"	l
f0105e18	obj/kern/kernel.asm	/^f0105e18:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105e1b	obj/kern/kernel.asm	/^f0105e1b:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105e1e	obj/kern/kernel.asm	/^f0105e1e:	29 d0                	sub    %edx,%eax$/;"	l
f0105e20	obj/kern/kernel.asm	/^f0105e20:	5d                   	pop    %ebp$/;"	l
f0105e21	obj/kern/kernel.asm	/^f0105e21:	c3                   	ret    $/;"	l
f0105e22	obj/kern/kernel.asm	/^f0105e22 <strncmp>:$/;"	l
f0105e22	obj/kern/kernel.asm	/^f0105e22:	55                   	push   %ebp$/;"	l
f0105e23	obj/kern/kernel.asm	/^f0105e23:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e25	obj/kern/kernel.asm	/^f0105e25:	53                   	push   %ebx$/;"	l
f0105e26	obj/kern/kernel.asm	/^f0105e26:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e29	obj/kern/kernel.asm	/^f0105e29:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105e2c	obj/kern/kernel.asm	/^f0105e2c:	89 c3                	mov    %eax,%ebx$/;"	l
f0105e2e	obj/kern/kernel.asm	/^f0105e2e:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0105e31	obj/kern/kernel.asm	/^f0105e31:	eb 06                	jmp    f0105e39 <strncmp+0x17>$/;"	l
f0105e33	obj/kern/kernel.asm	/^f0105e33:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105e36	obj/kern/kernel.asm	/^f0105e36:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105e39	obj/kern/kernel.asm	/^f0105e39:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105e3b	obj/kern/kernel.asm	/^f0105e3b:	74 15                	je     f0105e52 <strncmp+0x30>$/;"	l
f0105e3d	obj/kern/kernel.asm	/^f0105e3d:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0105e40	obj/kern/kernel.asm	/^f0105e40:	84 c9                	test   %cl,%cl$/;"	l
f0105e42	obj/kern/kernel.asm	/^f0105e42:	74 04                	je     f0105e48 <strncmp+0x26>$/;"	l
f0105e44	obj/kern/kernel.asm	/^f0105e44:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0105e46	obj/kern/kernel.asm	/^f0105e46:	74 eb                	je     f0105e33 <strncmp+0x11>$/;"	l
f0105e48	obj/kern/kernel.asm	/^f0105e48:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105e4b	obj/kern/kernel.asm	/^f0105e4b:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105e4e	obj/kern/kernel.asm	/^f0105e4e:	29 d0                	sub    %edx,%eax$/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50:	eb 05                	jmp    f0105e57 <strncmp+0x35>$/;"	l
f0105e52	obj/kern/kernel.asm	/^f0105e52:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e57	obj/kern/kernel.asm	/^f0105e57:	5b                   	pop    %ebx$/;"	l
f0105e58	obj/kern/kernel.asm	/^f0105e58:	5d                   	pop    %ebp$/;"	l
f0105e59	obj/kern/kernel.asm	/^f0105e59:	c3                   	ret    $/;"	l
f0105e5a	obj/kern/kernel.asm	/^f0105e5a <strchr>:$/;"	l
f0105e5a	obj/kern/kernel.asm	/^f0105e5a:	55                   	push   %ebp$/;"	l
f0105e5b	obj/kern/kernel.asm	/^f0105e5b:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e5d	obj/kern/kernel.asm	/^f0105e5d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105e64	obj/kern/kernel.asm	/^f0105e64:	eb 07                	jmp    f0105e6d <strchr+0x13>$/;"	l
f0105e66	obj/kern/kernel.asm	/^f0105e66:	38 ca                	cmp    %cl,%dl$/;"	l
f0105e68	obj/kern/kernel.asm	/^f0105e68:	74 0f                	je     f0105e79 <strchr+0x1f>$/;"	l
f0105e6a	obj/kern/kernel.asm	/^f0105e6a:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105e6d	obj/kern/kernel.asm	/^f0105e6d:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105e70	obj/kern/kernel.asm	/^f0105e70:	84 d2                	test   %dl,%dl$/;"	l
f0105e72	obj/kern/kernel.asm	/^f0105e72:	75 f2                	jne    f0105e66 <strchr+0xc>$/;"	l
f0105e74	obj/kern/kernel.asm	/^f0105e74:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e79	obj/kern/kernel.asm	/^f0105e79:	5d                   	pop    %ebp$/;"	l
f0105e7a	obj/kern/kernel.asm	/^f0105e7a:	c3                   	ret    $/;"	l
f0105e7b	obj/kern/kernel.asm	/^f0105e7b <strfind>:$/;"	l
f0105e7b	obj/kern/kernel.asm	/^f0105e7b:	55                   	push   %ebp$/;"	l
f0105e7c	obj/kern/kernel.asm	/^f0105e7c:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e7e	obj/kern/kernel.asm	/^f0105e7e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105e85	obj/kern/kernel.asm	/^f0105e85:	eb 07                	jmp    f0105e8e <strfind+0x13>$/;"	l
f0105e87	obj/kern/kernel.asm	/^f0105e87:	38 ca                	cmp    %cl,%dl$/;"	l
f0105e89	obj/kern/kernel.asm	/^f0105e89:	74 0a                	je     f0105e95 <strfind+0x1a>$/;"	l
f0105e8b	obj/kern/kernel.asm	/^f0105e8b:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105e8e	obj/kern/kernel.asm	/^f0105e8e:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105e91	obj/kern/kernel.asm	/^f0105e91:	84 d2                	test   %dl,%dl$/;"	l
f0105e93	obj/kern/kernel.asm	/^f0105e93:	75 f2                	jne    f0105e87 <strfind+0xc>$/;"	l
f0105e95	obj/kern/kernel.asm	/^f0105e95:	5d                   	pop    %ebp$/;"	l
f0105e96	obj/kern/kernel.asm	/^f0105e96:	c3                   	ret    $/;"	l
f0105e97	obj/kern/kernel.asm	/^f0105e97 <memset>:$/;"	l
f0105e97	obj/kern/kernel.asm	/^f0105e97:	55                   	push   %ebp$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	57                   	push   %edi$/;"	l
f0105e9b	obj/kern/kernel.asm	/^f0105e9b:	56                   	push   %esi$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c:	53                   	push   %ebx$/;"	l
f0105e9d	obj/kern/kernel.asm	/^f0105e9d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105ea0	obj/kern/kernel.asm	/^f0105ea0:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105ea3	obj/kern/kernel.asm	/^f0105ea3:	85 c9                	test   %ecx,%ecx$/;"	l
f0105ea5	obj/kern/kernel.asm	/^f0105ea5:	74 36                	je     f0105edd <memset+0x46>$/;"	l
f0105ea7	obj/kern/kernel.asm	/^f0105ea7:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0105ead	obj/kern/kernel.asm	/^f0105ead:	75 28                	jne    f0105ed7 <memset+0x40>$/;"	l
f0105eaf	obj/kern/kernel.asm	/^f0105eaf:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105eb2	obj/kern/kernel.asm	/^f0105eb2:	75 23                	jne    f0105ed7 <memset+0x40>$/;"	l
f0105eb4	obj/kern/kernel.asm	/^f0105eb4:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0105eb8	obj/kern/kernel.asm	/^f0105eb8:	89 d3                	mov    %edx,%ebx$/;"	l
f0105eba	obj/kern/kernel.asm	/^f0105eba:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0105ebd	obj/kern/kernel.asm	/^f0105ebd:	89 d6                	mov    %edx,%esi$/;"	l
f0105ebf	obj/kern/kernel.asm	/^f0105ebf:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0105ec2	obj/kern/kernel.asm	/^f0105ec2:	89 d0                	mov    %edx,%eax$/;"	l
f0105ec4	obj/kern/kernel.asm	/^f0105ec4:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0105ec7	obj/kern/kernel.asm	/^f0105ec7:	09 f0                	or     %esi,%eax$/;"	l
f0105ec9	obj/kern/kernel.asm	/^f0105ec9:	09 c2                	or     %eax,%edx$/;"	l
f0105ecb	obj/kern/kernel.asm	/^f0105ecb:	89 d0                	mov    %edx,%eax$/;"	l
f0105ecd	obj/kern/kernel.asm	/^f0105ecd:	09 d8                	or     %ebx,%eax$/;"	l
f0105ecf	obj/kern/kernel.asm	/^f0105ecf:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105ed2	obj/kern/kernel.asm	/^f0105ed2:	fc                   	cld    $/;"	l
f0105ed3	obj/kern/kernel.asm	/^f0105ed3:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0105ed5	obj/kern/kernel.asm	/^f0105ed5:	eb 06                	jmp    f0105edd <memset+0x46>$/;"	l
f0105ed7	obj/kern/kernel.asm	/^f0105ed7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105eda	obj/kern/kernel.asm	/^f0105eda:	fc                   	cld    $/;"	l
f0105edb	obj/kern/kernel.asm	/^f0105edb:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0105edd	obj/kern/kernel.asm	/^f0105edd:	89 f8                	mov    %edi,%eax$/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	5b                   	pop    %ebx$/;"	l
f0105ee0	obj/kern/kernel.asm	/^f0105ee0:	5e                   	pop    %esi$/;"	l
f0105ee1	obj/kern/kernel.asm	/^f0105ee1:	5f                   	pop    %edi$/;"	l
f0105ee2	obj/kern/kernel.asm	/^f0105ee2:	5d                   	pop    %ebp$/;"	l
f0105ee3	obj/kern/kernel.asm	/^f0105ee3:	c3                   	ret    $/;"	l
f0105ee4	obj/kern/kernel.asm	/^f0105ee4 <memmove>:$/;"	l
f0105ee4	obj/kern/kernel.asm	/^f0105ee4:	55                   	push   %ebp$/;"	l
f0105ee5	obj/kern/kernel.asm	/^f0105ee5:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ee7	obj/kern/kernel.asm	/^f0105ee7:	57                   	push   %edi$/;"	l
f0105ee8	obj/kern/kernel.asm	/^f0105ee8:	56                   	push   %esi$/;"	l
f0105ee9	obj/kern/kernel.asm	/^f0105ee9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105eec	obj/kern/kernel.asm	/^f0105eec:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105eef	obj/kern/kernel.asm	/^f0105eef:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105ef2	obj/kern/kernel.asm	/^f0105ef2:	39 c6                	cmp    %eax,%esi$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	73 35                	jae    f0105f2b <memmove+0x47>$/;"	l
f0105ef6	obj/kern/kernel.asm	/^f0105ef6:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0105ef9	obj/kern/kernel.asm	/^f0105ef9:	39 d0                	cmp    %edx,%eax$/;"	l
f0105efb	obj/kern/kernel.asm	/^f0105efb:	73 2e                	jae    f0105f2b <memmove+0x47>$/;"	l
f0105efd	obj/kern/kernel.asm	/^f0105efd:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	89 d6                	mov    %edx,%esi$/;"	l
f0105f02	obj/kern/kernel.asm	/^f0105f02:	09 fe                	or     %edi,%esi$/;"	l
f0105f04	obj/kern/kernel.asm	/^f0105f04:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0105f0a	obj/kern/kernel.asm	/^f0105f0a:	75 13                	jne    f0105f1f <memmove+0x3b>$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105f0f	obj/kern/kernel.asm	/^f0105f0f:	75 0e                	jne    f0105f1f <memmove+0x3b>$/;"	l
f0105f11	obj/kern/kernel.asm	/^f0105f11:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0105f14	obj/kern/kernel.asm	/^f0105f14:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0105f17	obj/kern/kernel.asm	/^f0105f17:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105f1a	obj/kern/kernel.asm	/^f0105f1a:	fd                   	std    $/;"	l
f0105f1b	obj/kern/kernel.asm	/^f0105f1b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105f1d	obj/kern/kernel.asm	/^f0105f1d:	eb 09                	jmp    f0105f28 <memmove+0x44>$/;"	l
f0105f1f	obj/kern/kernel.asm	/^f0105f1f:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105f22	obj/kern/kernel.asm	/^f0105f22:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0105f25	obj/kern/kernel.asm	/^f0105f25:	fd                   	std    $/;"	l
f0105f26	obj/kern/kernel.asm	/^f0105f26:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105f28	obj/kern/kernel.asm	/^f0105f28:	fc                   	cld    $/;"	l
f0105f29	obj/kern/kernel.asm	/^f0105f29:	eb 1d                	jmp    f0105f48 <memmove+0x64>$/;"	l
f0105f2b	obj/kern/kernel.asm	/^f0105f2b:	89 f2                	mov    %esi,%edx$/;"	l
f0105f2d	obj/kern/kernel.asm	/^f0105f2d:	09 c2                	or     %eax,%edx$/;"	l
f0105f2f	obj/kern/kernel.asm	/^f0105f2f:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0105f32	obj/kern/kernel.asm	/^f0105f32:	75 0f                	jne    f0105f43 <memmove+0x5f>$/;"	l
f0105f34	obj/kern/kernel.asm	/^f0105f34:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105f37	obj/kern/kernel.asm	/^f0105f37:	75 0a                	jne    f0105f43 <memmove+0x5f>$/;"	l
f0105f39	obj/kern/kernel.asm	/^f0105f39:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	89 c7                	mov    %eax,%edi$/;"	l
f0105f3e	obj/kern/kernel.asm	/^f0105f3e:	fc                   	cld    $/;"	l
f0105f3f	obj/kern/kernel.asm	/^f0105f3f:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105f41	obj/kern/kernel.asm	/^f0105f41:	eb 05                	jmp    f0105f48 <memmove+0x64>$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	89 c7                	mov    %eax,%edi$/;"	l
f0105f45	obj/kern/kernel.asm	/^f0105f45:	fc                   	cld    $/;"	l
f0105f46	obj/kern/kernel.asm	/^f0105f46:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105f48	obj/kern/kernel.asm	/^f0105f48:	5e                   	pop    %esi$/;"	l
f0105f49	obj/kern/kernel.asm	/^f0105f49:	5f                   	pop    %edi$/;"	l
f0105f4a	obj/kern/kernel.asm	/^f0105f4a:	5d                   	pop    %ebp$/;"	l
f0105f4b	obj/kern/kernel.asm	/^f0105f4b:	c3                   	ret    $/;"	l
f0105f4c	obj/kern/kernel.asm	/^f0105f4c <memcpy>:$/;"	l
f0105f4c	obj/kern/kernel.asm	/^f0105f4c:	55                   	push   %ebp$/;"	l
f0105f4d	obj/kern/kernel.asm	/^f0105f4d:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f4f	obj/kern/kernel.asm	/^f0105f4f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105f52	obj/kern/kernel.asm	/^f0105f52:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105f55	obj/kern/kernel.asm	/^f0105f55:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105f59	obj/kern/kernel.asm	/^f0105f59:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105f5c	obj/kern/kernel.asm	/^f0105f5c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105f60	obj/kern/kernel.asm	/^f0105f60:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105f66	obj/kern/kernel.asm	/^f0105f66:	e8 79 ff ff ff       	call   f0105ee4 <memmove>$/;"	l
f0105f6b	obj/kern/kernel.asm	/^f0105f6b:	c9                   	leave  $/;"	l
f0105f6c	obj/kern/kernel.asm	/^f0105f6c:	c3                   	ret    $/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d <memcmp>:$/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	55                   	push   %ebp$/;"	l
f0105f6e	obj/kern/kernel.asm	/^f0105f6e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f70	obj/kern/kernel.asm	/^f0105f70:	56                   	push   %esi$/;"	l
f0105f71	obj/kern/kernel.asm	/^f0105f71:	53                   	push   %ebx$/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105f75	obj/kern/kernel.asm	/^f0105f75:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105f78	obj/kern/kernel.asm	/^f0105f78:	89 d6                	mov    %edx,%esi$/;"	l
f0105f7a	obj/kern/kernel.asm	/^f0105f7a:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0105f7d	obj/kern/kernel.asm	/^f0105f7d:	eb 1a                	jmp    f0105f99 <memcmp+0x2c>$/;"	l
f0105f7f	obj/kern/kernel.asm	/^f0105f7f:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0105f82	obj/kern/kernel.asm	/^f0105f82:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0105f85	obj/kern/kernel.asm	/^f0105f85:	38 d8                	cmp    %bl,%al$/;"	l
f0105f87	obj/kern/kernel.asm	/^f0105f87:	74 0a                	je     f0105f93 <memcmp+0x26>$/;"	l
f0105f89	obj/kern/kernel.asm	/^f0105f89:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105f8c	obj/kern/kernel.asm	/^f0105f8c:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0105f8f	obj/kern/kernel.asm	/^f0105f8f:	29 d8                	sub    %ebx,%eax$/;"	l
f0105f91	obj/kern/kernel.asm	/^f0105f91:	eb 0f                	jmp    f0105fa2 <memcmp+0x35>$/;"	l
f0105f93	obj/kern/kernel.asm	/^f0105f93:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105f96	obj/kern/kernel.asm	/^f0105f96:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105f99	obj/kern/kernel.asm	/^f0105f99:	39 f2                	cmp    %esi,%edx$/;"	l
f0105f9b	obj/kern/kernel.asm	/^f0105f9b:	75 e2                	jne    f0105f7f <memcmp+0x12>$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105fa2	obj/kern/kernel.asm	/^f0105fa2:	5b                   	pop    %ebx$/;"	l
f0105fa3	obj/kern/kernel.asm	/^f0105fa3:	5e                   	pop    %esi$/;"	l
f0105fa4	obj/kern/kernel.asm	/^f0105fa4:	5d                   	pop    %ebp$/;"	l
f0105fa5	obj/kern/kernel.asm	/^f0105fa5:	c3                   	ret    $/;"	l
f0105fa6	obj/kern/kernel.asm	/^f0105fa6 <memfind>:$/;"	l
f0105fa6	obj/kern/kernel.asm	/^f0105fa6:	55                   	push   %ebp$/;"	l
f0105fa7	obj/kern/kernel.asm	/^f0105fa7:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fa9	obj/kern/kernel.asm	/^f0105fa9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105fac	obj/kern/kernel.asm	/^f0105fac:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105faf	obj/kern/kernel.asm	/^f0105faf:	89 c2                	mov    %eax,%edx$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0105fb4	obj/kern/kernel.asm	/^f0105fb4:	eb 07                	jmp    f0105fbd <memfind+0x17>$/;"	l
f0105fb6	obj/kern/kernel.asm	/^f0105fb6:	38 08                	cmp    %cl,(%eax)$/;"	l
f0105fb8	obj/kern/kernel.asm	/^f0105fb8:	74 07                	je     f0105fc1 <memfind+0x1b>$/;"	l
f0105fba	obj/kern/kernel.asm	/^f0105fba:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105fbd	obj/kern/kernel.asm	/^f0105fbd:	39 d0                	cmp    %edx,%eax$/;"	l
f0105fbf	obj/kern/kernel.asm	/^f0105fbf:	72 f5                	jb     f0105fb6 <memfind+0x10>$/;"	l
f0105fc1	obj/kern/kernel.asm	/^f0105fc1:	5d                   	pop    %ebp$/;"	l
f0105fc2	obj/kern/kernel.asm	/^f0105fc2:	c3                   	ret    $/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3 <strtol>:$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3:	55                   	push   %ebp$/;"	l
f0105fc4	obj/kern/kernel.asm	/^f0105fc4:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fc6	obj/kern/kernel.asm	/^f0105fc6:	57                   	push   %edi$/;"	l
f0105fc7	obj/kern/kernel.asm	/^f0105fc7:	56                   	push   %esi$/;"	l
f0105fc8	obj/kern/kernel.asm	/^f0105fc8:	53                   	push   %ebx$/;"	l
f0105fc9	obj/kern/kernel.asm	/^f0105fc9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105fcc	obj/kern/kernel.asm	/^f0105fcc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105fcf	obj/kern/kernel.asm	/^f0105fcf:	eb 03                	jmp    f0105fd4 <strtol+0x11>$/;"	l
f0105fd1	obj/kern/kernel.asm	/^f0105fd1:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105fd4	obj/kern/kernel.asm	/^f0105fd4:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0105fd7	obj/kern/kernel.asm	/^f0105fd7:	80 f9 09             	cmp    $0x9,%cl$/;"	l
f0105fda	obj/kern/kernel.asm	/^f0105fda:	74 f5                	je     f0105fd1 <strtol+0xe>$/;"	l
f0105fdc	obj/kern/kernel.asm	/^f0105fdc:	80 f9 20             	cmp    $0x20,%cl$/;"	l
f0105fdf	obj/kern/kernel.asm	/^f0105fdf:	74 f0                	je     f0105fd1 <strtol+0xe>$/;"	l
f0105fe1	obj/kern/kernel.asm	/^f0105fe1:	80 f9 2b             	cmp    $0x2b,%cl$/;"	l
f0105fe4	obj/kern/kernel.asm	/^f0105fe4:	75 0a                	jne    f0105ff0 <strtol+0x2d>$/;"	l
f0105fe6	obj/kern/kernel.asm	/^f0105fe6:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105fe9	obj/kern/kernel.asm	/^f0105fe9:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105fee	obj/kern/kernel.asm	/^f0105fee:	eb 11                	jmp    f0106001 <strtol+0x3e>$/;"	l
f0105ff0	obj/kern/kernel.asm	/^f0105ff0:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105ff5	obj/kern/kernel.asm	/^f0105ff5:	80 f9 2d             	cmp    $0x2d,%cl$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	75 07                	jne    f0106001 <strtol+0x3e>$/;"	l
f0105ffa	obj/kern/kernel.asm	/^f0105ffa:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f0105ffd	obj/kern/kernel.asm	/^f0105ffd:	66 bf 01 00          	mov    $0x1,%di$/;"	l
f0106001	obj/kern/kernel.asm	/^f0106001:	a9 ef ff ff ff       	test   $0xffffffef,%eax$/;"	l
f0106006	obj/kern/kernel.asm	/^f0106006:	75 15                	jne    f010601d <strtol+0x5a>$/;"	l
f0106008	obj/kern/kernel.asm	/^f0106008:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f010600b	obj/kern/kernel.asm	/^f010600b:	75 10                	jne    f010601d <strtol+0x5a>$/;"	l
f010600d	obj/kern/kernel.asm	/^f010600d:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0106011	obj/kern/kernel.asm	/^f0106011:	75 0a                	jne    f010601d <strtol+0x5a>$/;"	l
f0106013	obj/kern/kernel.asm	/^f0106013:	83 c2 02             	add    $0x2,%edx$/;"	l
f0106016	obj/kern/kernel.asm	/^f0106016:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010601b	obj/kern/kernel.asm	/^f010601b:	eb 10                	jmp    f010602d <strtol+0x6a>$/;"	l
f010601d	obj/kern/kernel.asm	/^f010601d:	85 c0                	test   %eax,%eax$/;"	l
f010601f	obj/kern/kernel.asm	/^f010601f:	75 0c                	jne    f010602d <strtol+0x6a>$/;"	l
f0106021	obj/kern/kernel.asm	/^f0106021:	b0 0a                	mov    $0xa,%al$/;"	l
f0106023	obj/kern/kernel.asm	/^f0106023:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106026	obj/kern/kernel.asm	/^f0106026:	75 05                	jne    f010602d <strtol+0x6a>$/;"	l
f0106028	obj/kern/kernel.asm	/^f0106028:	83 c2 01             	add    $0x1,%edx$/;"	l
f010602b	obj/kern/kernel.asm	/^f010602b:	b0 08                	mov    $0x8,%al$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106032	obj/kern/kernel.asm	/^f0106032:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106038	obj/kern/kernel.asm	/^f0106038:	8d 71 d0             	lea    -0x30(%ecx),%esi$/;"	l
f010603b	obj/kern/kernel.asm	/^f010603b:	89 f0                	mov    %esi,%eax$/;"	l
f010603d	obj/kern/kernel.asm	/^f010603d:	3c 09                	cmp    $0x9,%al$/;"	l
f010603f	obj/kern/kernel.asm	/^f010603f:	77 08                	ja     f0106049 <strtol+0x86>$/;"	l
f0106041	obj/kern/kernel.asm	/^f0106041:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106044	obj/kern/kernel.asm	/^f0106044:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f0106047	obj/kern/kernel.asm	/^f0106047:	eb 20                	jmp    f0106069 <strtol+0xa6>$/;"	l
f0106049	obj/kern/kernel.asm	/^f0106049:	8d 71 9f             	lea    -0x61(%ecx),%esi$/;"	l
f010604c	obj/kern/kernel.asm	/^f010604c:	89 f0                	mov    %esi,%eax$/;"	l
f010604e	obj/kern/kernel.asm	/^f010604e:	3c 19                	cmp    $0x19,%al$/;"	l
f0106050	obj/kern/kernel.asm	/^f0106050:	77 08                	ja     f010605a <strtol+0x97>$/;"	l
f0106052	obj/kern/kernel.asm	/^f0106052:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106055	obj/kern/kernel.asm	/^f0106055:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058:	eb 0f                	jmp    f0106069 <strtol+0xa6>$/;"	l
f010605a	obj/kern/kernel.asm	/^f010605a:	8d 71 bf             	lea    -0x41(%ecx),%esi$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	89 f0                	mov    %esi,%eax$/;"	l
f010605f	obj/kern/kernel.asm	/^f010605f:	3c 19                	cmp    $0x19,%al$/;"	l
f0106061	obj/kern/kernel.asm	/^f0106061:	77 16                	ja     f0106079 <strtol+0xb6>$/;"	l
f0106063	obj/kern/kernel.asm	/^f0106063:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106066	obj/kern/kernel.asm	/^f0106066:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f0106069	obj/kern/kernel.asm	/^f0106069:	3b 4d 10             	cmp    0x10(%ebp),%ecx$/;"	l
f010606c	obj/kern/kernel.asm	/^f010606c:	7d 0f                	jge    f010607d <strtol+0xba>$/;"	l
f010606e	obj/kern/kernel.asm	/^f010606e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106071	obj/kern/kernel.asm	/^f0106071:	0f af 5d 10          	imul   0x10(%ebp),%ebx$/;"	l
f0106075	obj/kern/kernel.asm	/^f0106075:	01 cb                	add    %ecx,%ebx$/;"	l
f0106077	obj/kern/kernel.asm	/^f0106077:	eb bc                	jmp    f0106035 <strtol+0x72>$/;"	l
f0106079	obj/kern/kernel.asm	/^f0106079:	89 d8                	mov    %ebx,%eax$/;"	l
f010607b	obj/kern/kernel.asm	/^f010607b:	eb 02                	jmp    f010607f <strtol+0xbc>$/;"	l
f010607d	obj/kern/kernel.asm	/^f010607d:	89 d8                	mov    %ebx,%eax$/;"	l
f010607f	obj/kern/kernel.asm	/^f010607f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0106083	obj/kern/kernel.asm	/^f0106083:	74 05                	je     f010608a <strtol+0xc7>$/;"	l
f0106085	obj/kern/kernel.asm	/^f0106085:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	89 16                	mov    %edx,(%esi)$/;"	l
f010608a	obj/kern/kernel.asm	/^f010608a:	f7 d8                	neg    %eax$/;"	l
f010608c	obj/kern/kernel.asm	/^f010608c:	85 ff                	test   %edi,%edi$/;"	l
f010608e	obj/kern/kernel.asm	/^f010608e:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0106091	obj/kern/kernel.asm	/^f0106091:	5b                   	pop    %ebx$/;"	l
f0106092	obj/kern/kernel.asm	/^f0106092:	5e                   	pop    %esi$/;"	l
f0106093	obj/kern/kernel.asm	/^f0106093:	5f                   	pop    %edi$/;"	l
f0106094	obj/kern/kernel.asm	/^f0106094:	5d                   	pop    %ebp$/;"	l
f0106095	obj/kern/kernel.asm	/^f0106095:	c3                   	ret    $/;"	l
f0106096	obj/kern/kernel.asm	/^f0106096:	66 90                	xchg   %ax,%ax$/;"	l
f0106098	obj/kern/kernel.asm	/^f0106098 <mpentry_start>:$/;"	l
f0106098	obj/kern/kernel.asm	/^f0106098:	fa                   	cli    $/;"	l
f0106099	obj/kern/kernel.asm	/^f0106099:	31 c0                	xor    %eax,%eax$/;"	l
f010609b	obj/kern/kernel.asm	/^f010609b:	8e d8                	mov    %eax,%ds$/;"	l
f010609d	obj/kern/kernel.asm	/^f010609d:	8e c0                	mov    %eax,%es$/;"	l
f010609f	obj/kern/kernel.asm	/^f010609f:	8e d0                	mov    %eax,%ss$/;"	l
f01060a1	obj/kern/kernel.asm	/^f01060a1:	0f 01 16             	lgdtl  (%esi)$/;"	l
f01060a4	obj/kern/kernel.asm	/^f01060a4:	74 70                	je     f0106116 <mpentry_end+0x4>$/;"	l
f01060a6	obj/kern/kernel.asm	/^f01060a6:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f01060ad	obj/kern/kernel.asm	/^f01060ad:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01060b0	obj/kern/kernel.asm	/^f01060b0:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f01060b6	obj/kern/kernel.asm	/^f01060b6:	08 00                	or     %al,(%eax)$/;"	l
f01060b8	obj/kern/kernel.asm	/^f01060b8 <start32>:$/;"	l
f01060b8	obj/kern/kernel.asm	/^f01060b8:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f01060bc	obj/kern/kernel.asm	/^f01060bc:	8e d8                	mov    %eax,%ds$/;"	l
f01060be	obj/kern/kernel.asm	/^f01060be:	8e c0                	mov    %eax,%es$/;"	l
f01060c0	obj/kern/kernel.asm	/^f01060c0:	8e d0                	mov    %eax,%ss$/;"	l
f01060c2	obj/kern/kernel.asm	/^f01060c2:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f01060c6	obj/kern/kernel.asm	/^f01060c6:	8e e0                	mov    %eax,%fs$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	8e e8                	mov    %eax,%gs$/;"	l
f01060ca	obj/kern/kernel.asm	/^f01060ca:	b8 00 20 12 00       	mov    $0x122000,%eax$/;"	l
f01060cf	obj/kern/kernel.asm	/^f01060cf:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01060d5	obj/kern/kernel.asm	/^f01060d5:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f01060da	obj/kern/kernel.asm	/^f01060da:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01060dd	obj/kern/kernel.asm	/^f01060dd:	8b 25 10 fd 2f f0    	mov    0xf02ffd10,%esp$/;"	l
f01060e3	obj/kern/kernel.asm	/^f01060e3:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f01060e8	obj/kern/kernel.asm	/^f01060e8:	b8 7a 02 10 f0       	mov    $0xf010027a,%eax$/;"	l
f01060ed	obj/kern/kernel.asm	/^f01060ed:	ff d0                	call   *%eax$/;"	l
f01060ef	obj/kern/kernel.asm	/^f01060ef <spin>:$/;"	l
f01060ef	obj/kern/kernel.asm	/^f01060ef:	eb fe                	jmp    f01060ef <spin>$/;"	l
f01060f1	obj/kern/kernel.asm	/^f01060f1:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01060f4	obj/kern/kernel.asm	/^f01060f4 <gdt>:$/;"	l
f01060fc	obj/kern/kernel.asm	/^f01060fc:	ff                   	(bad)  $/;"	l
f01060fd	obj/kern/kernel.asm	/^f01060fd:	ff 00                	incl   (%eax)$/;"	l
f01060ff	obj/kern/kernel.asm	/^f01060ff:	00 00                	add    %al,(%eax)$/;"	l
f0106101	obj/kern/kernel.asm	/^f0106101:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0106108	obj/kern/kernel.asm	/^f0106108:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f010610c	obj/kern/kernel.asm	/^f010610c <gdtdesc>:$/;"	l
f010610c	obj/kern/kernel.asm	/^f010610c:	17                   	pop    %ss$/;"	l
f010610d	obj/kern/kernel.asm	/^f010610d:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0106112	obj/kern/kernel.asm	/^f0106112 <mpentry_end>:$/;"	l
f0106112	obj/kern/kernel.asm	/^f0106112:	90                   	nop$/;"	l
f0106113	obj/kern/kernel.asm	/^f0106113:	66 90                	xchg   %ax,%ax$/;"	l
f0106115	obj/kern/kernel.asm	/^f0106115:	66 90                	xchg   %ax,%ax$/;"	l
f0106117	obj/kern/kernel.asm	/^f0106117:	66 90                	xchg   %ax,%ax$/;"	l
f0106119	obj/kern/kernel.asm	/^f0106119:	66 90                	xchg   %ax,%ax$/;"	l
f010611b	obj/kern/kernel.asm	/^f010611b:	66 90                	xchg   %ax,%ax$/;"	l
f010611d	obj/kern/kernel.asm	/^f010611d:	66 90                	xchg   %ax,%ax$/;"	l
f010611f	obj/kern/kernel.asm	/^f010611f:	90                   	nop$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120 <mpsearch1>:$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120:	55                   	push   %ebp$/;"	l
f0106121	obj/kern/kernel.asm	/^f0106121:	89 e5                	mov    %esp,%ebp$/;"	l
f0106123	obj/kern/kernel.asm	/^f0106123:	56                   	push   %esi$/;"	l
f0106124	obj/kern/kernel.asm	/^f0106124:	53                   	push   %ebx$/;"	l
f0106125	obj/kern/kernel.asm	/^f0106125:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106128	obj/kern/kernel.asm	/^f0106128:	8b 0d 14 fd 2f f0    	mov    0xf02ffd14,%ecx$/;"	l
f010612e	obj/kern/kernel.asm	/^f010612e:	89 c3                	mov    %eax,%ebx$/;"	l
f0106130	obj/kern/kernel.asm	/^f0106130:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0106133	obj/kern/kernel.asm	/^f0106133:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	72 20                	jb     f0106157 <mpsearch1+0x37>$/;"	l
f0106137	obj/kern/kernel.asm	/^f0106137:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010613b	obj/kern/kernel.asm	/^f010613b:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f0106142	obj/kern/kernel.asm	/^f0106142:	f0 $/;"	l
f0106143	obj/kern/kernel.asm	/^f0106143:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f010614a	obj/kern/kernel.asm	/^f010614a:	00 $/;"	l
f010614b	obj/kern/kernel.asm	/^f010614b:	c7 04 24 9d 92 10 f0 	movl   $0xf010929d,(%esp)$/;"	l
f0106152	obj/kern/kernel.asm	/^f0106152:	e8 46 9f ff ff       	call   f010009d <_panic>$/;"	l
f0106157	obj/kern/kernel.asm	/^f0106157:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f010615d	obj/kern/kernel.asm	/^f010615d:	01 d0                	add    %edx,%eax$/;"	l
f010615f	obj/kern/kernel.asm	/^f010615f:	89 c2                	mov    %eax,%edx$/;"	l
f0106161	obj/kern/kernel.asm	/^f0106161:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	39 d1                	cmp    %edx,%ecx$/;"	l
f0106166	obj/kern/kernel.asm	/^f0106166:	77 20                	ja     f0106188 <mpsearch1+0x68>$/;"	l
f0106168	obj/kern/kernel.asm	/^f0106168:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010616c	obj/kern/kernel.asm	/^f010616c:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f0106173	obj/kern/kernel.asm	/^f0106173:	f0 $/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f010617b	obj/kern/kernel.asm	/^f010617b:	00 $/;"	l
f010617c	obj/kern/kernel.asm	/^f010617c:	c7 04 24 9d 92 10 f0 	movl   $0xf010929d,(%esp)$/;"	l
f0106183	obj/kern/kernel.asm	/^f0106183:	e8 15 9f ff ff       	call   f010009d <_panic>$/;"	l
f0106188	obj/kern/kernel.asm	/^f0106188:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f010618e	obj/kern/kernel.asm	/^f010618e:	eb 36                	jmp    f01061c6 <mpsearch1+0xa6>$/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106197	obj/kern/kernel.asm	/^f0106197:	00 $/;"	l
f0106198	obj/kern/kernel.asm	/^f0106198:	c7 44 24 04 ad 92 10 	movl   $0xf01092ad,0x4(%esp)$/;"	l
f010619f	obj/kern/kernel.asm	/^f010619f:	f0 $/;"	l
f01061a0	obj/kern/kernel.asm	/^f01061a0:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01061a3	obj/kern/kernel.asm	/^f01061a3:	e8 c5 fd ff ff       	call   f0105f6d <memcmp>$/;"	l
f01061a8	obj/kern/kernel.asm	/^f01061a8:	85 c0                	test   %eax,%eax$/;"	l
f01061aa	obj/kern/kernel.asm	/^f01061aa:	75 17                	jne    f01061c3 <mpsearch1+0xa3>$/;"	l
f01061ac	obj/kern/kernel.asm	/^f01061ac:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01061b1	obj/kern/kernel.asm	/^f01061b1:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f01061b5	obj/kern/kernel.asm	/^f01061b5:	01 c8                	add    %ecx,%eax$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	83 c2 01             	add    $0x1,%edx$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f01061bd	obj/kern/kernel.asm	/^f01061bd:	75 f2                	jne    f01061b1 <mpsearch1+0x91>$/;"	l
f01061bf	obj/kern/kernel.asm	/^f01061bf:	84 c0                	test   %al,%al$/;"	l
f01061c1	obj/kern/kernel.asm	/^f01061c1:	74 0e                	je     f01061d1 <mpsearch1+0xb1>$/;"	l
f01061c3	obj/kern/kernel.asm	/^f01061c3:	83 c3 10             	add    $0x10,%ebx$/;"	l
f01061c6	obj/kern/kernel.asm	/^f01061c6:	39 f3                	cmp    %esi,%ebx$/;"	l
f01061c8	obj/kern/kernel.asm	/^f01061c8:	72 c6                	jb     f0106190 <mpsearch1+0x70>$/;"	l
f01061ca	obj/kern/kernel.asm	/^f01061ca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01061cf	obj/kern/kernel.asm	/^f01061cf:	eb 02                	jmp    f01061d3 <mpsearch1+0xb3>$/;"	l
f01061d1	obj/kern/kernel.asm	/^f01061d1:	89 d8                	mov    %ebx,%eax$/;"	l
f01061d3	obj/kern/kernel.asm	/^f01061d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01061d6	obj/kern/kernel.asm	/^f01061d6:	5b                   	pop    %ebx$/;"	l
f01061d7	obj/kern/kernel.asm	/^f01061d7:	5e                   	pop    %esi$/;"	l
f01061d8	obj/kern/kernel.asm	/^f01061d8:	5d                   	pop    %ebp$/;"	l
f01061d9	obj/kern/kernel.asm	/^f01061d9:	c3                   	ret    $/;"	l
f01061da	obj/kern/kernel.asm	/^f01061da <mp_init>:$/;"	l
f01061da	obj/kern/kernel.asm	/^f01061da:	55                   	push   %ebp$/;"	l
f01061db	obj/kern/kernel.asm	/^f01061db:	89 e5                	mov    %esp,%ebp$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	57                   	push   %edi$/;"	l
f01061de	obj/kern/kernel.asm	/^f01061de:	56                   	push   %esi$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	53                   	push   %ebx$/;"	l
f01061e0	obj/kern/kernel.asm	/^f01061e0:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01061e3	obj/kern/kernel.asm	/^f01061e3:	c7 05 c0 03 30 f0 20 	movl   $0xf0300020,0xf03003c0$/;"	l
f01061ea	obj/kern/kernel.asm	/^f01061ea:	00 30 f0 $/;"	l
f01061ed	obj/kern/kernel.asm	/^f01061ed:	83 3d 14 fd 2f f0 00 	cmpl   $0x0,0xf02ffd14$/;"	l
f01061f4	obj/kern/kernel.asm	/^f01061f4:	75 24                	jne    f010621a <mp_init+0x40>$/;"	l
f01061f6	obj/kern/kernel.asm	/^f01061f6:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f01061fd	obj/kern/kernel.asm	/^f01061fd:	00 $/;"	l
f01061fe	obj/kern/kernel.asm	/^f01061fe:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f0106205	obj/kern/kernel.asm	/^f0106205:	f0 $/;"	l
f0106206	obj/kern/kernel.asm	/^f0106206:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f010620d	obj/kern/kernel.asm	/^f010620d:	00 $/;"	l
f010620e	obj/kern/kernel.asm	/^f010620e:	c7 04 24 9d 92 10 f0 	movl   $0xf010929d,(%esp)$/;"	l
f0106215	obj/kern/kernel.asm	/^f0106215:	e8 83 9e ff ff       	call   f010009d <_panic>$/;"	l
f010621a	obj/kern/kernel.asm	/^f010621a:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0106221	obj/kern/kernel.asm	/^f0106221:	85 c0                	test   %eax,%eax$/;"	l
f0106223	obj/kern/kernel.asm	/^f0106223:	74 16                	je     f010623b <mp_init+0x61>$/;"	l
f0106225	obj/kern/kernel.asm	/^f0106225:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106228	obj/kern/kernel.asm	/^f0106228:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010622d	obj/kern/kernel.asm	/^f010622d:	e8 ee fe ff ff       	call   f0106120 <mpsearch1>$/;"	l
f0106232	obj/kern/kernel.asm	/^f0106232:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106235	obj/kern/kernel.asm	/^f0106235:	85 c0                	test   %eax,%eax$/;"	l
f0106237	obj/kern/kernel.asm	/^f0106237:	75 3c                	jne    f0106275 <mp_init+0x9b>$/;"	l
f0106239	obj/kern/kernel.asm	/^f0106239:	eb 20                	jmp    f010625b <mp_init+0x81>$/;"	l
f010623b	obj/kern/kernel.asm	/^f010623b:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0106242	obj/kern/kernel.asm	/^f0106242:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0106245	obj/kern/kernel.asm	/^f0106245:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f010624a	obj/kern/kernel.asm	/^f010624a:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010624f	obj/kern/kernel.asm	/^f010624f:	e8 cc fe ff ff       	call   f0106120 <mpsearch1>$/;"	l
f0106254	obj/kern/kernel.asm	/^f0106254:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106257	obj/kern/kernel.asm	/^f0106257:	85 c0                	test   %eax,%eax$/;"	l
f0106259	obj/kern/kernel.asm	/^f0106259:	75 1a                	jne    f0106275 <mp_init+0x9b>$/;"	l
f010625b	obj/kern/kernel.asm	/^f010625b:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106260	obj/kern/kernel.asm	/^f0106260:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0106265	obj/kern/kernel.asm	/^f0106265:	e8 b6 fe ff ff       	call   f0106120 <mpsearch1>$/;"	l
f010626a	obj/kern/kernel.asm	/^f010626a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010626d	obj/kern/kernel.asm	/^f010626d:	85 c0                	test   %eax,%eax$/;"	l
f010626f	obj/kern/kernel.asm	/^f010626f:	0f 84 54 02 00 00    	je     f01064c9 <mp_init+0x2ef>$/;"	l
f0106275	obj/kern/kernel.asm	/^f0106275:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106278	obj/kern/kernel.asm	/^f0106278:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f010627b	obj/kern/kernel.asm	/^f010627b:	85 f6                	test   %esi,%esi$/;"	l
f010627d	obj/kern/kernel.asm	/^f010627d:	74 06                	je     f0106285 <mp_init+0xab>$/;"	l
f010627f	obj/kern/kernel.asm	/^f010627f:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0106283	obj/kern/kernel.asm	/^f0106283:	74 11                	je     f0106296 <mp_init+0xbc>$/;"	l
f0106285	obj/kern/kernel.asm	/^f0106285:	c7 04 24 10 91 10 f0 	movl   $0xf0109110,(%esp)$/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c:	e8 d7 dd ff ff       	call   f0104068 <cprintf>$/;"	l
f0106291	obj/kern/kernel.asm	/^f0106291:	e9 33 02 00 00       	jmp    f01064c9 <mp_init+0x2ef>$/;"	l
f0106296	obj/kern/kernel.asm	/^f0106296:	89 f0                	mov    %esi,%eax$/;"	l
f0106298	obj/kern/kernel.asm	/^f0106298:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010629b	obj/kern/kernel.asm	/^f010629b:	3b 05 14 fd 2f f0    	cmp    0xf02ffd14,%eax$/;"	l
f01062a1	obj/kern/kernel.asm	/^f01062a1:	72 20                	jb     f01062c3 <mp_init+0xe9>$/;"	l
f01062a3	obj/kern/kernel.asm	/^f01062a3:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae:	f0 $/;"	l
f01062af	obj/kern/kernel.asm	/^f01062af:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f01062b6	obj/kern/kernel.asm	/^f01062b6:	00 $/;"	l
f01062b7	obj/kern/kernel.asm	/^f01062b7:	c7 04 24 9d 92 10 f0 	movl   $0xf010929d,(%esp)$/;"	l
f01062be	obj/kern/kernel.asm	/^f01062be:	e8 da 9d ff ff       	call   f010009d <_panic>$/;"	l
f01062c3	obj/kern/kernel.asm	/^f01062c3:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f01062c9	obj/kern/kernel.asm	/^f01062c9:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f01062d0	obj/kern/kernel.asm	/^f01062d0:	00 $/;"	l
f01062d1	obj/kern/kernel.asm	/^f01062d1:	c7 44 24 04 b2 92 10 	movl   $0xf01092b2,0x4(%esp)$/;"	l
f01062d8	obj/kern/kernel.asm	/^f01062d8:	f0 $/;"	l
f01062d9	obj/kern/kernel.asm	/^f01062d9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01062dc	obj/kern/kernel.asm	/^f01062dc:	e8 8c fc ff ff       	call   f0105f6d <memcmp>$/;"	l
f01062e1	obj/kern/kernel.asm	/^f01062e1:	85 c0                	test   %eax,%eax$/;"	l
f01062e3	obj/kern/kernel.asm	/^f01062e3:	74 11                	je     f01062f6 <mp_init+0x11c>$/;"	l
f01062e5	obj/kern/kernel.asm	/^f01062e5:	c7 04 24 40 91 10 f0 	movl   $0xf0109140,(%esp)$/;"	l
f01062ec	obj/kern/kernel.asm	/^f01062ec:	e8 77 dd ff ff       	call   f0104068 <cprintf>$/;"	l
f01062f1	obj/kern/kernel.asm	/^f01062f1:	e9 d3 01 00 00       	jmp    f01064c9 <mp_init+0x2ef>$/;"	l
f01062f6	obj/kern/kernel.asm	/^f01062f6:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f01062fa	obj/kern/kernel.asm	/^f01062fa:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0106301	obj/kern/kernel.asm	/^f0106301:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106306	obj/kern/kernel.asm	/^f0106306:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010630b	obj/kern/kernel.asm	/^f010630b:	eb 0d                	jmp    f010631a <mp_init+0x140>$/;"	l
f010630d	obj/kern/kernel.asm	/^f010630d:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f0106314	obj/kern/kernel.asm	/^f0106314:	f0 $/;"	l
f0106315	obj/kern/kernel.asm	/^f0106315:	01 ca                	add    %ecx,%edx$/;"	l
f0106317	obj/kern/kernel.asm	/^f0106317:	83 c0 01             	add    $0x1,%eax$/;"	l
f010631a	obj/kern/kernel.asm	/^f010631a:	39 c7                	cmp    %eax,%edi$/;"	l
f010631c	obj/kern/kernel.asm	/^f010631c:	7f ef                	jg     f010630d <mp_init+0x133>$/;"	l
f010631e	obj/kern/kernel.asm	/^f010631e:	84 d2                	test   %dl,%dl$/;"	l
f0106320	obj/kern/kernel.asm	/^f0106320:	74 11                	je     f0106333 <mp_init+0x159>$/;"	l
f0106322	obj/kern/kernel.asm	/^f0106322:	c7 04 24 74 91 10 f0 	movl   $0xf0109174,(%esp)$/;"	l
f0106329	obj/kern/kernel.asm	/^f0106329:	e8 3a dd ff ff       	call   f0104068 <cprintf>$/;"	l
f010632e	obj/kern/kernel.asm	/^f010632e:	e9 96 01 00 00       	jmp    f01064c9 <mp_init+0x2ef>$/;"	l
f0106333	obj/kern/kernel.asm	/^f0106333:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f0106337	obj/kern/kernel.asm	/^f0106337:	3c 04                	cmp    $0x4,%al$/;"	l
f0106339	obj/kern/kernel.asm	/^f0106339:	74 1f                	je     f010635a <mp_init+0x180>$/;"	l
f010633b	obj/kern/kernel.asm	/^f010633b:	3c 01                	cmp    $0x1,%al$/;"	l
f010633d	obj/kern/kernel.asm	/^f010633d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106340	obj/kern/kernel.asm	/^f0106340:	74 18                	je     f010635a <mp_init+0x180>$/;"	l
f0106342	obj/kern/kernel.asm	/^f0106342:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106345	obj/kern/kernel.asm	/^f0106345:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106349	obj/kern/kernel.asm	/^f0106349:	c7 04 24 98 91 10 f0 	movl   $0xf0109198,(%esp)$/;"	l
f0106350	obj/kern/kernel.asm	/^f0106350:	e8 13 dd ff ff       	call   f0104068 <cprintf>$/;"	l
f0106355	obj/kern/kernel.asm	/^f0106355:	e9 6f 01 00 00       	jmp    f01064c9 <mp_init+0x2ef>$/;"	l
f010635a	obj/kern/kernel.asm	/^f010635a:	0f b7 73 28          	movzwl 0x28(%ebx),%esi$/;"	l
f010635e	obj/kern/kernel.asm	/^f010635e:	0f b7 7d e2          	movzwl -0x1e(%ebp),%edi$/;"	l
f0106362	obj/kern/kernel.asm	/^f0106362:	01 df                	add    %ebx,%edi$/;"	l
f0106364	obj/kern/kernel.asm	/^f0106364:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106369	obj/kern/kernel.asm	/^f0106369:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010636e	obj/kern/kernel.asm	/^f010636e:	eb 09                	jmp    f0106379 <mp_init+0x19f>$/;"	l
f0106370	obj/kern/kernel.asm	/^f0106370:	0f b6 0c 07          	movzbl (%edi,%eax,1),%ecx$/;"	l
f0106374	obj/kern/kernel.asm	/^f0106374:	01 ca                	add    %ecx,%edx$/;"	l
f0106376	obj/kern/kernel.asm	/^f0106376:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106379	obj/kern/kernel.asm	/^f0106379:	39 c6                	cmp    %eax,%esi$/;"	l
f010637b	obj/kern/kernel.asm	/^f010637b:	7f f3                	jg     f0106370 <mp_init+0x196>$/;"	l
f010637d	obj/kern/kernel.asm	/^f010637d:	02 53 2a             	add    0x2a(%ebx),%dl$/;"	l
f0106380	obj/kern/kernel.asm	/^f0106380:	84 d2                	test   %dl,%dl$/;"	l
f0106382	obj/kern/kernel.asm	/^f0106382:	74 11                	je     f0106395 <mp_init+0x1bb>$/;"	l
f0106384	obj/kern/kernel.asm	/^f0106384:	c7 04 24 b8 91 10 f0 	movl   $0xf01091b8,(%esp)$/;"	l
f010638b	obj/kern/kernel.asm	/^f010638b:	e8 d8 dc ff ff       	call   f0104068 <cprintf>$/;"	l
f0106390	obj/kern/kernel.asm	/^f0106390:	e9 34 01 00 00       	jmp    f01064c9 <mp_init+0x2ef>$/;"	l
f0106395	obj/kern/kernel.asm	/^f0106395:	85 db                	test   %ebx,%ebx$/;"	l
f0106397	obj/kern/kernel.asm	/^f0106397:	0f 84 2c 01 00 00    	je     f01064c9 <mp_init+0x2ef>$/;"	l
f010639d	obj/kern/kernel.asm	/^f010639d:	c7 05 00 00 30 f0 01 	movl   $0x1,0xf0300000$/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4:	00 00 00 $/;"	l
f01063a7	obj/kern/kernel.asm	/^f01063a7:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f01063aa	obj/kern/kernel.asm	/^f01063aa:	a3 00 10 34 f0       	mov    %eax,0xf0341000$/;"	l
f01063af	obj/kern/kernel.asm	/^f01063af:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f01063b2	obj/kern/kernel.asm	/^f01063b2:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01063b7	obj/kern/kernel.asm	/^f01063b7:	e9 86 00 00 00       	jmp    f0106442 <mp_init+0x268>$/;"	l
f01063bc	obj/kern/kernel.asm	/^f01063bc:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f01063bf	obj/kern/kernel.asm	/^f01063bf:	84 c0                	test   %al,%al$/;"	l
f01063c1	obj/kern/kernel.asm	/^f01063c1:	74 06                	je     f01063c9 <mp_init+0x1ef>$/;"	l
f01063c3	obj/kern/kernel.asm	/^f01063c3:	3c 04                	cmp    $0x4,%al$/;"	l
f01063c5	obj/kern/kernel.asm	/^f01063c5:	77 57                	ja     f010641e <mp_init+0x244>$/;"	l
f01063c7	obj/kern/kernel.asm	/^f01063c7:	eb 50                	jmp    f0106419 <mp_init+0x23f>$/;"	l
f01063c9	obj/kern/kernel.asm	/^f01063c9:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f01063cd	obj/kern/kernel.asm	/^f01063cd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0:	74 11                	je     f01063e3 <mp_init+0x209>$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	6b 05 c4 03 30 f0 74 	imul   $0x74,0xf03003c4,%eax$/;"	l
f01063d9	obj/kern/kernel.asm	/^f01063d9:	05 20 00 30 f0       	add    $0xf0300020,%eax$/;"	l
f01063de	obj/kern/kernel.asm	/^f01063de:	a3 c0 03 30 f0       	mov    %eax,0xf03003c0$/;"	l
f01063e3	obj/kern/kernel.asm	/^f01063e3:	a1 c4 03 30 f0       	mov    0xf03003c4,%eax$/;"	l
f01063e8	obj/kern/kernel.asm	/^f01063e8:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f01063eb	obj/kern/kernel.asm	/^f01063eb:	7f 13                	jg     f0106400 <mp_init+0x226>$/;"	l
f01063ed	obj/kern/kernel.asm	/^f01063ed:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01063f0	obj/kern/kernel.asm	/^f01063f0:	88 82 20 00 30 f0    	mov    %al,-0xfcfffe0(%edx)$/;"	l
f01063f6	obj/kern/kernel.asm	/^f01063f6:	83 c0 01             	add    $0x1,%eax$/;"	l
f01063f9	obj/kern/kernel.asm	/^f01063f9:	a3 c4 03 30 f0       	mov    %eax,0xf03003c4$/;"	l
f01063fe	obj/kern/kernel.asm	/^f01063fe:	eb 14                	jmp    f0106414 <mp_init+0x23a>$/;"	l
f0106400	obj/kern/kernel.asm	/^f0106400:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106408	obj/kern/kernel.asm	/^f0106408:	c7 04 24 e8 91 10 f0 	movl   $0xf01091e8,(%esp)$/;"	l
f010640f	obj/kern/kernel.asm	/^f010640f:	e8 54 dc ff ff       	call   f0104068 <cprintf>$/;"	l
f0106414	obj/kern/kernel.asm	/^f0106414:	83 c7 14             	add    $0x14,%edi$/;"	l
f0106417	obj/kern/kernel.asm	/^f0106417:	eb 26                	jmp    f010643f <mp_init+0x265>$/;"	l
f0106419	obj/kern/kernel.asm	/^f0106419:	83 c7 08             	add    $0x8,%edi$/;"	l
f010641c	obj/kern/kernel.asm	/^f010641c:	eb 21                	jmp    f010643f <mp_init+0x265>$/;"	l
f010641e	obj/kern/kernel.asm	/^f010641e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106421	obj/kern/kernel.asm	/^f0106421:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106425	obj/kern/kernel.asm	/^f0106425:	c7 04 24 10 92 10 f0 	movl   $0xf0109210,(%esp)$/;"	l
f010642c	obj/kern/kernel.asm	/^f010642c:	e8 37 dc ff ff       	call   f0104068 <cprintf>$/;"	l
f0106431	obj/kern/kernel.asm	/^f0106431:	c7 05 00 00 30 f0 00 	movl   $0x0,0xf0300000$/;"	l
f0106438	obj/kern/kernel.asm	/^f0106438:	00 00 00 $/;"	l
f010643b	obj/kern/kernel.asm	/^f010643b:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f010643f	obj/kern/kernel.asm	/^f010643f:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106442	obj/kern/kernel.asm	/^f0106442:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0106446	obj/kern/kernel.asm	/^f0106446:	39 c6                	cmp    %eax,%esi$/;"	l
f0106448	obj/kern/kernel.asm	/^f0106448:	0f 82 6e ff ff ff    	jb     f01063bc <mp_init+0x1e2>$/;"	l
f010644e	obj/kern/kernel.asm	/^f010644e:	a1 c0 03 30 f0       	mov    0xf03003c0,%eax$/;"	l
f0106453	obj/kern/kernel.asm	/^f0106453:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f010645a	obj/kern/kernel.asm	/^f010645a:	83 3d 00 00 30 f0 00 	cmpl   $0x0,0xf0300000$/;"	l
f0106461	obj/kern/kernel.asm	/^f0106461:	75 22                	jne    f0106485 <mp_init+0x2ab>$/;"	l
f0106463	obj/kern/kernel.asm	/^f0106463:	c7 05 c4 03 30 f0 01 	movl   $0x1,0xf03003c4$/;"	l
f010646a	obj/kern/kernel.asm	/^f010646a:	00 00 00 $/;"	l
f010646d	obj/kern/kernel.asm	/^f010646d:	c7 05 00 10 34 f0 00 	movl   $0x0,0xf0341000$/;"	l
f0106474	obj/kern/kernel.asm	/^f0106474:	00 00 00 $/;"	l
f0106477	obj/kern/kernel.asm	/^f0106477:	c7 04 24 30 92 10 f0 	movl   $0xf0109230,(%esp)$/;"	l
f010647e	obj/kern/kernel.asm	/^f010647e:	e8 e5 db ff ff       	call   f0104068 <cprintf>$/;"	l
f0106483	obj/kern/kernel.asm	/^f0106483:	eb 44                	jmp    f01064c9 <mp_init+0x2ef>$/;"	l
f0106485	obj/kern/kernel.asm	/^f0106485:	8b 15 c4 03 30 f0    	mov    0xf03003c4,%edx$/;"	l
f010648b	obj/kern/kernel.asm	/^f010648b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010648f	obj/kern/kernel.asm	/^f010648f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106492	obj/kern/kernel.asm	/^f0106492:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106496	obj/kern/kernel.asm	/^f0106496:	c7 04 24 b7 92 10 f0 	movl   $0xf01092b7,(%esp)$/;"	l
f010649d	obj/kern/kernel.asm	/^f010649d:	e8 c6 db ff ff       	call   f0104068 <cprintf>$/;"	l
f01064a2	obj/kern/kernel.asm	/^f01064a2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01064a5	obj/kern/kernel.asm	/^f01064a5:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f01064a9	obj/kern/kernel.asm	/^f01064a9:	74 1e                	je     f01064c9 <mp_init+0x2ef>$/;"	l
f01064ab	obj/kern/kernel.asm	/^f01064ab:	c7 04 24 5c 92 10 f0 	movl   $0xf010925c,(%esp)$/;"	l
f01064b2	obj/kern/kernel.asm	/^f01064b2:	e8 b1 db ff ff       	call   f0104068 <cprintf>$/;"	l
f01064b7	obj/kern/kernel.asm	/^f01064b7:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f01064bc	obj/kern/kernel.asm	/^f01064bc:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f01064c1	obj/kern/kernel.asm	/^f01064c1:	ee                   	out    %al,(%dx)$/;"	l
f01064c2	obj/kern/kernel.asm	/^f01064c2:	b2 23                	mov    $0x23,%dl$/;"	l
f01064c4	obj/kern/kernel.asm	/^f01064c4:	ec                   	in     (%dx),%al$/;"	l
f01064c5	obj/kern/kernel.asm	/^f01064c5:	83 c8 01             	or     $0x1,%eax$/;"	l
f01064c8	obj/kern/kernel.asm	/^f01064c8:	ee                   	out    %al,(%dx)$/;"	l
f01064c9	obj/kern/kernel.asm	/^f01064c9:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01064cc	obj/kern/kernel.asm	/^f01064cc:	5b                   	pop    %ebx$/;"	l
f01064cd	obj/kern/kernel.asm	/^f01064cd:	5e                   	pop    %esi$/;"	l
f01064ce	obj/kern/kernel.asm	/^f01064ce:	5f                   	pop    %edi$/;"	l
f01064cf	obj/kern/kernel.asm	/^f01064cf:	5d                   	pop    %ebp$/;"	l
f01064d0	obj/kern/kernel.asm	/^f01064d0:	c3                   	ret    $/;"	l
f01064d1	obj/kern/kernel.asm	/^f01064d1 <lapicw>:$/;"	l
f01064d1	obj/kern/kernel.asm	/^f01064d1:	55                   	push   %ebp$/;"	l
f01064d2	obj/kern/kernel.asm	/^f01064d2:	89 e5                	mov    %esp,%ebp$/;"	l
f01064d4	obj/kern/kernel.asm	/^f01064d4:	8b 0d 04 10 34 f0    	mov    0xf0341004,%ecx$/;"	l
f01064da	obj/kern/kernel.asm	/^f01064da:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f01064dd	obj/kern/kernel.asm	/^f01064dd:	89 10                	mov    %edx,(%eax)$/;"	l
f01064df	obj/kern/kernel.asm	/^f01064df:	a1 04 10 34 f0       	mov    0xf0341004,%eax$/;"	l
f01064e4	obj/kern/kernel.asm	/^f01064e4:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f01064e7	obj/kern/kernel.asm	/^f01064e7:	5d                   	pop    %ebp$/;"	l
f01064e8	obj/kern/kernel.asm	/^f01064e8:	c3                   	ret    $/;"	l
f01064e9	obj/kern/kernel.asm	/^f01064e9 <cpunum>:$/;"	l
f01064e9	obj/kern/kernel.asm	/^f01064e9:	55                   	push   %ebp$/;"	l
f01064ea	obj/kern/kernel.asm	/^f01064ea:	89 e5                	mov    %esp,%ebp$/;"	l
f01064ec	obj/kern/kernel.asm	/^f01064ec:	a1 04 10 34 f0       	mov    0xf0341004,%eax$/;"	l
f01064f1	obj/kern/kernel.asm	/^f01064f1:	85 c0                	test   %eax,%eax$/;"	l
f01064f3	obj/kern/kernel.asm	/^f01064f3:	74 08                	je     f01064fd <cpunum+0x14>$/;"	l
f01064f5	obj/kern/kernel.asm	/^f01064f5:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f01064f8	obj/kern/kernel.asm	/^f01064f8:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f01064fb	obj/kern/kernel.asm	/^f01064fb:	eb 05                	jmp    f0106502 <cpunum+0x19>$/;"	l
f01064fd	obj/kern/kernel.asm	/^f01064fd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106502	obj/kern/kernel.asm	/^f0106502:	5d                   	pop    %ebp$/;"	l
f0106503	obj/kern/kernel.asm	/^f0106503:	c3                   	ret    $/;"	l
f0106504	obj/kern/kernel.asm	/^f0106504 <lapic_init>:$/;"	l
f0106504	obj/kern/kernel.asm	/^f0106504:	a1 00 10 34 f0       	mov    0xf0341000,%eax$/;"	l
f0106509	obj/kern/kernel.asm	/^f0106509:	85 c0                	test   %eax,%eax$/;"	l
f010650b	obj/kern/kernel.asm	/^f010650b:	0f 84 23 01 00 00    	je     f0106634 <lapic_init+0x130>$/;"	l
f0106511	obj/kern/kernel.asm	/^f0106511:	55                   	push   %ebp$/;"	l
f0106512	obj/kern/kernel.asm	/^f0106512:	89 e5                	mov    %esp,%ebp$/;"	l
f0106514	obj/kern/kernel.asm	/^f0106514:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106517	obj/kern/kernel.asm	/^f0106517:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010651e	obj/kern/kernel.asm	/^f010651e:	00 $/;"	l
f010651f	obj/kern/kernel.asm	/^f010651f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106522	obj/kern/kernel.asm	/^f0106522:	e8 d5 af ff ff       	call   f01014fc <mmio_map_region>$/;"	l
f0106527	obj/kern/kernel.asm	/^f0106527:	a3 04 10 34 f0       	mov    %eax,0xf0341004$/;"	l
f010652c	obj/kern/kernel.asm	/^f010652c:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0106531	obj/kern/kernel.asm	/^f0106531:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0106536	obj/kern/kernel.asm	/^f0106536:	e8 96 ff ff ff       	call   f01064d1 <lapicw>$/;"	l
f010653b	obj/kern/kernel.asm	/^f010653b:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0106540	obj/kern/kernel.asm	/^f0106540:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0106545	obj/kern/kernel.asm	/^f0106545:	e8 87 ff ff ff       	call   f01064d1 <lapicw>$/;"	l
f010654a	obj/kern/kernel.asm	/^f010654a:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f010654f	obj/kern/kernel.asm	/^f010654f:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0106554	obj/kern/kernel.asm	/^f0106554:	e8 78 ff ff ff       	call   f01064d1 <lapicw>$/;"	l
f0106559	obj/kern/kernel.asm	/^f0106559:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f010655e	obj/kern/kernel.asm	/^f010655e:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0106563	obj/kern/kernel.asm	/^f0106563:	e8 69 ff ff ff       	call   f01064d1 <lapicw>$/;"	l
f0106568	obj/kern/kernel.asm	/^f0106568:	e8 7c ff ff ff       	call   f01064e9 <cpunum>$/;"	l
f010656d	obj/kern/kernel.asm	/^f010656d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106570	obj/kern/kernel.asm	/^f0106570:	05 20 00 30 f0       	add    $0xf0300020,%eax$/;"	l
f0106575	obj/kern/kernel.asm	/^f0106575:	39 05 c0 03 30 f0    	cmp    %eax,0xf03003c0$/;"	l
f010657b	obj/kern/kernel.asm	/^f010657b:	74 0f                	je     f010658c <lapic_init+0x88>$/;"	l
f010657d	obj/kern/kernel.asm	/^f010657d:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106582	obj/kern/kernel.asm	/^f0106582:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106587	obj/kern/kernel.asm	/^f0106587:	e8 45 ff ff ff       	call   f01064d1 <lapicw>$/;"	l
f010658c	obj/kern/kernel.asm	/^f010658c:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106591	obj/kern/kernel.asm	/^f0106591:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106596	obj/kern/kernel.asm	/^f0106596:	e8 36 ff ff ff       	call   f01064d1 <lapicw>$/;"	l
f010659b	obj/kern/kernel.asm	/^f010659b:	a1 04 10 34 f0       	mov    0xf0341004,%eax$/;"	l
f01065a0	obj/kern/kernel.asm	/^f01065a0:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f01065a3	obj/kern/kernel.asm	/^f01065a3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01065a6	obj/kern/kernel.asm	/^f01065a6:	3c 03                	cmp    $0x3,%al$/;"	l
f01065a8	obj/kern/kernel.asm	/^f01065a8:	76 0f                	jbe    f01065b9 <lapic_init+0xb5>$/;"	l
f01065aa	obj/kern/kernel.asm	/^f01065aa:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01065af	obj/kern/kernel.asm	/^f01065af:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f01065b4	obj/kern/kernel.asm	/^f01065b4:	e8 18 ff ff ff       	call   f01064d1 <lapicw>$/;"	l
f01065b9	obj/kern/kernel.asm	/^f01065b9:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f01065be	obj/kern/kernel.asm	/^f01065be:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f01065c3	obj/kern/kernel.asm	/^f01065c3:	e8 09 ff ff ff       	call   f01064d1 <lapicw>$/;"	l
f01065c8	obj/kern/kernel.asm	/^f01065c8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01065cd	obj/kern/kernel.asm	/^f01065cd:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01065d2	obj/kern/kernel.asm	/^f01065d2:	e8 fa fe ff ff       	call   f01064d1 <lapicw>$/;"	l
f01065d7	obj/kern/kernel.asm	/^f01065d7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01065dc	obj/kern/kernel.asm	/^f01065dc:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01065e1	obj/kern/kernel.asm	/^f01065e1:	e8 eb fe ff ff       	call   f01064d1 <lapicw>$/;"	l
f01065e6	obj/kern/kernel.asm	/^f01065e6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01065eb	obj/kern/kernel.asm	/^f01065eb:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01065f0	obj/kern/kernel.asm	/^f01065f0:	e8 dc fe ff ff       	call   f01064d1 <lapicw>$/;"	l
f01065f5	obj/kern/kernel.asm	/^f01065f5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01065fa	obj/kern/kernel.asm	/^f01065fa:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01065ff	obj/kern/kernel.asm	/^f01065ff:	e8 cd fe ff ff       	call   f01064d1 <lapicw>$/;"	l
f0106604	obj/kern/kernel.asm	/^f0106604:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0106609	obj/kern/kernel.asm	/^f0106609:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f010660e	obj/kern/kernel.asm	/^f010660e:	e8 be fe ff ff       	call   f01064d1 <lapicw>$/;"	l
f0106613	obj/kern/kernel.asm	/^f0106613:	8b 15 04 10 34 f0    	mov    0xf0341004,%edx$/;"	l
f0106619	obj/kern/kernel.asm	/^f0106619:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f010661f	obj/kern/kernel.asm	/^f010661f:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106622	obj/kern/kernel.asm	/^f0106622:	75 f5                	jne    f0106619 <lapic_init+0x115>$/;"	l
f0106624	obj/kern/kernel.asm	/^f0106624:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106629	obj/kern/kernel.asm	/^f0106629:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010662e	obj/kern/kernel.asm	/^f010662e:	e8 9e fe ff ff       	call   f01064d1 <lapicw>$/;"	l
f0106633	obj/kern/kernel.asm	/^f0106633:	c9                   	leave  $/;"	l
f0106634	obj/kern/kernel.asm	/^f0106634:	f3 c3                	repz ret $/;"	l
f0106636	obj/kern/kernel.asm	/^f0106636 <lapic_eoi>:$/;"	l
f0106636	obj/kern/kernel.asm	/^f0106636:	83 3d 04 10 34 f0 00 	cmpl   $0x0,0xf0341004$/;"	l
f010663d	obj/kern/kernel.asm	/^f010663d:	74 13                	je     f0106652 <lapic_eoi+0x1c>$/;"	l
f010663f	obj/kern/kernel.asm	/^f010663f:	55                   	push   %ebp$/;"	l
f0106640	obj/kern/kernel.asm	/^f0106640:	89 e5                	mov    %esp,%ebp$/;"	l
f0106642	obj/kern/kernel.asm	/^f0106642:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106647	obj/kern/kernel.asm	/^f0106647:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c:	e8 80 fe ff ff       	call   f01064d1 <lapicw>$/;"	l
f0106651	obj/kern/kernel.asm	/^f0106651:	5d                   	pop    %ebp$/;"	l
f0106652	obj/kern/kernel.asm	/^f0106652:	f3 c3                	repz ret $/;"	l
f0106654	obj/kern/kernel.asm	/^f0106654 <lapic_startap>:$/;"	l
f0106654	obj/kern/kernel.asm	/^f0106654:	55                   	push   %ebp$/;"	l
f0106655	obj/kern/kernel.asm	/^f0106655:	89 e5                	mov    %esp,%ebp$/;"	l
f0106657	obj/kern/kernel.asm	/^f0106657:	56                   	push   %esi$/;"	l
f0106658	obj/kern/kernel.asm	/^f0106658:	53                   	push   %ebx$/;"	l
f0106659	obj/kern/kernel.asm	/^f0106659:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010665c	obj/kern/kernel.asm	/^f010665c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010665f	obj/kern/kernel.asm	/^f010665f:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106662	obj/kern/kernel.asm	/^f0106662:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0106667	obj/kern/kernel.asm	/^f0106667:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010666c	obj/kern/kernel.asm	/^f010666c:	ee                   	out    %al,(%dx)$/;"	l
f010666d	obj/kern/kernel.asm	/^f010666d:	b2 71                	mov    $0x71,%dl$/;"	l
f010666f	obj/kern/kernel.asm	/^f010666f:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106674	obj/kern/kernel.asm	/^f0106674:	ee                   	out    %al,(%dx)$/;"	l
f0106675	obj/kern/kernel.asm	/^f0106675:	83 3d 14 fd 2f f0 00 	cmpl   $0x0,0xf02ffd14$/;"	l
f010667c	obj/kern/kernel.asm	/^f010667c:	75 24                	jne    f01066a2 <lapic_startap+0x4e>$/;"	l
f010667e	obj/kern/kernel.asm	/^f010667e:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f0106685	obj/kern/kernel.asm	/^f0106685:	00 $/;"	l
f0106686	obj/kern/kernel.asm	/^f0106686:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f010668d	obj/kern/kernel.asm	/^f010668d:	f0 $/;"	l
f010668e	obj/kern/kernel.asm	/^f010668e:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
f0106695	obj/kern/kernel.asm	/^f0106695:	00 $/;"	l
f0106696	obj/kern/kernel.asm	/^f0106696:	c7 04 24 d4 92 10 f0 	movl   $0xf01092d4,(%esp)$/;"	l
f010669d	obj/kern/kernel.asm	/^f010669d:	e8 fb 99 ff ff       	call   f010009d <_panic>$/;"	l
f01066a2	obj/kern/kernel.asm	/^f01066a2:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f01066a9	obj/kern/kernel.asm	/^f01066a9:	00 00 $/;"	l
f01066ab	obj/kern/kernel.asm	/^f01066ab:	89 f0                	mov    %esi,%eax$/;"	l
f01066ad	obj/kern/kernel.asm	/^f01066ad:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f01066b0	obj/kern/kernel.asm	/^f01066b0:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f01066b6	obj/kern/kernel.asm	/^f01066b6:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f01066b9	obj/kern/kernel.asm	/^f01066b9:	89 da                	mov    %ebx,%edx$/;"	l
f01066bb	obj/kern/kernel.asm	/^f01066bb:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01066c0	obj/kern/kernel.asm	/^f01066c0:	e8 0c fe ff ff       	call   f01064d1 <lapicw>$/;"	l
f01066c5	obj/kern/kernel.asm	/^f01066c5:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f01066ca	obj/kern/kernel.asm	/^f01066ca:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01066cf	obj/kern/kernel.asm	/^f01066cf:	e8 fd fd ff ff       	call   f01064d1 <lapicw>$/;"	l
f01066d4	obj/kern/kernel.asm	/^f01066d4:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f01066d9	obj/kern/kernel.asm	/^f01066d9:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01066de	obj/kern/kernel.asm	/^f01066de:	e8 ee fd ff ff       	call   f01064d1 <lapicw>$/;"	l
f01066e3	obj/kern/kernel.asm	/^f01066e3:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f01066e6	obj/kern/kernel.asm	/^f01066e6:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f01066ec	obj/kern/kernel.asm	/^f01066ec:	89 da                	mov    %ebx,%edx$/;"	l
f01066ee	obj/kern/kernel.asm	/^f01066ee:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01066f3	obj/kern/kernel.asm	/^f01066f3:	e8 d9 fd ff ff       	call   f01064d1 <lapicw>$/;"	l
f01066f8	obj/kern/kernel.asm	/^f01066f8:	89 f2                	mov    %esi,%edx$/;"	l
f01066fa	obj/kern/kernel.asm	/^f01066fa:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01066ff	obj/kern/kernel.asm	/^f01066ff:	e8 cd fd ff ff       	call   f01064d1 <lapicw>$/;"	l
f0106704	obj/kern/kernel.asm	/^f0106704:	89 da                	mov    %ebx,%edx$/;"	l
f0106706	obj/kern/kernel.asm	/^f0106706:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f010670b	obj/kern/kernel.asm	/^f010670b:	e8 c1 fd ff ff       	call   f01064d1 <lapicw>$/;"	l
f0106710	obj/kern/kernel.asm	/^f0106710:	89 f2                	mov    %esi,%edx$/;"	l
f0106712	obj/kern/kernel.asm	/^f0106712:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106717	obj/kern/kernel.asm	/^f0106717:	e8 b5 fd ff ff       	call   f01064d1 <lapicw>$/;"	l
f010671c	obj/kern/kernel.asm	/^f010671c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010671f	obj/kern/kernel.asm	/^f010671f:	5b                   	pop    %ebx$/;"	l
f0106720	obj/kern/kernel.asm	/^f0106720:	5e                   	pop    %esi$/;"	l
f0106721	obj/kern/kernel.asm	/^f0106721:	5d                   	pop    %ebp$/;"	l
f0106722	obj/kern/kernel.asm	/^f0106722:	c3                   	ret    $/;"	l
f0106723	obj/kern/kernel.asm	/^f0106723 <lapic_ipi>:$/;"	l
f0106723	obj/kern/kernel.asm	/^f0106723:	55                   	push   %ebp$/;"	l
f0106724	obj/kern/kernel.asm	/^f0106724:	89 e5                	mov    %esp,%ebp$/;"	l
f0106726	obj/kern/kernel.asm	/^f0106726:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106729	obj/kern/kernel.asm	/^f0106729:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f010672f	obj/kern/kernel.asm	/^f010672f:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106734	obj/kern/kernel.asm	/^f0106734:	e8 98 fd ff ff       	call   f01064d1 <lapicw>$/;"	l
f0106739	obj/kern/kernel.asm	/^f0106739:	8b 15 04 10 34 f0    	mov    0xf0341004,%edx$/;"	l
f010673f	obj/kern/kernel.asm	/^f010673f:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106745	obj/kern/kernel.asm	/^f0106745:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106748	obj/kern/kernel.asm	/^f0106748:	75 f5                	jne    f010673f <lapic_ipi+0x1c>$/;"	l
f010674a	obj/kern/kernel.asm	/^f010674a:	5d                   	pop    %ebp$/;"	l
f010674b	obj/kern/kernel.asm	/^f010674b:	c3                   	ret    $/;"	l
f010674c	obj/kern/kernel.asm	/^f010674c <__spin_initlock>:$/;"	l
f010674c	obj/kern/kernel.asm	/^f010674c:	55                   	push   %ebp$/;"	l
f010674d	obj/kern/kernel.asm	/^f010674d:	89 e5                	mov    %esp,%ebp$/;"	l
f010674f	obj/kern/kernel.asm	/^f010674f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106752	obj/kern/kernel.asm	/^f0106752:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106758	obj/kern/kernel.asm	/^f0106758:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010675b	obj/kern/kernel.asm	/^f010675b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f010675e	obj/kern/kernel.asm	/^f010675e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106765	obj/kern/kernel.asm	/^f0106765:	5d                   	pop    %ebp$/;"	l
f0106766	obj/kern/kernel.asm	/^f0106766:	c3                   	ret    $/;"	l
f0106767	obj/kern/kernel.asm	/^f0106767 <spin_lock>:$/;"	l
f0106767	obj/kern/kernel.asm	/^f0106767:	55                   	push   %ebp$/;"	l
f0106768	obj/kern/kernel.asm	/^f0106768:	89 e5                	mov    %esp,%ebp$/;"	l
f010676a	obj/kern/kernel.asm	/^f010676a:	56                   	push   %esi$/;"	l
f010676b	obj/kern/kernel.asm	/^f010676b:	53                   	push   %ebx$/;"	l
f010676c	obj/kern/kernel.asm	/^f010676c:	83 ec 20             	sub    $0x20,%esp$/;"	l
f010676f	obj/kern/kernel.asm	/^f010676f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106772	obj/kern/kernel.asm	/^f0106772:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0106775	obj/kern/kernel.asm	/^f0106775:	75 07                	jne    f010677e <spin_lock+0x17>$/;"	l
f0106777	obj/kern/kernel.asm	/^f0106777:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010677c	obj/kern/kernel.asm	/^f010677c:	eb 42                	jmp    f01067c0 <spin_lock+0x59>$/;"	l
f010677e	obj/kern/kernel.asm	/^f010677e:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0106781	obj/kern/kernel.asm	/^f0106781:	e8 63 fd ff ff       	call   f01064e9 <cpunum>$/;"	l
f0106786	obj/kern/kernel.asm	/^f0106786:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106789	obj/kern/kernel.asm	/^f0106789:	05 20 00 30 f0       	add    $0xf0300020,%eax$/;"	l
f010678e	obj/kern/kernel.asm	/^f010678e:	39 c6                	cmp    %eax,%esi$/;"	l
f0106790	obj/kern/kernel.asm	/^f0106790:	75 e5                	jne    f0106777 <spin_lock+0x10>$/;"	l
f0106792	obj/kern/kernel.asm	/^f0106792:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106795	obj/kern/kernel.asm	/^f0106795:	e8 4f fd ff ff       	call   f01064e9 <cpunum>$/;"	l
f010679a	obj/kern/kernel.asm	/^f010679a:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f010679e	obj/kern/kernel.asm	/^f010679e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01067a2	obj/kern/kernel.asm	/^f01067a2:	c7 44 24 08 e4 92 10 	movl   $0xf01092e4,0x8(%esp)$/;"	l
f01067a9	obj/kern/kernel.asm	/^f01067a9:	f0 $/;"	l
f01067aa	obj/kern/kernel.asm	/^f01067aa:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
f01067b1	obj/kern/kernel.asm	/^f01067b1:	00 $/;"	l
f01067b2	obj/kern/kernel.asm	/^f01067b2:	c7 04 24 46 93 10 f0 	movl   $0xf0109346,(%esp)$/;"	l
f01067b9	obj/kern/kernel.asm	/^f01067b9:	e8 df 98 ff ff       	call   f010009d <_panic>$/;"	l
f01067be	obj/kern/kernel.asm	/^f01067be:	f3 90                	pause  $/;"	l
f01067c0	obj/kern/kernel.asm	/^f01067c0:	89 d0                	mov    %edx,%eax$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f01067c5	obj/kern/kernel.asm	/^f01067c5:	85 c0                	test   %eax,%eax$/;"	l
f01067c7	obj/kern/kernel.asm	/^f01067c7:	75 f5                	jne    f01067be <spin_lock+0x57>$/;"	l
f01067c9	obj/kern/kernel.asm	/^f01067c9:	e8 1b fd ff ff       	call   f01064e9 <cpunum>$/;"	l
f01067ce	obj/kern/kernel.asm	/^f01067ce:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01067d1	obj/kern/kernel.asm	/^f01067d1:	05 20 00 30 f0       	add    $0xf0300020,%eax$/;"	l
f01067d6	obj/kern/kernel.asm	/^f01067d6:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f01067d9	obj/kern/kernel.asm	/^f01067d9:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01067dc	obj/kern/kernel.asm	/^f01067dc:	89 ea                	mov    %ebp,%edx$/;"	l
f01067de	obj/kern/kernel.asm	/^f01067de:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01067e3	obj/kern/kernel.asm	/^f01067e3:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f01067e9	obj/kern/kernel.asm	/^f01067e9:	76 12                	jbe    f01067fd <spin_lock+0x96>$/;"	l
f01067eb	obj/kern/kernel.asm	/^f01067eb:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f01067ee	obj/kern/kernel.asm	/^f01067ee:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f01067f1	obj/kern/kernel.asm	/^f01067f1:	8b 12                	mov    (%edx),%edx$/;"	l
f01067f3	obj/kern/kernel.asm	/^f01067f3:	83 c0 01             	add    $0x1,%eax$/;"	l
f01067f6	obj/kern/kernel.asm	/^f01067f6:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01067f9	obj/kern/kernel.asm	/^f01067f9:	75 e8                	jne    f01067e3 <spin_lock+0x7c>$/;"	l
f01067fb	obj/kern/kernel.asm	/^f01067fb:	eb 0f                	jmp    f010680c <spin_lock+0xa5>$/;"	l
f01067fd	obj/kern/kernel.asm	/^f01067fd:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f0106804	obj/kern/kernel.asm	/^f0106804:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106807	obj/kern/kernel.asm	/^f0106807:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010680a	obj/kern/kernel.asm	/^f010680a:	7e f1                	jle    f01067fd <spin_lock+0x96>$/;"	l
f010680c	obj/kern/kernel.asm	/^f010680c:	83 c4 20             	add    $0x20,%esp$/;"	l
f010680f	obj/kern/kernel.asm	/^f010680f:	5b                   	pop    %ebx$/;"	l
f0106810	obj/kern/kernel.asm	/^f0106810:	5e                   	pop    %esi$/;"	l
f0106811	obj/kern/kernel.asm	/^f0106811:	5d                   	pop    %ebp$/;"	l
f0106812	obj/kern/kernel.asm	/^f0106812:	c3                   	ret    $/;"	l
f0106813	obj/kern/kernel.asm	/^f0106813 <spin_unlock>:$/;"	l
f0106813	obj/kern/kernel.asm	/^f0106813:	55                   	push   %ebp$/;"	l
f0106814	obj/kern/kernel.asm	/^f0106814:	89 e5                	mov    %esp,%ebp$/;"	l
f0106816	obj/kern/kernel.asm	/^f0106816:	57                   	push   %edi$/;"	l
f0106817	obj/kern/kernel.asm	/^f0106817:	56                   	push   %esi$/;"	l
f0106818	obj/kern/kernel.asm	/^f0106818:	53                   	push   %ebx$/;"	l
f0106819	obj/kern/kernel.asm	/^f0106819:	83 ec 6c             	sub    $0x6c,%esp$/;"	l
f010681c	obj/kern/kernel.asm	/^f010681c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010681f	obj/kern/kernel.asm	/^f010681f:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0106822	obj/kern/kernel.asm	/^f0106822:	74 18                	je     f010683c <spin_unlock+0x29>$/;"	l
f0106824	obj/kern/kernel.asm	/^f0106824:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f0106827	obj/kern/kernel.asm	/^f0106827:	e8 bd fc ff ff       	call   f01064e9 <cpunum>$/;"	l
f010682c	obj/kern/kernel.asm	/^f010682c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010682f	obj/kern/kernel.asm	/^f010682f:	05 20 00 30 f0       	add    $0xf0300020,%eax$/;"	l
f0106834	obj/kern/kernel.asm	/^f0106834:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106836	obj/kern/kernel.asm	/^f0106836:	0f 84 ce 00 00 00    	je     f010690a <spin_unlock+0xf7>$/;"	l
f010683c	obj/kern/kernel.asm	/^f010683c:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f0106843	obj/kern/kernel.asm	/^f0106843:	00 $/;"	l
f0106844	obj/kern/kernel.asm	/^f0106844:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f0106847	obj/kern/kernel.asm	/^f0106847:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010684b	obj/kern/kernel.asm	/^f010684b:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f010684e	obj/kern/kernel.asm	/^f010684e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106851	obj/kern/kernel.asm	/^f0106851:	e8 8e f6 ff ff       	call   f0105ee4 <memmove>$/;"	l
f0106856	obj/kern/kernel.asm	/^f0106856:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0106859	obj/kern/kernel.asm	/^f0106859:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f010685c	obj/kern/kernel.asm	/^f010685c:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f010685f	obj/kern/kernel.asm	/^f010685f:	e8 85 fc ff ff       	call   f01064e9 <cpunum>$/;"	l
f0106864	obj/kern/kernel.asm	/^f0106864:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0106868	obj/kern/kernel.asm	/^f0106868:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f010686c	obj/kern/kernel.asm	/^f010686c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106870	obj/kern/kernel.asm	/^f0106870:	c7 04 24 10 93 10 f0 	movl   $0xf0109310,(%esp)$/;"	l
f0106877	obj/kern/kernel.asm	/^f0106877:	e8 ec d7 ff ff       	call   f0104068 <cprintf>$/;"	l
f010687c	obj/kern/kernel.asm	/^f010687c:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f010687f	obj/kern/kernel.asm	/^f010687f:	eb 65                	jmp    f01068e6 <spin_unlock+0xd3>$/;"	l
f0106881	obj/kern/kernel.asm	/^f0106881:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106885	obj/kern/kernel.asm	/^f0106885:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106888	obj/kern/kernel.asm	/^f0106888:	e8 bb ea ff ff       	call   f0105348 <debuginfo_eip>$/;"	l
f010688d	obj/kern/kernel.asm	/^f010688d:	85 c0                	test   %eax,%eax$/;"	l
f010688f	obj/kern/kernel.asm	/^f010688f:	78 39                	js     f01068ca <spin_unlock+0xb7>$/;"	l
f0106891	obj/kern/kernel.asm	/^f0106891:	8b 06                	mov    (%esi),%eax$/;"	l
f0106893	obj/kern/kernel.asm	/^f0106893:	89 c2                	mov    %eax,%edx$/;"	l
f0106895	obj/kern/kernel.asm	/^f0106895:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0106898	obj/kern/kernel.asm	/^f0106898:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f010689c	obj/kern/kernel.asm	/^f010689c:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
f010689f	obj/kern/kernel.asm	/^f010689f:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f01068a3	obj/kern/kernel.asm	/^f01068a3:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
f01068a6	obj/kern/kernel.asm	/^f01068a6:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f01068aa	obj/kern/kernel.asm	/^f01068aa:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
f01068ad	obj/kern/kernel.asm	/^f01068ad:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01068b1	obj/kern/kernel.asm	/^f01068b1:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
f01068b4	obj/kern/kernel.asm	/^f01068b4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01068b8	obj/kern/kernel.asm	/^f01068b8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01068bc	obj/kern/kernel.asm	/^f01068bc:	c7 04 24 56 93 10 f0 	movl   $0xf0109356,(%esp)$/;"	l
f01068c3	obj/kern/kernel.asm	/^f01068c3:	e8 a0 d7 ff ff       	call   f0104068 <cprintf>$/;"	l
f01068c8	obj/kern/kernel.asm	/^f01068c8:	eb 12                	jmp    f01068dc <spin_unlock+0xc9>$/;"	l
f01068ca	obj/kern/kernel.asm	/^f01068ca:	8b 06                	mov    (%esi),%eax$/;"	l
f01068cc	obj/kern/kernel.asm	/^f01068cc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01068d0	obj/kern/kernel.asm	/^f01068d0:	c7 04 24 6d 93 10 f0 	movl   $0xf010936d,(%esp)$/;"	l
f01068d7	obj/kern/kernel.asm	/^f01068d7:	e8 8c d7 ff ff       	call   f0104068 <cprintf>$/;"	l
f01068dc	obj/kern/kernel.asm	/^f01068dc:	83 c3 04             	add    $0x4,%ebx$/;"	l
f01068df	obj/kern/kernel.asm	/^f01068df:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f01068e2	obj/kern/kernel.asm	/^f01068e2:	39 c3                	cmp    %eax,%ebx$/;"	l
f01068e4	obj/kern/kernel.asm	/^f01068e4:	74 08                	je     f01068ee <spin_unlock+0xdb>$/;"	l
f01068e6	obj/kern/kernel.asm	/^f01068e6:	89 de                	mov    %ebx,%esi$/;"	l
f01068e8	obj/kern/kernel.asm	/^f01068e8:	8b 03                	mov    (%ebx),%eax$/;"	l
f01068ea	obj/kern/kernel.asm	/^f01068ea:	85 c0                	test   %eax,%eax$/;"	l
f01068ec	obj/kern/kernel.asm	/^f01068ec:	75 93                	jne    f0106881 <spin_unlock+0x6e>$/;"	l
f01068ee	obj/kern/kernel.asm	/^f01068ee:	c7 44 24 08 75 93 10 	movl   $0xf0109375,0x8(%esp)$/;"	l
f01068f5	obj/kern/kernel.asm	/^f01068f5:	f0 $/;"	l
f01068f6	obj/kern/kernel.asm	/^f01068f6:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f01068fd	obj/kern/kernel.asm	/^f01068fd:	00 $/;"	l
f01068fe	obj/kern/kernel.asm	/^f01068fe:	c7 04 24 46 93 10 f0 	movl   $0xf0109346,(%esp)$/;"	l
f0106905	obj/kern/kernel.asm	/^f0106905:	e8 93 97 ff ff       	call   f010009d <_panic>$/;"	l
f010690a	obj/kern/kernel.asm	/^f010690a:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f0106911	obj/kern/kernel.asm	/^f0106911:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f0106918	obj/kern/kernel.asm	/^f0106918:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010691d	obj/kern/kernel.asm	/^f010691d:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f0106920	obj/kern/kernel.asm	/^f0106920:	83 c4 6c             	add    $0x6c,%esp$/;"	l
f0106923	obj/kern/kernel.asm	/^f0106923:	5b                   	pop    %ebx$/;"	l
f0106924	obj/kern/kernel.asm	/^f0106924:	5e                   	pop    %esi$/;"	l
f0106925	obj/kern/kernel.asm	/^f0106925:	5f                   	pop    %edi$/;"	l
f0106926	obj/kern/kernel.asm	/^f0106926:	5d                   	pop    %ebp$/;"	l
f0106927	obj/kern/kernel.asm	/^f0106927:	c3                   	ret    $/;"	l
f0106928	obj/kern/kernel.asm	/^f0106928 <init_transmit>:$/;"	l
f0106928	obj/kern/kernel.asm	/^f0106928:	55                   	push   %ebp$/;"	l
f0106929	obj/kern/kernel.asm	/^f0106929:	89 e5                	mov    %esp,%ebp$/;"	l
f010692b	obj/kern/kernel.asm	/^f010692b:	53                   	push   %ebx$/;"	l
f010692c	obj/kern/kernel.asm	/^f010692c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010692f	obj/kern/kernel.asm	/^f010692f:	8b 15 20 fd 2f f0    	mov    0xf02ffd20,%edx$/;"	l
f0106935	obj/kern/kernel.asm	/^f0106935:	b8 00 f9 2f f0       	mov    $0xf02ff900,%eax$/;"	l
f010693a	obj/kern/kernel.asm	/^f010693a:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010693f	obj/kern/kernel.asm	/^f010693f:	77 20                	ja     f0106961 <init_transmit+0x39>$/;"	l
f0106941	obj/kern/kernel.asm	/^f0106941:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106945	obj/kern/kernel.asm	/^f0106945:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f010694c	obj/kern/kernel.asm	/^f010694c:	f0 $/;"	l
f010694d	obj/kern/kernel.asm	/^f010694d:	c7 44 24 04 21 00 00 	movl   $0x21,0x4(%esp)$/;"	l
f0106954	obj/kern/kernel.asm	/^f0106954:	00 $/;"	l
f0106955	obj/kern/kernel.asm	/^f0106955:	c7 04 24 8d 93 10 f0 	movl   $0xf010938d,(%esp)$/;"	l
f010695c	obj/kern/kernel.asm	/^f010695c:	e8 3c 97 ff ff       	call   f010009d <_panic>$/;"	l
f0106961	obj/kern/kernel.asm	/^f0106961:	c7 82 00 38 00 00 00 	movl   $0x2ff900,0x3800(%edx)$/;"	l
f0106968	obj/kern/kernel.asm	/^f0106968:	f9 2f 00 $/;"	l
f010696b	obj/kern/kernel.asm	/^f010696b:	c7 82 08 38 00 00 00 	movl   $0x400,0x3808(%edx)$/;"	l
f0106972	obj/kern/kernel.asm	/^f0106972:	04 00 00 $/;"	l
f0106975	obj/kern/kernel.asm	/^f0106975:	c7 82 10 38 00 00 00 	movl   $0x0,0x3810(%edx)$/;"	l
f010697c	obj/kern/kernel.asm	/^f010697c:	00 00 00 $/;"	l
f010697f	obj/kern/kernel.asm	/^f010697f:	c7 82 18 38 00 00 00 	movl   $0x0,0x3818(%edx)$/;"	l
f0106986	obj/kern/kernel.asm	/^f0106986:	00 00 00 $/;"	l
f0106989	obj/kern/kernel.asm	/^f0106989:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f010698f	obj/kern/kernel.asm	/^f010698f:	83 c8 02             	or     $0x2,%eax$/;"	l
f0106992	obj/kern/kernel.asm	/^f0106992:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f0106998	obj/kern/kernel.asm	/^f0106998:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f010699e	obj/kern/kernel.asm	/^f010699e:	83 c8 08             	or     $0x8,%eax$/;"	l
f01069a1	obj/kern/kernel.asm	/^f01069a1:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f01069a7	obj/kern/kernel.asm	/^f01069a7:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f01069ad	obj/kern/kernel.asm	/^f01069ad:	83 c8 10             	or     $0x10,%eax$/;"	l
f01069b0	obj/kern/kernel.asm	/^f01069b0:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f01069b6	obj/kern/kernel.asm	/^f01069b6:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f01069bc	obj/kern/kernel.asm	/^f01069bc:	0d 00 00 04 00       	or     $0x40000,%eax$/;"	l
f01069c1	obj/kern/kernel.asm	/^f01069c1:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f01069c7	obj/kern/kernel.asm	/^f01069c7:	c7 82 10 04 00 00 10 	movl   $0x10,0x410(%edx)$/;"	l
f01069ce	obj/kern/kernel.asm	/^f01069ce:	00 00 00 $/;"	l
f01069d1	obj/kern/kernel.asm	/^f01069d1:	ba 80 7d 2e f0       	mov    $0xf02e7d80,%edx$/;"	l
f01069d6	obj/kern/kernel.asm	/^f01069d6:	b8 00 f9 2f f0       	mov    $0xf02ff900,%eax$/;"	l
f01069db	obj/kern/kernel.asm	/^f01069db:	bb 00 f9 2f f0       	mov    $0xf02ff900,%ebx$/;"	l
f01069e0	obj/kern/kernel.asm	/^f01069e0:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f01069e6	obj/kern/kernel.asm	/^f01069e6:	77 20                	ja     f0106a08 <init_transmit+0xe0>$/;"	l
f01069e8	obj/kern/kernel.asm	/^f01069e8:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01069ec	obj/kern/kernel.asm	/^f01069ec:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f01069f3	obj/kern/kernel.asm	/^f01069f3:	f0 $/;"	l
f01069f4	obj/kern/kernel.asm	/^f01069f4:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
f01069fb	obj/kern/kernel.asm	/^f01069fb:	00 $/;"	l
f01069fc	obj/kern/kernel.asm	/^f01069fc:	c7 04 24 8d 93 10 f0 	movl   $0xf010938d,(%esp)$/;"	l
f0106a03	obj/kern/kernel.asm	/^f0106a03:	e8 95 96 ff ff       	call   f010009d <_panic>$/;"	l
f0106a08	obj/kern/kernel.asm	/^f0106a08:	8d 8a 00 00 00 10    	lea    0x10000000(%edx),%ecx$/;"	l
f0106a0e	obj/kern/kernel.asm	/^f0106a0e:	89 08                	mov    %ecx,(%eax)$/;"	l
f0106a10	obj/kern/kernel.asm	/^f0106a10:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0106a17	obj/kern/kernel.asm	/^f0106a17:	80 48 0c 01          	orb    $0x1,0xc(%eax)$/;"	l
f0106a1b	obj/kern/kernel.asm	/^f0106a1b:	80 48 0b 08          	orb    $0x8,0xb(%eax)$/;"	l
f0106a1f	obj/kern/kernel.asm	/^f0106a1f:	81 c2 ee 05 00 00    	add    $0x5ee,%edx$/;"	l
f0106a25	obj/kern/kernel.asm	/^f0106a25:	83 c0 10             	add    $0x10,%eax$/;"	l
f0106a28	obj/kern/kernel.asm	/^f0106a28:	39 da                	cmp    %ebx,%edx$/;"	l
f0106a2a	obj/kern/kernel.asm	/^f0106a2a:	75 b4                	jne    f01069e0 <init_transmit+0xb8>$/;"	l
f0106a2c	obj/kern/kernel.asm	/^f0106a2c:	83 c4 14             	add    $0x14,%esp$/;"	l
f0106a2f	obj/kern/kernel.asm	/^f0106a2f:	5b                   	pop    %ebx$/;"	l
f0106a30	obj/kern/kernel.asm	/^f0106a30:	5d                   	pop    %ebp$/;"	l
f0106a31	obj/kern/kernel.asm	/^f0106a31:	c3                   	ret    $/;"	l
f0106a32	obj/kern/kernel.asm	/^f0106a32 <init_receive>:$/;"	l
f0106a32	obj/kern/kernel.asm	/^f0106a32:	55                   	push   %ebp$/;"	l
f0106a33	obj/kern/kernel.asm	/^f0106a33:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a35	obj/kern/kernel.asm	/^f0106a35:	56                   	push   %esi$/;"	l
f0106a36	obj/kern/kernel.asm	/^f0106a36:	53                   	push   %ebx$/;"	l
f0106a37	obj/kern/kernel.asm	/^f0106a37:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106a3a	obj/kern/kernel.asm	/^f0106a3a:	a1 20 fd 2f f0       	mov    0xf02ffd20,%eax$/;"	l
f0106a3f	obj/kern/kernel.asm	/^f0106a3f:	c7 80 00 54 00 00 52 	movl   $0x12005452,0x5400(%eax)$/;"	l
f0106a46	obj/kern/kernel.asm	/^f0106a46:	54 00 12 $/;"	l
f0106a49	obj/kern/kernel.asm	/^f0106a49:	c7 80 04 54 00 00 34 	movl   $0x80005634,0x5404(%eax)$/;"	l
f0106a50	obj/kern/kernel.asm	/^f0106a50:	56 00 80 $/;"	l
f0106a53	obj/kern/kernel.asm	/^f0106a53:	c7 80 00 52 00 00 00 	movl   $0x0,0x5200(%eax)$/;"	l
f0106a5a	obj/kern/kernel.asm	/^f0106a5a:	00 00 00 $/;"	l
f0106a5d	obj/kern/kernel.asm	/^f0106a5d:	ba 80 75 2e f0       	mov    $0xf02e7580,%edx$/;"	l
f0106a62	obj/kern/kernel.asm	/^f0106a62:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0106a68	obj/kern/kernel.asm	/^f0106a68:	77 20                	ja     f0106a8a <init_receive+0x58>$/;"	l
f0106a6a	obj/kern/kernel.asm	/^f0106a6a:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106a6e	obj/kern/kernel.asm	/^f0106a6e:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0106a75	obj/kern/kernel.asm	/^f0106a75:	f0 $/;"	l
f0106a76	obj/kern/kernel.asm	/^f0106a76:	c7 44 24 04 40 00 00 	movl   $0x40,0x4(%esp)$/;"	l
f0106a7d	obj/kern/kernel.asm	/^f0106a7d:	00 $/;"	l
f0106a7e	obj/kern/kernel.asm	/^f0106a7e:	c7 04 24 8d 93 10 f0 	movl   $0xf010938d,(%esp)$/;"	l
f0106a85	obj/kern/kernel.asm	/^f0106a85:	e8 13 96 ff ff       	call   f010009d <_panic>$/;"	l
f0106a8a	obj/kern/kernel.asm	/^f0106a8a:	c7 80 00 28 00 00 80 	movl   $0x2e7580,0x2800(%eax)$/;"	l
f0106a91	obj/kern/kernel.asm	/^f0106a91:	75 2e 00 $/;"	l
f0106a94	obj/kern/kernel.asm	/^f0106a94:	c7 80 08 28 00 00 00 	movl   $0x800,0x2808(%eax)$/;"	l
f0106a9b	obj/kern/kernel.asm	/^f0106a9b:	08 00 00 $/;"	l
f0106a9e	obj/kern/kernel.asm	/^f0106a9e:	c7 80 10 28 00 00 00 	movl   $0x0,0x2810(%eax)$/;"	l
f0106aa5	obj/kern/kernel.asm	/^f0106aa5:	00 00 00 $/;"	l
f0106aa8	obj/kern/kernel.asm	/^f0106aa8:	c7 80 18 28 00 00 7f 	movl   $0x7f,0x2818(%eax)$/;"	l
f0106aaf	obj/kern/kernel.asm	/^f0106aaf:	00 00 00 $/;"	l
f0106ab2	obj/kern/kernel.asm	/^f0106ab2:	ba 80 7e 2b f0       	mov    $0xf02b7e80,%edx$/;"	l
f0106ab7	obj/kern/kernel.asm	/^f0106ab7:	b9 80 75 2e f0       	mov    $0xf02e7580,%ecx$/;"	l
f0106abc	obj/kern/kernel.asm	/^f0106abc:	be 80 75 2e f0       	mov    $0xf02e7580,%esi$/;"	l
f0106ac1	obj/kern/kernel.asm	/^f0106ac1:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0106ac7	obj/kern/kernel.asm	/^f0106ac7:	77 20                	ja     f0106ae9 <init_receive+0xb7>$/;"	l
f0106ac9	obj/kern/kernel.asm	/^f0106ac9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106acd	obj/kern/kernel.asm	/^f0106acd:	c7 44 24 08 18 77 10 	movl   $0xf0107718,0x8(%esp)$/;"	l
f0106ad4	obj/kern/kernel.asm	/^f0106ad4:	f0 $/;"	l
f0106ad5	obj/kern/kernel.asm	/^f0106ad5:	c7 44 24 04 49 00 00 	movl   $0x49,0x4(%esp)$/;"	l
f0106adc	obj/kern/kernel.asm	/^f0106adc:	00 $/;"	l
f0106add	obj/kern/kernel.asm	/^f0106add:	c7 04 24 8d 93 10 f0 	movl   $0xf010938d,(%esp)$/;"	l
f0106ae4	obj/kern/kernel.asm	/^f0106ae4:	e8 b4 95 ff ff       	call   f010009d <_panic>$/;"	l
f0106ae9	obj/kern/kernel.asm	/^f0106ae9:	8d 9a 00 00 00 10    	lea    0x10000000(%edx),%ebx$/;"	l
f0106aef	obj/kern/kernel.asm	/^f0106aef:	89 19                	mov    %ebx,(%ecx)$/;"	l
f0106af1	obj/kern/kernel.asm	/^f0106af1:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)$/;"	l
f0106af8	obj/kern/kernel.asm	/^f0106af8:	81 c2 ee 05 00 00    	add    $0x5ee,%edx$/;"	l
f0106afe	obj/kern/kernel.asm	/^f0106afe:	83 c1 10             	add    $0x10,%ecx$/;"	l
f0106b01	obj/kern/kernel.asm	/^f0106b01:	39 f2                	cmp    %esi,%edx$/;"	l
f0106b03	obj/kern/kernel.asm	/^f0106b03:	75 bc                	jne    f0106ac1 <init_receive+0x8f>$/;"	l
f0106b05	obj/kern/kernel.asm	/^f0106b05:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0106b0b	obj/kern/kernel.asm	/^f0106b0b:	83 ca 02             	or     $0x2,%edx$/;"	l
f0106b0e	obj/kern/kernel.asm	/^f0106b0e:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0106b14	obj/kern/kernel.asm	/^f0106b14:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0106b1a	obj/kern/kernel.asm	/^f0106b1a:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
f0106b1d	obj/kern/kernel.asm	/^f0106b1d:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0106b23	obj/kern/kernel.asm	/^f0106b23:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0106b29	obj/kern/kernel.asm	/^f0106b29:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0106b2f	obj/kern/kernel.asm	/^f0106b2f:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0106b35	obj/kern/kernel.asm	/^f0106b35:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0106b3b	obj/kern/kernel.asm	/^f0106b3b:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0106b41	obj/kern/kernel.asm	/^f0106b41:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0106b47	obj/kern/kernel.asm	/^f0106b47:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0106b4d	obj/kern/kernel.asm	/^f0106b4d:	80 ce 80             	or     $0x80,%dh$/;"	l
f0106b50	obj/kern/kernel.asm	/^f0106b50:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0106b56	obj/kern/kernel.asm	/^f0106b56:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0106b5c	obj/kern/kernel.asm	/^f0106b5c:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0106b62	obj/kern/kernel.asm	/^f0106b62:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0106b68	obj/kern/kernel.asm	/^f0106b68:	81 ca 00 00 00 04    	or     $0x4000000,%edx$/;"	l
f0106b6e	obj/kern/kernel.asm	/^f0106b6e:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0106b74	obj/kern/kernel.asm	/^f0106b74:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106b77	obj/kern/kernel.asm	/^f0106b77:	5b                   	pop    %ebx$/;"	l
f0106b78	obj/kern/kernel.asm	/^f0106b78:	5e                   	pop    %esi$/;"	l
f0106b79	obj/kern/kernel.asm	/^f0106b79:	5d                   	pop    %ebp$/;"	l
f0106b7a	obj/kern/kernel.asm	/^f0106b7a:	c3                   	ret    $/;"	l
f0106b7b	obj/kern/kernel.asm	/^f0106b7b <attach_E1000>:$/;"	l
f0106b7b	obj/kern/kernel.asm	/^f0106b7b:	55                   	push   %ebp$/;"	l
f0106b7c	obj/kern/kernel.asm	/^f0106b7c:	89 e5                	mov    %esp,%ebp$/;"	l
f0106b7e	obj/kern/kernel.asm	/^f0106b7e:	53                   	push   %ebx$/;"	l
f0106b7f	obj/kern/kernel.asm	/^f0106b7f:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0106b82	obj/kern/kernel.asm	/^f0106b82:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106b85	obj/kern/kernel.asm	/^f0106b85:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106b88	obj/kern/kernel.asm	/^f0106b88:	e8 23 06 00 00       	call   f01071b0 <pci_func_enable>$/;"	l
f0106b8d	obj/kern/kernel.asm	/^f0106b8d:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0106b90	obj/kern/kernel.asm	/^f0106b90:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106b94	obj/kern/kernel.asm	/^f0106b94:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0106b97	obj/kern/kernel.asm	/^f0106b97:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106b9a	obj/kern/kernel.asm	/^f0106b9a:	e8 5d a9 ff ff       	call   f01014fc <mmio_map_region>$/;"	l
f0106b9f	obj/kern/kernel.asm	/^f0106b9f:	a3 20 fd 2f f0       	mov    %eax,0xf02ffd20$/;"	l
f0106ba4	obj/kern/kernel.asm	/^f0106ba4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0106ba7	obj/kern/kernel.asm	/^f0106ba7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106bab	obj/kern/kernel.asm	/^f0106bab:	c7 04 24 9a 93 10 f0 	movl   $0xf010939a,(%esp)$/;"	l
f0106bb2	obj/kern/kernel.asm	/^f0106bb2:	e8 b1 d4 ff ff       	call   f0104068 <cprintf>$/;"	l
f0106bb7	obj/kern/kernel.asm	/^f0106bb7:	e8 6c fd ff ff       	call   f0106928 <init_transmit>$/;"	l
f0106bbc	obj/kern/kernel.asm	/^f0106bbc:	e8 71 fe ff ff       	call   f0106a32 <init_receive>$/;"	l
f0106bc1	obj/kern/kernel.asm	/^f0106bc1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106bc6	obj/kern/kernel.asm	/^f0106bc6:	83 c4 14             	add    $0x14,%esp$/;"	l
f0106bc9	obj/kern/kernel.asm	/^f0106bc9:	5b                   	pop    %ebx$/;"	l
f0106bca	obj/kern/kernel.asm	/^f0106bca:	5d                   	pop    %ebp$/;"	l
f0106bcb	obj/kern/kernel.asm	/^f0106bcb:	c3                   	ret    $/;"	l
f0106bcc	obj/kern/kernel.asm	/^f0106bcc <transmit>:$/;"	l
f0106bcc	obj/kern/kernel.asm	/^f0106bcc:	55                   	push   %ebp$/;"	l
f0106bcd	obj/kern/kernel.asm	/^f0106bcd:	89 e5                	mov    %esp,%ebp$/;"	l
f0106bcf	obj/kern/kernel.asm	/^f0106bcf:	56                   	push   %esi$/;"	l
f0106bd0	obj/kern/kernel.asm	/^f0106bd0:	53                   	push   %ebx$/;"	l
f0106bd1	obj/kern/kernel.asm	/^f0106bd1:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106bd4	obj/kern/kernel.asm	/^f0106bd4:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106bd7	obj/kern/kernel.asm	/^f0106bd7:	a1 20 fd 2f f0       	mov    0xf02ffd20,%eax$/;"	l
f0106bdc	obj/kern/kernel.asm	/^f0106bdc:	8b 98 18 38 00 00    	mov    0x3818(%eax),%ebx$/;"	l
f0106be2	obj/kern/kernel.asm	/^f0106be2:	89 d8                	mov    %ebx,%eax$/;"	l
f0106be4	obj/kern/kernel.asm	/^f0106be4:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106be7	obj/kern/kernel.asm	/^f0106be7:	f6 80 0c f9 2f f0 01 	testb  $0x1,-0xfd006f4(%eax)$/;"	l
f0106bee	obj/kern/kernel.asm	/^f0106bee:	0f 84 8a 00 00 00    	je     f0106c7e <transmit+0xb2>$/;"	l
f0106bf4	obj/kern/kernel.asm	/^f0106bf4:	89 d8                	mov    %ebx,%eax$/;"	l
f0106bf6	obj/kern/kernel.asm	/^f0106bf6:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106bf9	obj/kern/kernel.asm	/^f0106bf9:	8b 80 00 f9 2f f0    	mov    -0xfd00700(%eax),%eax$/;"	l
f0106bff	obj/kern/kernel.asm	/^f0106bff:	89 c2                	mov    %eax,%edx$/;"	l
f0106c01	obj/kern/kernel.asm	/^f0106c01:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0106c04	obj/kern/kernel.asm	/^f0106c04:	3b 15 14 fd 2f f0    	cmp    0xf02ffd14,%edx$/;"	l
f0106c0a	obj/kern/kernel.asm	/^f0106c0a:	72 20                	jb     f0106c2c <transmit+0x60>$/;"	l
f0106c0c	obj/kern/kernel.asm	/^f0106c0c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106c10	obj/kern/kernel.asm	/^f0106c10:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f0106c17	obj/kern/kernel.asm	/^f0106c17:	f0 $/;"	l
f0106c18	obj/kern/kernel.asm	/^f0106c18:	c7 44 24 04 63 00 00 	movl   $0x63,0x4(%esp)$/;"	l
f0106c1f	obj/kern/kernel.asm	/^f0106c1f:	00 $/;"	l
f0106c20	obj/kern/kernel.asm	/^f0106c20:	c7 04 24 8d 93 10 f0 	movl   $0xf010938d,(%esp)$/;"	l
f0106c27	obj/kern/kernel.asm	/^f0106c27:	e8 71 94 ff ff       	call   f010009d <_panic>$/;"	l
f0106c2c	obj/kern/kernel.asm	/^f0106c2c:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0106c30	obj/kern/kernel.asm	/^f0106c30:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106c33	obj/kern/kernel.asm	/^f0106c33:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106c37	obj/kern/kernel.asm	/^f0106c37:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0106c3c	obj/kern/kernel.asm	/^f0106c3c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106c3f	obj/kern/kernel.asm	/^f0106c3f:	e8 08 f3 ff ff       	call   f0105f4c <memcpy>$/;"	l
f0106c44	obj/kern/kernel.asm	/^f0106c44:	89 d8                	mov    %ebx,%eax$/;"	l
f0106c46	obj/kern/kernel.asm	/^f0106c46:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106c49	obj/kern/kernel.asm	/^f0106c49:	05 00 f9 2f f0       	add    $0xf02ff900,%eax$/;"	l
f0106c4e	obj/kern/kernel.asm	/^f0106c4e:	80 60 0c fe          	andb   $0xfe,0xc(%eax)$/;"	l
f0106c52	obj/kern/kernel.asm	/^f0106c52:	66 89 70 08          	mov    %si,0x8(%eax)$/;"	l
f0106c56	obj/kern/kernel.asm	/^f0106c56:	80 48 0b 01          	orb    $0x1,0xb(%eax)$/;"	l
f0106c5a	obj/kern/kernel.asm	/^f0106c5a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0106c5d	obj/kern/kernel.asm	/^f0106c5d:	89 d8                	mov    %ebx,%eax$/;"	l
f0106c5f	obj/kern/kernel.asm	/^f0106c5f:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0106c62	obj/kern/kernel.asm	/^f0106c62:	c1 e8 1a             	shr    $0x1a,%eax$/;"	l
f0106c65	obj/kern/kernel.asm	/^f0106c65:	01 c3                	add    %eax,%ebx$/;"	l
f0106c67	obj/kern/kernel.asm	/^f0106c67:	83 e3 3f             	and    $0x3f,%ebx$/;"	l
f0106c6a	obj/kern/kernel.asm	/^f0106c6a:	29 c3                	sub    %eax,%ebx$/;"	l
f0106c6c	obj/kern/kernel.asm	/^f0106c6c:	a1 20 fd 2f f0       	mov    0xf02ffd20,%eax$/;"	l
f0106c71	obj/kern/kernel.asm	/^f0106c71:	89 98 18 38 00 00    	mov    %ebx,0x3818(%eax)$/;"	l
f0106c77	obj/kern/kernel.asm	/^f0106c77:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106c7c	obj/kern/kernel.asm	/^f0106c7c:	eb 05                	jmp    f0106c83 <transmit+0xb7>$/;"	l
f0106c7e	obj/kern/kernel.asm	/^f0106c7e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106c83	obj/kern/kernel.asm	/^f0106c83:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106c86	obj/kern/kernel.asm	/^f0106c86:	5b                   	pop    %ebx$/;"	l
f0106c87	obj/kern/kernel.asm	/^f0106c87:	5e                   	pop    %esi$/;"	l
f0106c88	obj/kern/kernel.asm	/^f0106c88:	5d                   	pop    %ebp$/;"	l
f0106c89	obj/kern/kernel.asm	/^f0106c89:	c3                   	ret    $/;"	l
f0106c8a	obj/kern/kernel.asm	/^f0106c8a <receive>:$/;"	l
f0106c8a	obj/kern/kernel.asm	/^f0106c8a:	55                   	push   %ebp$/;"	l
f0106c8b	obj/kern/kernel.asm	/^f0106c8b:	89 e5                	mov    %esp,%ebp$/;"	l
f0106c8d	obj/kern/kernel.asm	/^f0106c8d:	53                   	push   %ebx$/;"	l
f0106c8e	obj/kern/kernel.asm	/^f0106c8e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0106c91	obj/kern/kernel.asm	/^f0106c91:	a1 20 fd 2f f0       	mov    0xf02ffd20,%eax$/;"	l
f0106c96	obj/kern/kernel.asm	/^f0106c96:	8b 98 18 28 00 00    	mov    0x2818(%eax),%ebx$/;"	l
f0106c9c	obj/kern/kernel.asm	/^f0106c9c:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0106c9f	obj/kern/kernel.asm	/^f0106c9f:	89 d8                	mov    %ebx,%eax$/;"	l
f0106ca1	obj/kern/kernel.asm	/^f0106ca1:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0106ca4	obj/kern/kernel.asm	/^f0106ca4:	c1 e8 19             	shr    $0x19,%eax$/;"	l
f0106ca7	obj/kern/kernel.asm	/^f0106ca7:	01 c3                	add    %eax,%ebx$/;"	l
f0106ca9	obj/kern/kernel.asm	/^f0106ca9:	83 e3 7f             	and    $0x7f,%ebx$/;"	l
f0106cac	obj/kern/kernel.asm	/^f0106cac:	29 c3                	sub    %eax,%ebx$/;"	l
f0106cae	obj/kern/kernel.asm	/^f0106cae:	89 d8                	mov    %ebx,%eax$/;"	l
f0106cb0	obj/kern/kernel.asm	/^f0106cb0:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106cb3	obj/kern/kernel.asm	/^f0106cb3:	f6 80 8c 75 2e f0 01 	testb  $0x1,-0xfd18a74(%eax)$/;"	l
f0106cba	obj/kern/kernel.asm	/^f0106cba:	74 77                	je     f0106d33 <receive+0xa9>$/;"	l
f0106cbc	obj/kern/kernel.asm	/^f0106cbc:	89 d8                	mov    %ebx,%eax$/;"	l
f0106cbe	obj/kern/kernel.asm	/^f0106cbe:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106cc1	obj/kern/kernel.asm	/^f0106cc1:	0f b7 88 88 75 2e f0 	movzwl -0xfd18a78(%eax),%ecx$/;"	l
f0106cc8	obj/kern/kernel.asm	/^f0106cc8:	8b 80 80 75 2e f0    	mov    -0xfd18a80(%eax),%eax$/;"	l
f0106cce	obj/kern/kernel.asm	/^f0106cce:	89 c2                	mov    %eax,%edx$/;"	l
f0106cd0	obj/kern/kernel.asm	/^f0106cd0:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0106cd3	obj/kern/kernel.asm	/^f0106cd3:	3b 15 14 fd 2f f0    	cmp    0xf02ffd14,%edx$/;"	l
f0106cd9	obj/kern/kernel.asm	/^f0106cd9:	72 20                	jb     f0106cfb <receive+0x71>$/;"	l
f0106cdb	obj/kern/kernel.asm	/^f0106cdb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106cdf	obj/kern/kernel.asm	/^f0106cdf:	c7 44 24 08 f4 76 10 	movl   $0xf01076f4,0x8(%esp)$/;"	l
f0106ce6	obj/kern/kernel.asm	/^f0106ce6:	f0 $/;"	l
f0106ce7	obj/kern/kernel.asm	/^f0106ce7:	c7 44 24 04 79 00 00 	movl   $0x79,0x4(%esp)$/;"	l
f0106cee	obj/kern/kernel.asm	/^f0106cee:	00 $/;"	l
f0106cef	obj/kern/kernel.asm	/^f0106cef:	c7 04 24 8d 93 10 f0 	movl   $0xf010938d,(%esp)$/;"	l
f0106cf6	obj/kern/kernel.asm	/^f0106cf6:	e8 a2 93 ff ff       	call   f010009d <_panic>$/;"	l
f0106cfb	obj/kern/kernel.asm	/^f0106cfb:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106cff	obj/kern/kernel.asm	/^f0106cff:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0106d04	obj/kern/kernel.asm	/^f0106d04:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106d08	obj/kern/kernel.asm	/^f0106d08:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106d0b	obj/kern/kernel.asm	/^f0106d0b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106d0e	obj/kern/kernel.asm	/^f0106d0e:	e8 39 f2 ff ff       	call   f0105f4c <memcpy>$/;"	l
f0106d13	obj/kern/kernel.asm	/^f0106d13:	89 d8                	mov    %ebx,%eax$/;"	l
f0106d15	obj/kern/kernel.asm	/^f0106d15:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106d18	obj/kern/kernel.asm	/^f0106d18:	05 80 75 2e f0       	add    $0xf02e7580,%eax$/;"	l
f0106d1d	obj/kern/kernel.asm	/^f0106d1d:	80 60 0c fc          	andb   $0xfc,0xc(%eax)$/;"	l
f0106d21	obj/kern/kernel.asm	/^f0106d21:	0f b7 40 08          	movzwl 0x8(%eax),%eax$/;"	l
f0106d25	obj/kern/kernel.asm	/^f0106d25:	8b 15 20 fd 2f f0    	mov    0xf02ffd20,%edx$/;"	l
f0106d2b	obj/kern/kernel.asm	/^f0106d2b:	89 9a 18 28 00 00    	mov    %ebx,0x2818(%edx)$/;"	l
f0106d31	obj/kern/kernel.asm	/^f0106d31:	eb 05                	jmp    f0106d38 <receive+0xae>$/;"	l
f0106d33	obj/kern/kernel.asm	/^f0106d33:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106d38	obj/kern/kernel.asm	/^f0106d38:	83 c4 14             	add    $0x14,%esp$/;"	l
f0106d3b	obj/kern/kernel.asm	/^f0106d3b:	5b                   	pop    %ebx$/;"	l
f0106d3c	obj/kern/kernel.asm	/^f0106d3c:	5d                   	pop    %ebp$/;"	l
f0106d3d	obj/kern/kernel.asm	/^f0106d3d:	c3                   	ret    $/;"	l
f0106d3e	obj/kern/kernel.asm	/^f0106d3e <pci_attach_match>:$/;"	l
f0106d3e	obj/kern/kernel.asm	/^f0106d3e:	55                   	push   %ebp$/;"	l
f0106d3f	obj/kern/kernel.asm	/^f0106d3f:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d41	obj/kern/kernel.asm	/^f0106d41:	57                   	push   %edi$/;"	l
f0106d42	obj/kern/kernel.asm	/^f0106d42:	56                   	push   %esi$/;"	l
f0106d43	obj/kern/kernel.asm	/^f0106d43:	53                   	push   %ebx$/;"	l
f0106d44	obj/kern/kernel.asm	/^f0106d44:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0106d47	obj/kern/kernel.asm	/^f0106d47:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0106d4a	obj/kern/kernel.asm	/^f0106d4a:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0106d4d	obj/kern/kernel.asm	/^f0106d4d:	eb 41                	jmp    f0106d90 <pci_attach_match+0x52>$/;"	l
f0106d4f	obj/kern/kernel.asm	/^f0106d4f:	39 3b                	cmp    %edi,(%ebx)$/;"	l
f0106d51	obj/kern/kernel.asm	/^f0106d51:	75 3a                	jne    f0106d8d <pci_attach_match+0x4f>$/;"	l
f0106d53	obj/kern/kernel.asm	/^f0106d53:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106d56	obj/kern/kernel.asm	/^f0106d56:	39 56 04             	cmp    %edx,0x4(%esi)$/;"	l
f0106d59	obj/kern/kernel.asm	/^f0106d59:	75 32                	jne    f0106d8d <pci_attach_match+0x4f>$/;"	l
f0106d5b	obj/kern/kernel.asm	/^f0106d5b:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f0106d5e	obj/kern/kernel.asm	/^f0106d5e:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0106d61	obj/kern/kernel.asm	/^f0106d61:	ff d0                	call   *%eax$/;"	l
f0106d63	obj/kern/kernel.asm	/^f0106d63:	85 c0                	test   %eax,%eax$/;"	l
f0106d65	obj/kern/kernel.asm	/^f0106d65:	7f 32                	jg     f0106d99 <pci_attach_match+0x5b>$/;"	l
f0106d67	obj/kern/kernel.asm	/^f0106d67:	85 c0                	test   %eax,%eax$/;"	l
f0106d69	obj/kern/kernel.asm	/^f0106d69:	79 22                	jns    f0106d8d <pci_attach_match+0x4f>$/;"	l
f0106d6b	obj/kern/kernel.asm	/^f0106d6b:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0106d6f	obj/kern/kernel.asm	/^f0106d6f:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0106d72	obj/kern/kernel.asm	/^f0106d72:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106d76	obj/kern/kernel.asm	/^f0106d76:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106d79	obj/kern/kernel.asm	/^f0106d79:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106d7d	obj/kern/kernel.asm	/^f0106d7d:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106d81	obj/kern/kernel.asm	/^f0106d81:	c7 04 24 a8 93 10 f0 	movl   $0xf01093a8,(%esp)$/;"	l
f0106d88	obj/kern/kernel.asm	/^f0106d88:	e8 db d2 ff ff       	call   f0104068 <cprintf>$/;"	l
f0106d8d	obj/kern/kernel.asm	/^f0106d8d:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0106d90	obj/kern/kernel.asm	/^f0106d90:	89 de                	mov    %ebx,%esi$/;"	l
f0106d92	obj/kern/kernel.asm	/^f0106d92:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0106d95	obj/kern/kernel.asm	/^f0106d95:	85 c0                	test   %eax,%eax$/;"	l
f0106d97	obj/kern/kernel.asm	/^f0106d97:	75 b6                	jne    f0106d4f <pci_attach_match+0x11>$/;"	l
f0106d99	obj/kern/kernel.asm	/^f0106d99:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0106d9c	obj/kern/kernel.asm	/^f0106d9c:	5b                   	pop    %ebx$/;"	l
f0106d9d	obj/kern/kernel.asm	/^f0106d9d:	5e                   	pop    %esi$/;"	l
f0106d9e	obj/kern/kernel.asm	/^f0106d9e:	5f                   	pop    %edi$/;"	l
f0106d9f	obj/kern/kernel.asm	/^f0106d9f:	5d                   	pop    %ebp$/;"	l
f0106da0	obj/kern/kernel.asm	/^f0106da0:	c3                   	ret    $/;"	l
f0106da1	obj/kern/kernel.asm	/^f0106da1 <pci_conf1_set_addr>:$/;"	l
f0106da1	obj/kern/kernel.asm	/^f0106da1:	55                   	push   %ebp$/;"	l
f0106da2	obj/kern/kernel.asm	/^f0106da2:	89 e5                	mov    %esp,%ebp$/;"	l
f0106da4	obj/kern/kernel.asm	/^f0106da4:	56                   	push   %esi$/;"	l
f0106da5	obj/kern/kernel.asm	/^f0106da5:	53                   	push   %ebx$/;"	l
f0106da6	obj/kern/kernel.asm	/^f0106da6:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106da9	obj/kern/kernel.asm	/^f0106da9:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106dac	obj/kern/kernel.asm	/^f0106dac:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
f0106db1	obj/kern/kernel.asm	/^f0106db1:	76 24                	jbe    f0106dd7 <pci_conf1_set_addr+0x36>$/;"	l
f0106db3	obj/kern/kernel.asm	/^f0106db3:	c7 44 24 0c 00 95 10 	movl   $0xf0109500,0xc(%esp)$/;"	l
f0106dba	obj/kern/kernel.asm	/^f0106dba:	f0 $/;"	l
f0106dbb	obj/kern/kernel.asm	/^f0106dbb:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0106dc2	obj/kern/kernel.asm	/^f0106dc2:	f0 $/;"	l
f0106dc3	obj/kern/kernel.asm	/^f0106dc3:	c7 44 24 04 2b 00 00 	movl   $0x2b,0x4(%esp)$/;"	l
f0106dca	obj/kern/kernel.asm	/^f0106dca:	00 $/;"	l
f0106dcb	obj/kern/kernel.asm	/^f0106dcb:	c7 04 24 0a 95 10 f0 	movl   $0xf010950a,(%esp)$/;"	l
f0106dd2	obj/kern/kernel.asm	/^f0106dd2:	e8 c6 92 ff ff       	call   f010009d <_panic>$/;"	l
f0106dd7	obj/kern/kernel.asm	/^f0106dd7:	83 fa 1f             	cmp    $0x1f,%edx$/;"	l
f0106dda	obj/kern/kernel.asm	/^f0106dda:	76 24                	jbe    f0106e00 <pci_conf1_set_addr+0x5f>$/;"	l
f0106ddc	obj/kern/kernel.asm	/^f0106ddc:	c7 44 24 0c 15 95 10 	movl   $0xf0109515,0xc(%esp)$/;"	l
f0106de3	obj/kern/kernel.asm	/^f0106de3:	f0 $/;"	l
f0106de4	obj/kern/kernel.asm	/^f0106de4:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0106deb	obj/kern/kernel.asm	/^f0106deb:	f0 $/;"	l
f0106dec	obj/kern/kernel.asm	/^f0106dec:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
f0106df3	obj/kern/kernel.asm	/^f0106df3:	00 $/;"	l
f0106df4	obj/kern/kernel.asm	/^f0106df4:	c7 04 24 0a 95 10 f0 	movl   $0xf010950a,(%esp)$/;"	l
f0106dfb	obj/kern/kernel.asm	/^f0106dfb:	e8 9d 92 ff ff       	call   f010009d <_panic>$/;"	l
f0106e00	obj/kern/kernel.asm	/^f0106e00:	83 f9 07             	cmp    $0x7,%ecx$/;"	l
f0106e03	obj/kern/kernel.asm	/^f0106e03:	76 24                	jbe    f0106e29 <pci_conf1_set_addr+0x88>$/;"	l
f0106e05	obj/kern/kernel.asm	/^f0106e05:	c7 44 24 0c 1e 95 10 	movl   $0xf010951e,0xc(%esp)$/;"	l
f0106e0c	obj/kern/kernel.asm	/^f0106e0c:	f0 $/;"	l
f0106e0d	obj/kern/kernel.asm	/^f0106e0d:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0106e14	obj/kern/kernel.asm	/^f0106e14:	f0 $/;"	l
f0106e15	obj/kern/kernel.asm	/^f0106e15:	c7 44 24 04 2d 00 00 	movl   $0x2d,0x4(%esp)$/;"	l
f0106e1c	obj/kern/kernel.asm	/^f0106e1c:	00 $/;"	l
f0106e1d	obj/kern/kernel.asm	/^f0106e1d:	c7 04 24 0a 95 10 f0 	movl   $0xf010950a,(%esp)$/;"	l
f0106e24	obj/kern/kernel.asm	/^f0106e24:	e8 74 92 ff ff       	call   f010009d <_panic>$/;"	l
f0106e29	obj/kern/kernel.asm	/^f0106e29:	81 fb ff 00 00 00    	cmp    $0xff,%ebx$/;"	l
f0106e2f	obj/kern/kernel.asm	/^f0106e2f:	76 24                	jbe    f0106e55 <pci_conf1_set_addr+0xb4>$/;"	l
f0106e31	obj/kern/kernel.asm	/^f0106e31:	c7 44 24 0c 27 95 10 	movl   $0xf0109527,0xc(%esp)$/;"	l
f0106e38	obj/kern/kernel.asm	/^f0106e38:	f0 $/;"	l
f0106e39	obj/kern/kernel.asm	/^f0106e39:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0106e40	obj/kern/kernel.asm	/^f0106e40:	f0 $/;"	l
f0106e41	obj/kern/kernel.asm	/^f0106e41:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
f0106e48	obj/kern/kernel.asm	/^f0106e48:	00 $/;"	l
f0106e49	obj/kern/kernel.asm	/^f0106e49:	c7 04 24 0a 95 10 f0 	movl   $0xf010950a,(%esp)$/;"	l
f0106e50	obj/kern/kernel.asm	/^f0106e50:	e8 48 92 ff ff       	call   f010009d <_panic>$/;"	l
f0106e55	obj/kern/kernel.asm	/^f0106e55:	f6 c3 03             	test   $0x3,%bl$/;"	l
f0106e58	obj/kern/kernel.asm	/^f0106e58:	74 24                	je     f0106e7e <pci_conf1_set_addr+0xdd>$/;"	l
f0106e5a	obj/kern/kernel.asm	/^f0106e5a:	c7 44 24 0c 34 95 10 	movl   $0xf0109534,0xc(%esp)$/;"	l
f0106e61	obj/kern/kernel.asm	/^f0106e61:	f0 $/;"	l
f0106e62	obj/kern/kernel.asm	/^f0106e62:	c7 44 24 08 e1 85 10 	movl   $0xf01085e1,0x8(%esp)$/;"	l
f0106e69	obj/kern/kernel.asm	/^f0106e69:	f0 $/;"	l
f0106e6a	obj/kern/kernel.asm	/^f0106e6a:	c7 44 24 04 2f 00 00 	movl   $0x2f,0x4(%esp)$/;"	l
f0106e71	obj/kern/kernel.asm	/^f0106e71:	00 $/;"	l
f0106e72	obj/kern/kernel.asm	/^f0106e72:	c7 04 24 0a 95 10 f0 	movl   $0xf010950a,(%esp)$/;"	l
f0106e79	obj/kern/kernel.asm	/^f0106e79:	e8 1f 92 ff ff       	call   f010009d <_panic>$/;"	l
f0106e7e	obj/kern/kernel.asm	/^f0106e7e:	81 cb 00 00 00 80    	or     $0x80000000,%ebx$/;"	l
f0106e84	obj/kern/kernel.asm	/^f0106e84:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0106e87	obj/kern/kernel.asm	/^f0106e87:	09 cb                	or     %ecx,%ebx$/;"	l
f0106e89	obj/kern/kernel.asm	/^f0106e89:	89 d6                	mov    %edx,%esi$/;"	l
f0106e8b	obj/kern/kernel.asm	/^f0106e8b:	c1 e6 0b             	shl    $0xb,%esi$/;"	l
f0106e8e	obj/kern/kernel.asm	/^f0106e8e:	09 f3                	or     %esi,%ebx$/;"	l
f0106e90	obj/kern/kernel.asm	/^f0106e90:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0106e93	obj/kern/kernel.asm	/^f0106e93:	89 c6                	mov    %eax,%esi$/;"	l
f0106e95	obj/kern/kernel.asm	/^f0106e95:	89 d8                	mov    %ebx,%eax$/;"	l
f0106e97	obj/kern/kernel.asm	/^f0106e97:	09 f0                	or     %esi,%eax$/;"	l
f0106e99	obj/kern/kernel.asm	/^f0106e99:	ba f8 0c 00 00       	mov    $0xcf8,%edx$/;"	l
f0106e9e	obj/kern/kernel.asm	/^f0106e9e:	ef                   	out    %eax,(%dx)$/;"	l
f0106e9f	obj/kern/kernel.asm	/^f0106e9f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106ea2	obj/kern/kernel.asm	/^f0106ea2:	5b                   	pop    %ebx$/;"	l
f0106ea3	obj/kern/kernel.asm	/^f0106ea3:	5e                   	pop    %esi$/;"	l
f0106ea4	obj/kern/kernel.asm	/^f0106ea4:	5d                   	pop    %ebp$/;"	l
f0106ea5	obj/kern/kernel.asm	/^f0106ea5:	c3                   	ret    $/;"	l
f0106ea6	obj/kern/kernel.asm	/^f0106ea6 <pci_conf_read>:$/;"	l
f0106ea6	obj/kern/kernel.asm	/^f0106ea6:	55                   	push   %ebp$/;"	l
f0106ea7	obj/kern/kernel.asm	/^f0106ea7:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ea9	obj/kern/kernel.asm	/^f0106ea9:	53                   	push   %ebx$/;"	l
f0106eaa	obj/kern/kernel.asm	/^f0106eaa:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0106ead	obj/kern/kernel.asm	/^f0106ead:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0106eb0	obj/kern/kernel.asm	/^f0106eb0:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f0106eb3	obj/kern/kernel.asm	/^f0106eb3:	8b 00                	mov    (%eax),%eax$/;"	l
f0106eb5	obj/kern/kernel.asm	/^f0106eb5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0106eb8	obj/kern/kernel.asm	/^f0106eb8:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0106ebb	obj/kern/kernel.asm	/^f0106ebb:	89 da                	mov    %ebx,%edx$/;"	l
f0106ebd	obj/kern/kernel.asm	/^f0106ebd:	e8 df fe ff ff       	call   f0106da1 <pci_conf1_set_addr>$/;"	l
f0106ec2	obj/kern/kernel.asm	/^f0106ec2:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f0106ec7	obj/kern/kernel.asm	/^f0106ec7:	ed                   	in     (%dx),%eax$/;"	l
f0106ec8	obj/kern/kernel.asm	/^f0106ec8:	83 c4 14             	add    $0x14,%esp$/;"	l
f0106ecb	obj/kern/kernel.asm	/^f0106ecb:	5b                   	pop    %ebx$/;"	l
f0106ecc	obj/kern/kernel.asm	/^f0106ecc:	5d                   	pop    %ebp$/;"	l
f0106ecd	obj/kern/kernel.asm	/^f0106ecd:	c3                   	ret    $/;"	l
f0106ece	obj/kern/kernel.asm	/^f0106ece <pci_scan_bus>:$/;"	l
f0106ece	obj/kern/kernel.asm	/^f0106ece:	55                   	push   %ebp$/;"	l
f0106ecf	obj/kern/kernel.asm	/^f0106ecf:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ed1	obj/kern/kernel.asm	/^f0106ed1:	57                   	push   %edi$/;"	l
f0106ed2	obj/kern/kernel.asm	/^f0106ed2:	56                   	push   %esi$/;"	l
f0106ed3	obj/kern/kernel.asm	/^f0106ed3:	53                   	push   %ebx$/;"	l
f0106ed4	obj/kern/kernel.asm	/^f0106ed4:	81 ec 1c 01 00 00    	sub    $0x11c,%esp$/;"	l
f0106eda	obj/kern/kernel.asm	/^f0106eda:	89 c3                	mov    %eax,%ebx$/;"	l
f0106edc	obj/kern/kernel.asm	/^f0106edc:	c7 44 24 08 48 00 00 	movl   $0x48,0x8(%esp)$/;"	l
f0106ee3	obj/kern/kernel.asm	/^f0106ee3:	00 $/;"	l
f0106ee4	obj/kern/kernel.asm	/^f0106ee4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0106eeb	obj/kern/kernel.asm	/^f0106eeb:	00 $/;"	l
f0106eec	obj/kern/kernel.asm	/^f0106eec:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f0106eef	obj/kern/kernel.asm	/^f0106eef:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106ef2	obj/kern/kernel.asm	/^f0106ef2:	e8 a0 ef ff ff       	call   f0105e97 <memset>$/;"	l
f0106ef7	obj/kern/kernel.asm	/^f0106ef7:	89 5d a0             	mov    %ebx,-0x60(%ebp)$/;"	l
f0106efa	obj/kern/kernel.asm	/^f0106efa:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)$/;"	l
f0106f01	obj/kern/kernel.asm	/^f0106f01:	c7 85 00 ff ff ff 00 	movl   $0x0,-0x100(%ebp)$/;"	l
f0106f08	obj/kern/kernel.asm	/^f0106f08:	00 00 00 $/;"	l
f0106f0b	obj/kern/kernel.asm	/^f0106f0b:	ba 0c 00 00 00       	mov    $0xc,%edx$/;"	l
f0106f10	obj/kern/kernel.asm	/^f0106f10:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f0106f13	obj/kern/kernel.asm	/^f0106f13:	e8 8e ff ff ff       	call   f0106ea6 <pci_conf_read>$/;"	l
f0106f18	obj/kern/kernel.asm	/^f0106f18:	89 c2                	mov    %eax,%edx$/;"	l
f0106f1a	obj/kern/kernel.asm	/^f0106f1a:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0106f1d	obj/kern/kernel.asm	/^f0106f1d:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f0106f20	obj/kern/kernel.asm	/^f0106f20:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0106f23	obj/kern/kernel.asm	/^f0106f23:	0f 87 6f 01 00 00    	ja     f0107098 <pci_scan_bus+0x1ca>$/;"	l
f0106f29	obj/kern/kernel.asm	/^f0106f29:	83 85 00 ff ff ff 01 	addl   $0x1,-0x100(%ebp)$/;"	l
f0106f30	obj/kern/kernel.asm	/^f0106f30:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f0106f35	obj/kern/kernel.asm	/^f0106f35:	8d bd 10 ff ff ff    	lea    -0xf0(%ebp),%edi$/;"	l
f0106f3b	obj/kern/kernel.asm	/^f0106f3b:	8d 75 a0             	lea    -0x60(%ebp),%esi$/;"	l
f0106f3e	obj/kern/kernel.asm	/^f0106f3e:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106f40	obj/kern/kernel.asm	/^f0106f40:	c7 85 18 ff ff ff 00 	movl   $0x0,-0xe8(%ebp)$/;"	l
f0106f47	obj/kern/kernel.asm	/^f0106f47:	00 00 00 $/;"	l
f0106f4a	obj/kern/kernel.asm	/^f0106f4a:	25 00 00 80 00       	and    $0x800000,%eax$/;"	l
f0106f4f	obj/kern/kernel.asm	/^f0106f4f:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)$/;"	l
f0106f55	obj/kern/kernel.asm	/^f0106f55:	8d 9d 58 ff ff ff    	lea    -0xa8(%ebp),%ebx$/;"	l
f0106f5b	obj/kern/kernel.asm	/^f0106f5b:	e9 1d 01 00 00       	jmp    f010707d <pci_scan_bus+0x1af>$/;"	l
f0106f60	obj/kern/kernel.asm	/^f0106f60:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f0106f65	obj/kern/kernel.asm	/^f0106f65:	89 df                	mov    %ebx,%edi$/;"	l
f0106f67	obj/kern/kernel.asm	/^f0106f67:	8d b5 10 ff ff ff    	lea    -0xf0(%ebp),%esi$/;"	l
f0106f6d	obj/kern/kernel.asm	/^f0106f6d:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106f6f	obj/kern/kernel.asm	/^f0106f6f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106f74	obj/kern/kernel.asm	/^f0106f74:	8d 85 10 ff ff ff    	lea    -0xf0(%ebp),%eax$/;"	l
f0106f7a	obj/kern/kernel.asm	/^f0106f7a:	e8 27 ff ff ff       	call   f0106ea6 <pci_conf_read>$/;"	l
f0106f7f	obj/kern/kernel.asm	/^f0106f7f:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)$/;"	l
f0106f85	obj/kern/kernel.asm	/^f0106f85:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0106f89	obj/kern/kernel.asm	/^f0106f89:	0f 84 e7 00 00 00    	je     f0107076 <pci_scan_bus+0x1a8>$/;"	l
f0106f8f	obj/kern/kernel.asm	/^f0106f8f:	ba 3c 00 00 00       	mov    $0x3c,%edx$/;"	l
f0106f94	obj/kern/kernel.asm	/^f0106f94:	89 d8                	mov    %ebx,%eax$/;"	l
f0106f96	obj/kern/kernel.asm	/^f0106f96:	e8 0b ff ff ff       	call   f0106ea6 <pci_conf_read>$/;"	l
f0106f9b	obj/kern/kernel.asm	/^f0106f9b:	88 45 9c             	mov    %al,-0x64(%ebp)$/;"	l
f0106f9e	obj/kern/kernel.asm	/^f0106f9e:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
f0106fa3	obj/kern/kernel.asm	/^f0106fa3:	89 d8                	mov    %ebx,%eax$/;"	l
f0106fa5	obj/kern/kernel.asm	/^f0106fa5:	e8 fc fe ff ff       	call   f0106ea6 <pci_conf_read>$/;"	l
f0106faa	obj/kern/kernel.asm	/^f0106faa:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)$/;"	l
f0106fb0	obj/kern/kernel.asm	/^f0106fb0:	89 c2                	mov    %eax,%edx$/;"	l
f0106fb2	obj/kern/kernel.asm	/^f0106fb2:	c1 ea 18             	shr    $0x18,%edx$/;"	l
f0106fb5	obj/kern/kernel.asm	/^f0106fb5:	b9 48 95 10 f0       	mov    $0xf0109548,%ecx$/;"	l
f0106fba	obj/kern/kernel.asm	/^f0106fba:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0106fbd	obj/kern/kernel.asm	/^f0106fbd:	77 07                	ja     f0106fc6 <pci_scan_bus+0xf8>$/;"	l
f0106fbf	obj/kern/kernel.asm	/^f0106fbf:	8b 0c 95 bc 95 10 f0 	mov    -0xfef6a44(,%edx,4),%ecx$/;"	l
f0106fc6	obj/kern/kernel.asm	/^f0106fc6:	8b b5 64 ff ff ff    	mov    -0x9c(%ebp),%esi$/;"	l
f0106fcc	obj/kern/kernel.asm	/^f0106fcc:	0f b6 7d 9c          	movzbl -0x64(%ebp),%edi$/;"	l
f0106fd0	obj/kern/kernel.asm	/^f0106fd0:	89 7c 24 24          	mov    %edi,0x24(%esp)$/;"	l
f0106fd4	obj/kern/kernel.asm	/^f0106fd4:	89 4c 24 20          	mov    %ecx,0x20(%esp)$/;"	l
f0106fd8	obj/kern/kernel.asm	/^f0106fd8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106fdb	obj/kern/kernel.asm	/^f0106fdb:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106fde	obj/kern/kernel.asm	/^f0106fde:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0106fe2	obj/kern/kernel.asm	/^f0106fe2:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0106fe6	obj/kern/kernel.asm	/^f0106fe6:	89 f0                	mov    %esi,%eax$/;"	l
f0106fe8	obj/kern/kernel.asm	/^f0106fe8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106feb	obj/kern/kernel.asm	/^f0106feb:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0106fef	obj/kern/kernel.asm	/^f0106fef:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0106ff2	obj/kern/kernel.asm	/^f0106ff2:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0106ff6	obj/kern/kernel.asm	/^f0106ff6:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax$/;"	l
f0106ffc	obj/kern/kernel.asm	/^f0106ffc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107000	obj/kern/kernel.asm	/^f0107000:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax$/;"	l
f0107006	obj/kern/kernel.asm	/^f0107006:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010700a	obj/kern/kernel.asm	/^f010700a:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax$/;"	l
f0107010	obj/kern/kernel.asm	/^f0107010:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107013	obj/kern/kernel.asm	/^f0107013:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107017	obj/kern/kernel.asm	/^f0107017:	c7 04 24 d4 93 10 f0 	movl   $0xf01093d4,(%esp)$/;"	l
f010701e	obj/kern/kernel.asm	/^f010701e:	e8 45 d0 ff ff       	call   f0104068 <cprintf>$/;"	l
f0107023	obj/kern/kernel.asm	/^f0107023:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax$/;"	l
f0107029	obj/kern/kernel.asm	/^f0107029:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f010702d	obj/kern/kernel.asm	/^f010702d:	c7 44 24 08 ac 44 12 	movl   $0xf01244ac,0x8(%esp)$/;"	l
f0107034	obj/kern/kernel.asm	/^f0107034:	f0 $/;"	l
f0107035	obj/kern/kernel.asm	/^f0107035:	89 c2                	mov    %eax,%edx$/;"	l
f0107037	obj/kern/kernel.asm	/^f0107037:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010703a	obj/kern/kernel.asm	/^f010703a:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010703d	obj/kern/kernel.asm	/^f010703d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107041	obj/kern/kernel.asm	/^f0107041:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0107044	obj/kern/kernel.asm	/^f0107044:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107047	obj/kern/kernel.asm	/^f0107047:	e8 f2 fc ff ff       	call   f0106d3e <pci_attach_match>$/;"	l
f010704c	obj/kern/kernel.asm	/^f010704c:	85 c0                	test   %eax,%eax$/;"	l
f010704e	obj/kern/kernel.asm	/^f010704e:	75 26                	jne    f0107076 <pci_scan_bus+0x1a8>$/;"	l
f0107050	obj/kern/kernel.asm	/^f0107050:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax$/;"	l
f0107056	obj/kern/kernel.asm	/^f0107056:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f010705a	obj/kern/kernel.asm	/^f010705a:	c7 44 24 08 94 44 12 	movl   $0xf0124494,0x8(%esp)$/;"	l
f0107061	obj/kern/kernel.asm	/^f0107061:	f0 $/;"	l
f0107062	obj/kern/kernel.asm	/^f0107062:	89 c2                	mov    %eax,%edx$/;"	l
f0107064	obj/kern/kernel.asm	/^f0107064:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107067	obj/kern/kernel.asm	/^f0107067:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010706b	obj/kern/kernel.asm	/^f010706b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010706e	obj/kern/kernel.asm	/^f010706e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107071	obj/kern/kernel.asm	/^f0107071:	e8 c8 fc ff ff       	call   f0106d3e <pci_attach_match>$/;"	l
f0107076	obj/kern/kernel.asm	/^f0107076:	83 85 18 ff ff ff 01 	addl   $0x1,-0xe8(%ebp)$/;"	l
f010707d	obj/kern/kernel.asm	/^f010707d:	83 bd 04 ff ff ff 01 	cmpl   $0x1,-0xfc(%ebp)$/;"	l
f0107084	obj/kern/kernel.asm	/^f0107084:	19 c0                	sbb    %eax,%eax$/;"	l
f0107086	obj/kern/kernel.asm	/^f0107086:	83 e0 f9             	and    $0xfffffff9,%eax$/;"	l
f0107089	obj/kern/kernel.asm	/^f0107089:	83 c0 08             	add    $0x8,%eax$/;"	l
f010708c	obj/kern/kernel.asm	/^f010708c:	3b 85 18 ff ff ff    	cmp    -0xe8(%ebp),%eax$/;"	l
f0107092	obj/kern/kernel.asm	/^f0107092:	0f 87 c8 fe ff ff    	ja     f0106f60 <pci_scan_bus+0x92>$/;"	l
f0107098	obj/kern/kernel.asm	/^f0107098:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f010709b	obj/kern/kernel.asm	/^f010709b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010709e	obj/kern/kernel.asm	/^f010709e:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f01070a1	obj/kern/kernel.asm	/^f01070a1:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
f01070a4	obj/kern/kernel.asm	/^f01070a4:	0f 86 61 fe ff ff    	jbe    f0106f0b <pci_scan_bus+0x3d>$/;"	l
f01070aa	obj/kern/kernel.asm	/^f01070aa:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax$/;"	l
f01070b0	obj/kern/kernel.asm	/^f01070b0:	81 c4 1c 01 00 00    	add    $0x11c,%esp$/;"	l
f01070b6	obj/kern/kernel.asm	/^f01070b6:	5b                   	pop    %ebx$/;"	l
f01070b7	obj/kern/kernel.asm	/^f01070b7:	5e                   	pop    %esi$/;"	l
f01070b8	obj/kern/kernel.asm	/^f01070b8:	5f                   	pop    %edi$/;"	l
f01070b9	obj/kern/kernel.asm	/^f01070b9:	5d                   	pop    %ebp$/;"	l
f01070ba	obj/kern/kernel.asm	/^f01070ba:	c3                   	ret    $/;"	l
f01070bb	obj/kern/kernel.asm	/^f01070bb <pci_bridge_attach>:$/;"	l
f01070bb	obj/kern/kernel.asm	/^f01070bb:	55                   	push   %ebp$/;"	l
f01070bc	obj/kern/kernel.asm	/^f01070bc:	89 e5                	mov    %esp,%ebp$/;"	l
f01070be	obj/kern/kernel.asm	/^f01070be:	57                   	push   %edi$/;"	l
f01070bf	obj/kern/kernel.asm	/^f01070bf:	56                   	push   %esi$/;"	l
f01070c0	obj/kern/kernel.asm	/^f01070c0:	53                   	push   %ebx$/;"	l
f01070c1	obj/kern/kernel.asm	/^f01070c1:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01070c4	obj/kern/kernel.asm	/^f01070c4:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01070c7	obj/kern/kernel.asm	/^f01070c7:	ba 1c 00 00 00       	mov    $0x1c,%edx$/;"	l
f01070cc	obj/kern/kernel.asm	/^f01070cc:	89 d8                	mov    %ebx,%eax$/;"	l
f01070ce	obj/kern/kernel.asm	/^f01070ce:	e8 d3 fd ff ff       	call   f0106ea6 <pci_conf_read>$/;"	l
f01070d3	obj/kern/kernel.asm	/^f01070d3:	89 c7                	mov    %eax,%edi$/;"	l
f01070d5	obj/kern/kernel.asm	/^f01070d5:	ba 18 00 00 00       	mov    $0x18,%edx$/;"	l
f01070da	obj/kern/kernel.asm	/^f01070da:	89 d8                	mov    %ebx,%eax$/;"	l
f01070dc	obj/kern/kernel.asm	/^f01070dc:	e8 c5 fd ff ff       	call   f0106ea6 <pci_conf_read>$/;"	l
f01070e1	obj/kern/kernel.asm	/^f01070e1:	83 e7 0f             	and    $0xf,%edi$/;"	l
f01070e4	obj/kern/kernel.asm	/^f01070e4:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f01070e7	obj/kern/kernel.asm	/^f01070e7:	75 2a                	jne    f0107113 <pci_bridge_attach+0x58>$/;"	l
f01070e9	obj/kern/kernel.asm	/^f01070e9:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01070ec	obj/kern/kernel.asm	/^f01070ec:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01070f0	obj/kern/kernel.asm	/^f01070f0:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01070f3	obj/kern/kernel.asm	/^f01070f3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01070f7	obj/kern/kernel.asm	/^f01070f7:	8b 03                	mov    (%ebx),%eax$/;"	l
f01070f9	obj/kern/kernel.asm	/^f01070f9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01070fc	obj/kern/kernel.asm	/^f01070fc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107100	obj/kern/kernel.asm	/^f0107100:	c7 04 24 10 94 10 f0 	movl   $0xf0109410,(%esp)$/;"	l
f0107107	obj/kern/kernel.asm	/^f0107107:	e8 5c cf ff ff       	call   f0104068 <cprintf>$/;"	l
f010710c	obj/kern/kernel.asm	/^f010710c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107111	obj/kern/kernel.asm	/^f0107111:	eb 67                	jmp    f010717a <pci_bridge_attach+0xbf>$/;"	l
f0107113	obj/kern/kernel.asm	/^f0107113:	89 c6                	mov    %eax,%esi$/;"	l
f0107115	obj/kern/kernel.asm	/^f0107115:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f010711c	obj/kern/kernel.asm	/^f010711c:	00 $/;"	l
f010711d	obj/kern/kernel.asm	/^f010711d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107124	obj/kern/kernel.asm	/^f0107124:	00 $/;"	l
f0107125	obj/kern/kernel.asm	/^f0107125:	8d 7d e0             	lea    -0x20(%ebp),%edi$/;"	l
f0107128	obj/kern/kernel.asm	/^f0107128:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010712b	obj/kern/kernel.asm	/^f010712b:	e8 67 ed ff ff       	call   f0105e97 <memset>$/;"	l
f0107130	obj/kern/kernel.asm	/^f0107130:	89 5d e0             	mov    %ebx,-0x20(%ebp)$/;"	l
f0107133	obj/kern/kernel.asm	/^f0107133:	89 f0                	mov    %esi,%eax$/;"	l
f0107135	obj/kern/kernel.asm	/^f0107135:	0f b6 c4             	movzbl %ah,%eax$/;"	l
f0107138	obj/kern/kernel.asm	/^f0107138:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010713b	obj/kern/kernel.asm	/^f010713b:	89 f2                	mov    %esi,%edx$/;"	l
f010713d	obj/kern/kernel.asm	/^f010713d:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107140	obj/kern/kernel.asm	/^f0107140:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f0107143	obj/kern/kernel.asm	/^f0107143:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f0107147	obj/kern/kernel.asm	/^f0107147:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f010714b	obj/kern/kernel.asm	/^f010714b:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f010714e	obj/kern/kernel.asm	/^f010714e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107152	obj/kern/kernel.asm	/^f0107152:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107155	obj/kern/kernel.asm	/^f0107155:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107159	obj/kern/kernel.asm	/^f0107159:	8b 03                	mov    (%ebx),%eax$/;"	l
f010715b	obj/kern/kernel.asm	/^f010715b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f010715e	obj/kern/kernel.asm	/^f010715e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107162	obj/kern/kernel.asm	/^f0107162:	c7 04 24 44 94 10 f0 	movl   $0xf0109444,(%esp)$/;"	l
f0107169	obj/kern/kernel.asm	/^f0107169:	e8 fa ce ff ff       	call   f0104068 <cprintf>$/;"	l
f010716e	obj/kern/kernel.asm	/^f010716e:	89 f8                	mov    %edi,%eax$/;"	l
f0107170	obj/kern/kernel.asm	/^f0107170:	e8 59 fd ff ff       	call   f0106ece <pci_scan_bus>$/;"	l
f0107175	obj/kern/kernel.asm	/^f0107175:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010717a	obj/kern/kernel.asm	/^f010717a:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f010717d	obj/kern/kernel.asm	/^f010717d:	5b                   	pop    %ebx$/;"	l
f010717e	obj/kern/kernel.asm	/^f010717e:	5e                   	pop    %esi$/;"	l
f010717f	obj/kern/kernel.asm	/^f010717f:	5f                   	pop    %edi$/;"	l
f0107180	obj/kern/kernel.asm	/^f0107180:	5d                   	pop    %ebp$/;"	l
f0107181	obj/kern/kernel.asm	/^f0107181:	c3                   	ret    $/;"	l
f0107182	obj/kern/kernel.asm	/^f0107182 <pci_conf_write>:$/;"	l
f0107182	obj/kern/kernel.asm	/^f0107182:	55                   	push   %ebp$/;"	l
f0107183	obj/kern/kernel.asm	/^f0107183:	89 e5                	mov    %esp,%ebp$/;"	l
f0107185	obj/kern/kernel.asm	/^f0107185:	56                   	push   %esi$/;"	l
f0107186	obj/kern/kernel.asm	/^f0107186:	53                   	push   %ebx$/;"	l
f0107187	obj/kern/kernel.asm	/^f0107187:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010718a	obj/kern/kernel.asm	/^f010718a:	89 cb                	mov    %ecx,%ebx$/;"	l
f010718c	obj/kern/kernel.asm	/^f010718c:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f010718f	obj/kern/kernel.asm	/^f010718f:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0107192	obj/kern/kernel.asm	/^f0107192:	8b 00                	mov    (%eax),%eax$/;"	l
f0107194	obj/kern/kernel.asm	/^f0107194:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107197	obj/kern/kernel.asm	/^f0107197:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010719a	obj/kern/kernel.asm	/^f010719a:	89 f2                	mov    %esi,%edx$/;"	l
f010719c	obj/kern/kernel.asm	/^f010719c:	e8 00 fc ff ff       	call   f0106da1 <pci_conf1_set_addr>$/;"	l
f01071a1	obj/kern/kernel.asm	/^f01071a1:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f01071a6	obj/kern/kernel.asm	/^f01071a6:	89 d8                	mov    %ebx,%eax$/;"	l
f01071a8	obj/kern/kernel.asm	/^f01071a8:	ef                   	out    %eax,(%dx)$/;"	l
f01071a9	obj/kern/kernel.asm	/^f01071a9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01071ac	obj/kern/kernel.asm	/^f01071ac:	5b                   	pop    %ebx$/;"	l
f01071ad	obj/kern/kernel.asm	/^f01071ad:	5e                   	pop    %esi$/;"	l
f01071ae	obj/kern/kernel.asm	/^f01071ae:	5d                   	pop    %ebp$/;"	l
f01071af	obj/kern/kernel.asm	/^f01071af:	c3                   	ret    $/;"	l
f01071b0	obj/kern/kernel.asm	/^f01071b0 <pci_func_enable>:$/;"	l
f01071b0	obj/kern/kernel.asm	/^f01071b0:	55                   	push   %ebp$/;"	l
f01071b1	obj/kern/kernel.asm	/^f01071b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01071b3	obj/kern/kernel.asm	/^f01071b3:	57                   	push   %edi$/;"	l
f01071b4	obj/kern/kernel.asm	/^f01071b4:	56                   	push   %esi$/;"	l
f01071b5	obj/kern/kernel.asm	/^f01071b5:	53                   	push   %ebx$/;"	l
f01071b6	obj/kern/kernel.asm	/^f01071b6:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01071b9	obj/kern/kernel.asm	/^f01071b9:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01071bc	obj/kern/kernel.asm	/^f01071bc:	b9 07 00 00 00       	mov    $0x7,%ecx$/;"	l
f01071c1	obj/kern/kernel.asm	/^f01071c1:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f01071c6	obj/kern/kernel.asm	/^f01071c6:	89 f8                	mov    %edi,%eax$/;"	l
f01071c8	obj/kern/kernel.asm	/^f01071c8:	e8 b5 ff ff ff       	call   f0107182 <pci_conf_write>$/;"	l
f01071cd	obj/kern/kernel.asm	/^f01071cd:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f01071d2	obj/kern/kernel.asm	/^f01071d2:	89 f2                	mov    %esi,%edx$/;"	l
f01071d4	obj/kern/kernel.asm	/^f01071d4:	89 f8                	mov    %edi,%eax$/;"	l
f01071d6	obj/kern/kernel.asm	/^f01071d6:	e8 cb fc ff ff       	call   f0106ea6 <pci_conf_read>$/;"	l
f01071db	obj/kern/kernel.asm	/^f01071db:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01071de	obj/kern/kernel.asm	/^f01071de:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f01071e3	obj/kern/kernel.asm	/^f01071e3:	89 f2                	mov    %esi,%edx$/;"	l
f01071e5	obj/kern/kernel.asm	/^f01071e5:	89 f8                	mov    %edi,%eax$/;"	l
f01071e7	obj/kern/kernel.asm	/^f01071e7:	e8 96 ff ff ff       	call   f0107182 <pci_conf_write>$/;"	l
f01071ec	obj/kern/kernel.asm	/^f01071ec:	89 f2                	mov    %esi,%edx$/;"	l
f01071ee	obj/kern/kernel.asm	/^f01071ee:	89 f8                	mov    %edi,%eax$/;"	l
f01071f0	obj/kern/kernel.asm	/^f01071f0:	e8 b1 fc ff ff       	call   f0106ea6 <pci_conf_read>$/;"	l
f01071f5	obj/kern/kernel.asm	/^f01071f5:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f01071fa	obj/kern/kernel.asm	/^f01071fa:	85 c0                	test   %eax,%eax$/;"	l
f01071fc	obj/kern/kernel.asm	/^f01071fc:	0f 84 c1 00 00 00    	je     f01072c3 <pci_func_enable+0x113>$/;"	l
f0107202	obj/kern/kernel.asm	/^f0107202:	8d 56 f0             	lea    -0x10(%esi),%edx$/;"	l
f0107205	obj/kern/kernel.asm	/^f0107205:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0107208	obj/kern/kernel.asm	/^f0107208:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f010720b	obj/kern/kernel.asm	/^f010720b:	a8 01                	test   $0x1,%al$/;"	l
f010720d	obj/kern/kernel.asm	/^f010720d:	75 2c                	jne    f010723b <pci_func_enable+0x8b>$/;"	l
f010720f	obj/kern/kernel.asm	/^f010720f:	89 c2                	mov    %eax,%edx$/;"	l
f0107211	obj/kern/kernel.asm	/^f0107211:	83 e2 06             	and    $0x6,%edx$/;"	l
f0107214	obj/kern/kernel.asm	/^f0107214:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0107217	obj/kern/kernel.asm	/^f0107217:	0f 94 c3             	sete   %bl$/;"	l
f010721a	obj/kern/kernel.asm	/^f010721a:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f010721d	obj/kern/kernel.asm	/^f010721d:	8d 1c 9d 04 00 00 00 	lea    0x4(,%ebx,4),%ebx$/;"	l
f0107224	obj/kern/kernel.asm	/^f0107224:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107227	obj/kern/kernel.asm	/^f0107227:	89 c2                	mov    %eax,%edx$/;"	l
f0107229	obj/kern/kernel.asm	/^f0107229:	f7 da                	neg    %edx$/;"	l
f010722b	obj/kern/kernel.asm	/^f010722b:	21 d0                	and    %edx,%eax$/;"	l
f010722d	obj/kern/kernel.asm	/^f010722d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0107230	obj/kern/kernel.asm	/^f0107230:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107233	obj/kern/kernel.asm	/^f0107233:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107236	obj/kern/kernel.asm	/^f0107236:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0107239	obj/kern/kernel.asm	/^f0107239:	eb 1a                	jmp    f0107255 <pci_func_enable+0xa5>$/;"	l
f010723b	obj/kern/kernel.asm	/^f010723b:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f010723e	obj/kern/kernel.asm	/^f010723e:	89 c2                	mov    %eax,%edx$/;"	l
f0107240	obj/kern/kernel.asm	/^f0107240:	f7 da                	neg    %edx$/;"	l
f0107242	obj/kern/kernel.asm	/^f0107242:	21 d0                	and    %edx,%eax$/;"	l
f0107244	obj/kern/kernel.asm	/^f0107244:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0107247	obj/kern/kernel.asm	/^f0107247:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010724a	obj/kern/kernel.asm	/^f010724a:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f010724d	obj/kern/kernel.asm	/^f010724d:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0107250	obj/kern/kernel.asm	/^f0107250:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f0107255	obj/kern/kernel.asm	/^f0107255:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0107258	obj/kern/kernel.asm	/^f0107258:	89 f2                	mov    %esi,%edx$/;"	l
f010725a	obj/kern/kernel.asm	/^f010725a:	89 f8                	mov    %edi,%eax$/;"	l
f010725c	obj/kern/kernel.asm	/^f010725c:	e8 21 ff ff ff       	call   f0107182 <pci_conf_write>$/;"	l
f0107261	obj/kern/kernel.asm	/^f0107261:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0107264	obj/kern/kernel.asm	/^f0107264:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f0107267	obj/kern/kernel.asm	/^f0107267:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f010726a	obj/kern/kernel.asm	/^f010726a:	89 48 14             	mov    %ecx,0x14(%eax)$/;"	l
f010726d	obj/kern/kernel.asm	/^f010726d:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0107270	obj/kern/kernel.asm	/^f0107270:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
f0107273	obj/kern/kernel.asm	/^f0107273:	85 c9                	test   %ecx,%ecx$/;"	l
f0107275	obj/kern/kernel.asm	/^f0107275:	75 4c                	jne    f01072c3 <pci_func_enable+0x113>$/;"	l
f0107277	obj/kern/kernel.asm	/^f0107277:	85 d2                	test   %edx,%edx$/;"	l
f0107279	obj/kern/kernel.asm	/^f0107279:	74 48                	je     f01072c3 <pci_func_enable+0x113>$/;"	l
f010727b	obj/kern/kernel.asm	/^f010727b:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f010727e	obj/kern/kernel.asm	/^f010727e:	89 54 24 20          	mov    %edx,0x20(%esp)$/;"	l
f0107282	obj/kern/kernel.asm	/^f0107282:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0107285	obj/kern/kernel.asm	/^f0107285:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)$/;"	l
f0107289	obj/kern/kernel.asm	/^f0107289:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f010728c	obj/kern/kernel.asm	/^f010728c:	89 4c 24 18          	mov    %ecx,0x18(%esp)$/;"	l
f0107290	obj/kern/kernel.asm	/^f0107290:	89 c2                	mov    %eax,%edx$/;"	l
f0107292	obj/kern/kernel.asm	/^f0107292:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107295	obj/kern/kernel.asm	/^f0107295:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107299	obj/kern/kernel.asm	/^f0107299:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010729c	obj/kern/kernel.asm	/^f010729c:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01072a0	obj/kern/kernel.asm	/^f01072a0:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f01072a3	obj/kern/kernel.asm	/^f01072a3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01072a7	obj/kern/kernel.asm	/^f01072a7:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f01072aa	obj/kern/kernel.asm	/^f01072aa:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01072ae	obj/kern/kernel.asm	/^f01072ae:	8b 07                	mov    (%edi),%eax$/;"	l
f01072b0	obj/kern/kernel.asm	/^f01072b0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01072b3	obj/kern/kernel.asm	/^f01072b3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01072b7	obj/kern/kernel.asm	/^f01072b7:	c7 04 24 74 94 10 f0 	movl   $0xf0109474,(%esp)$/;"	l
f01072be	obj/kern/kernel.asm	/^f01072be:	e8 a5 cd ff ff       	call   f0104068 <cprintf>$/;"	l
f01072c3	obj/kern/kernel.asm	/^f01072c3:	01 de                	add    %ebx,%esi$/;"	l
f01072c5	obj/kern/kernel.asm	/^f01072c5:	83 fe 27             	cmp    $0x27,%esi$/;"	l
f01072c8	obj/kern/kernel.asm	/^f01072c8:	0f 86 04 ff ff ff    	jbe    f01071d2 <pci_func_enable+0x22>$/;"	l
f01072ce	obj/kern/kernel.asm	/^f01072ce:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f01072d1	obj/kern/kernel.asm	/^f01072d1:	89 c2                	mov    %eax,%edx$/;"	l
f01072d3	obj/kern/kernel.asm	/^f01072d3:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01072d6	obj/kern/kernel.asm	/^f01072d6:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f01072da	obj/kern/kernel.asm	/^f01072da:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01072dd	obj/kern/kernel.asm	/^f01072dd:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01072e1	obj/kern/kernel.asm	/^f01072e1:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f01072e4	obj/kern/kernel.asm	/^f01072e4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01072e8	obj/kern/kernel.asm	/^f01072e8:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f01072eb	obj/kern/kernel.asm	/^f01072eb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01072ef	obj/kern/kernel.asm	/^f01072ef:	8b 07                	mov    (%edi),%eax$/;"	l
f01072f1	obj/kern/kernel.asm	/^f01072f1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01072f4	obj/kern/kernel.asm	/^f01072f4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01072f8	obj/kern/kernel.asm	/^f01072f8:	c7 04 24 d0 94 10 f0 	movl   $0xf01094d0,(%esp)$/;"	l
f01072ff	obj/kern/kernel.asm	/^f01072ff:	e8 64 cd ff ff       	call   f0104068 <cprintf>$/;"	l
f0107304	obj/kern/kernel.asm	/^f0107304:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0107307	obj/kern/kernel.asm	/^f0107307:	5b                   	pop    %ebx$/;"	l
f0107308	obj/kern/kernel.asm	/^f0107308:	5e                   	pop    %esi$/;"	l
f0107309	obj/kern/kernel.asm	/^f0107309:	5f                   	pop    %edi$/;"	l
f010730a	obj/kern/kernel.asm	/^f010730a:	5d                   	pop    %ebp$/;"	l
f010730b	obj/kern/kernel.asm	/^f010730b:	c3                   	ret    $/;"	l
f010730c	obj/kern/kernel.asm	/^f010730c <pci_init>:$/;"	l
f010730c	obj/kern/kernel.asm	/^f010730c:	55                   	push   %ebp$/;"	l
f010730d	obj/kern/kernel.asm	/^f010730d:	89 e5                	mov    %esp,%ebp$/;"	l
f010730f	obj/kern/kernel.asm	/^f010730f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107312	obj/kern/kernel.asm	/^f0107312:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0107319	obj/kern/kernel.asm	/^f0107319:	00 $/;"	l
f010731a	obj/kern/kernel.asm	/^f010731a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107321	obj/kern/kernel.asm	/^f0107321:	00 $/;"	l
f0107322	obj/kern/kernel.asm	/^f0107322:	c7 04 24 00 fd 2f f0 	movl   $0xf02ffd00,(%esp)$/;"	l
f0107329	obj/kern/kernel.asm	/^f0107329:	e8 69 eb ff ff       	call   f0105e97 <memset>$/;"	l
f010732e	obj/kern/kernel.asm	/^f010732e:	b8 00 fd 2f f0       	mov    $0xf02ffd00,%eax$/;"	l
f0107333	obj/kern/kernel.asm	/^f0107333:	e8 96 fb ff ff       	call   f0106ece <pci_scan_bus>$/;"	l
f0107338	obj/kern/kernel.asm	/^f0107338:	c9                   	leave  $/;"	l
f0107339	obj/kern/kernel.asm	/^f0107339:	c3                   	ret    $/;"	l
f010733a	obj/kern/kernel.asm	/^f010733a <time_init>:$/;"	l
f010733a	obj/kern/kernel.asm	/^f010733a:	55                   	push   %ebp$/;"	l
f010733b	obj/kern/kernel.asm	/^f010733b:	89 e5                	mov    %esp,%ebp$/;"	l
f010733d	obj/kern/kernel.asm	/^f010733d:	c7 05 08 fd 2f f0 00 	movl   $0x0,0xf02ffd08$/;"	l
f0107344	obj/kern/kernel.asm	/^f0107344:	00 00 00 $/;"	l
f0107347	obj/kern/kernel.asm	/^f0107347:	5d                   	pop    %ebp$/;"	l
f0107348	obj/kern/kernel.asm	/^f0107348:	c3                   	ret    $/;"	l
f0107349	obj/kern/kernel.asm	/^f0107349 <time_tick>:$/;"	l
f0107349	obj/kern/kernel.asm	/^f0107349:	a1 08 fd 2f f0       	mov    0xf02ffd08,%eax$/;"	l
f010734e	obj/kern/kernel.asm	/^f010734e:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107351	obj/kern/kernel.asm	/^f0107351:	a3 08 fd 2f f0       	mov    %eax,0xf02ffd08$/;"	l
f0107356	obj/kern/kernel.asm	/^f0107356:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0107359	obj/kern/kernel.asm	/^f0107359:	01 d2                	add    %edx,%edx$/;"	l
f010735b	obj/kern/kernel.asm	/^f010735b:	39 d0                	cmp    %edx,%eax$/;"	l
f010735d	obj/kern/kernel.asm	/^f010735d:	76 22                	jbe    f0107381 <time_tick+0x38>$/;"	l
f010735f	obj/kern/kernel.asm	/^f010735f:	55                   	push   %ebp$/;"	l
f0107360	obj/kern/kernel.asm	/^f0107360:	89 e5                	mov    %esp,%ebp$/;"	l
f0107362	obj/kern/kernel.asm	/^f0107362:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107365	obj/kern/kernel.asm	/^f0107365:	c7 44 24 08 d8 95 10 	movl   $0xf01095d8,0x8(%esp)$/;"	l
f010736c	obj/kern/kernel.asm	/^f010736c:	f0 $/;"	l
f010736d	obj/kern/kernel.asm	/^f010736d:	c7 44 24 04 13 00 00 	movl   $0x13,0x4(%esp)$/;"	l
f0107374	obj/kern/kernel.asm	/^f0107374:	00 $/;"	l
f0107375	obj/kern/kernel.asm	/^f0107375:	c7 04 24 f3 95 10 f0 	movl   $0xf01095f3,(%esp)$/;"	l
f010737c	obj/kern/kernel.asm	/^f010737c:	e8 1c 8d ff ff       	call   f010009d <_panic>$/;"	l
f0107381	obj/kern/kernel.asm	/^f0107381:	f3 c3                	repz ret $/;"	l
f0107383	obj/kern/kernel.asm	/^f0107383 <time_msec>:$/;"	l
f0107383	obj/kern/kernel.asm	/^f0107383:	55                   	push   %ebp$/;"	l
f0107384	obj/kern/kernel.asm	/^f0107384:	89 e5                	mov    %esp,%ebp$/;"	l
f0107386	obj/kern/kernel.asm	/^f0107386:	a1 08 fd 2f f0       	mov    0xf02ffd08,%eax$/;"	l
f010738b	obj/kern/kernel.asm	/^f010738b:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010738e	obj/kern/kernel.asm	/^f010738e:	01 c0                	add    %eax,%eax$/;"	l
f0107390	obj/kern/kernel.asm	/^f0107390:	5d                   	pop    %ebp$/;"	l
f0107391	obj/kern/kernel.asm	/^f0107391:	c3                   	ret    $/;"	l
f0107392	obj/kern/kernel.asm	/^f0107392:	66 90                	xchg   %ax,%ax$/;"	l
f0107394	obj/kern/kernel.asm	/^f0107394:	66 90                	xchg   %ax,%ax$/;"	l
f0107396	obj/kern/kernel.asm	/^f0107396:	66 90                	xchg   %ax,%ax$/;"	l
f0107398	obj/kern/kernel.asm	/^f0107398:	66 90                	xchg   %ax,%ax$/;"	l
f010739a	obj/kern/kernel.asm	/^f010739a:	66 90                	xchg   %ax,%ax$/;"	l
f010739c	obj/kern/kernel.asm	/^f010739c:	66 90                	xchg   %ax,%ax$/;"	l
f010739e	obj/kern/kernel.asm	/^f010739e:	66 90                	xchg   %ax,%ax$/;"	l
f01073a0	obj/kern/kernel.asm	/^f01073a0 <__udivdi3>:$/;"	l
f01073a0	obj/kern/kernel.asm	/^f01073a0:	55                   	push   %ebp$/;"	l
f01073a1	obj/kern/kernel.asm	/^f01073a1:	57                   	push   %edi$/;"	l
f01073a2	obj/kern/kernel.asm	/^f01073a2:	56                   	push   %esi$/;"	l
f01073a3	obj/kern/kernel.asm	/^f01073a3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01073a6	obj/kern/kernel.asm	/^f01073a6:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f01073aa	obj/kern/kernel.asm	/^f01073aa:	8b 7c 24 1c          	mov    0x1c(%esp),%edi$/;"	l
f01073ae	obj/kern/kernel.asm	/^f01073ae:	8b 6c 24 20          	mov    0x20(%esp),%ebp$/;"	l
f01073b2	obj/kern/kernel.asm	/^f01073b2:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f01073b6	obj/kern/kernel.asm	/^f01073b6:	85 c0                	test   %eax,%eax$/;"	l
f01073b8	obj/kern/kernel.asm	/^f01073b8:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01073bc	obj/kern/kernel.asm	/^f01073bc:	89 ea                	mov    %ebp,%edx$/;"	l
f01073be	obj/kern/kernel.asm	/^f01073be:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01073c1	obj/kern/kernel.asm	/^f01073c1:	75 2d                	jne    f01073f0 <__udivdi3+0x50>$/;"	l
f01073c3	obj/kern/kernel.asm	/^f01073c3:	39 e9                	cmp    %ebp,%ecx$/;"	l
f01073c5	obj/kern/kernel.asm	/^f01073c5:	77 61                	ja     f0107428 <__udivdi3+0x88>$/;"	l
f01073c7	obj/kern/kernel.asm	/^f01073c7:	85 c9                	test   %ecx,%ecx$/;"	l
f01073c9	obj/kern/kernel.asm	/^f01073c9:	89 ce                	mov    %ecx,%esi$/;"	l
f01073cb	obj/kern/kernel.asm	/^f01073cb:	75 0b                	jne    f01073d8 <__udivdi3+0x38>$/;"	l
f01073cd	obj/kern/kernel.asm	/^f01073cd:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01073d2	obj/kern/kernel.asm	/^f01073d2:	31 d2                	xor    %edx,%edx$/;"	l
f01073d4	obj/kern/kernel.asm	/^f01073d4:	f7 f1                	div    %ecx$/;"	l
f01073d6	obj/kern/kernel.asm	/^f01073d6:	89 c6                	mov    %eax,%esi$/;"	l
f01073d8	obj/kern/kernel.asm	/^f01073d8:	31 d2                	xor    %edx,%edx$/;"	l
f01073da	obj/kern/kernel.asm	/^f01073da:	89 e8                	mov    %ebp,%eax$/;"	l
f01073dc	obj/kern/kernel.asm	/^f01073dc:	f7 f6                	div    %esi$/;"	l
f01073de	obj/kern/kernel.asm	/^f01073de:	89 c5                	mov    %eax,%ebp$/;"	l
f01073e0	obj/kern/kernel.asm	/^f01073e0:	89 f8                	mov    %edi,%eax$/;"	l
f01073e2	obj/kern/kernel.asm	/^f01073e2:	f7 f6                	div    %esi$/;"	l
f01073e4	obj/kern/kernel.asm	/^f01073e4:	89 ea                	mov    %ebp,%edx$/;"	l
f01073e6	obj/kern/kernel.asm	/^f01073e6:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01073e9	obj/kern/kernel.asm	/^f01073e9:	5e                   	pop    %esi$/;"	l
f01073ea	obj/kern/kernel.asm	/^f01073ea:	5f                   	pop    %edi$/;"	l
f01073eb	obj/kern/kernel.asm	/^f01073eb:	5d                   	pop    %ebp$/;"	l
f01073ec	obj/kern/kernel.asm	/^f01073ec:	c3                   	ret    $/;"	l
f01073ed	obj/kern/kernel.asm	/^f01073ed:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01073f0	obj/kern/kernel.asm	/^f01073f0:	39 e8                	cmp    %ebp,%eax$/;"	l
f01073f2	obj/kern/kernel.asm	/^f01073f2:	77 24                	ja     f0107418 <__udivdi3+0x78>$/;"	l
f01073f4	obj/kern/kernel.asm	/^f01073f4:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f01073f7	obj/kern/kernel.asm	/^f01073f7:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f01073fa	obj/kern/kernel.asm	/^f01073fa:	75 3c                	jne    f0107438 <__udivdi3+0x98>$/;"	l
f01073fc	obj/kern/kernel.asm	/^f01073fc:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0107400	obj/kern/kernel.asm	/^f0107400:	39 34 24             	cmp    %esi,(%esp)$/;"	l
f0107403	obj/kern/kernel.asm	/^f0107403:	0f 86 9f 00 00 00    	jbe    f01074a8 <__udivdi3+0x108>$/;"	l
f0107409	obj/kern/kernel.asm	/^f0107409:	39 d0                	cmp    %edx,%eax$/;"	l
f010740b	obj/kern/kernel.asm	/^f010740b:	0f 82 97 00 00 00    	jb     f01074a8 <__udivdi3+0x108>$/;"	l
f0107411	obj/kern/kernel.asm	/^f0107411:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107418	obj/kern/kernel.asm	/^f0107418:	31 d2                	xor    %edx,%edx$/;"	l
f010741a	obj/kern/kernel.asm	/^f010741a:	31 c0                	xor    %eax,%eax$/;"	l
f010741c	obj/kern/kernel.asm	/^f010741c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010741f	obj/kern/kernel.asm	/^f010741f:	5e                   	pop    %esi$/;"	l
f0107420	obj/kern/kernel.asm	/^f0107420:	5f                   	pop    %edi$/;"	l
f0107421	obj/kern/kernel.asm	/^f0107421:	5d                   	pop    %ebp$/;"	l
f0107422	obj/kern/kernel.asm	/^f0107422:	c3                   	ret    $/;"	l
f0107423	obj/kern/kernel.asm	/^f0107423:	90                   	nop$/;"	l
f0107424	obj/kern/kernel.asm	/^f0107424:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107428	obj/kern/kernel.asm	/^f0107428:	89 f8                	mov    %edi,%eax$/;"	l
f010742a	obj/kern/kernel.asm	/^f010742a:	f7 f1                	div    %ecx$/;"	l
f010742c	obj/kern/kernel.asm	/^f010742c:	31 d2                	xor    %edx,%edx$/;"	l
f010742e	obj/kern/kernel.asm	/^f010742e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107431	obj/kern/kernel.asm	/^f0107431:	5e                   	pop    %esi$/;"	l
f0107432	obj/kern/kernel.asm	/^f0107432:	5f                   	pop    %edi$/;"	l
f0107433	obj/kern/kernel.asm	/^f0107433:	5d                   	pop    %ebp$/;"	l
f0107434	obj/kern/kernel.asm	/^f0107434:	c3                   	ret    $/;"	l
f0107435	obj/kern/kernel.asm	/^f0107435:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0107438	obj/kern/kernel.asm	/^f0107438:	89 e9                	mov    %ebp,%ecx$/;"	l
f010743a	obj/kern/kernel.asm	/^f010743a:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f010743d	obj/kern/kernel.asm	/^f010743d:	d3 e0                	shl    %cl,%eax$/;"	d
f010743f	obj/kern/kernel.asm	/^f010743f:	89 c6                	mov    %eax,%esi$/;"	l
f0107441	obj/kern/kernel.asm	/^f0107441:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0107446	obj/kern/kernel.asm	/^f0107446:	29 e8                	sub    %ebp,%eax$/;"	l
f0107448	obj/kern/kernel.asm	/^f0107448:	89 c1                	mov    %eax,%ecx$/;"	l
f010744a	obj/kern/kernel.asm	/^f010744a:	d3 ef                	shr    %cl,%edi$/;"	d
f010744c	obj/kern/kernel.asm	/^f010744c:	89 e9                	mov    %ebp,%ecx$/;"	l
f010744e	obj/kern/kernel.asm	/^f010744e:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0107452	obj/kern/kernel.asm	/^f0107452:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f0107455	obj/kern/kernel.asm	/^f0107455:	09 74 24 08          	or     %esi,0x8(%esp)$/;"	l
f0107459	obj/kern/kernel.asm	/^f0107459:	89 d6                	mov    %edx,%esi$/;"	l
f010745b	obj/kern/kernel.asm	/^f010745b:	d3 e7                	shl    %cl,%edi$/;"	d
f010745d	obj/kern/kernel.asm	/^f010745d:	89 c1                	mov    %eax,%ecx$/;"	l
f010745f	obj/kern/kernel.asm	/^f010745f:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0107462	obj/kern/kernel.asm	/^f0107462:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0107466	obj/kern/kernel.asm	/^f0107466:	d3 ee                	shr    %cl,%esi$/;"	d
f0107468	obj/kern/kernel.asm	/^f0107468:	89 e9                	mov    %ebp,%ecx$/;"	l
f010746a	obj/kern/kernel.asm	/^f010746a:	d3 e2                	shl    %cl,%edx$/;"	d
f010746c	obj/kern/kernel.asm	/^f010746c:	89 c1                	mov    %eax,%ecx$/;"	l
f010746e	obj/kern/kernel.asm	/^f010746e:	d3 ef                	shr    %cl,%edi$/;"	d
f0107470	obj/kern/kernel.asm	/^f0107470:	09 d7                	or     %edx,%edi$/;"	l
f0107472	obj/kern/kernel.asm	/^f0107472:	89 f2                	mov    %esi,%edx$/;"	l
f0107474	obj/kern/kernel.asm	/^f0107474:	89 f8                	mov    %edi,%eax$/;"	l
f0107476	obj/kern/kernel.asm	/^f0107476:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f010747a	obj/kern/kernel.asm	/^f010747a:	89 d6                	mov    %edx,%esi$/;"	l
f010747c	obj/kern/kernel.asm	/^f010747c:	89 c7                	mov    %eax,%edi$/;"	l
f010747e	obj/kern/kernel.asm	/^f010747e:	f7 24 24             	mull   (%esp)$/;"	l
f0107481	obj/kern/kernel.asm	/^f0107481:	39 d6                	cmp    %edx,%esi$/;"	l
f0107483	obj/kern/kernel.asm	/^f0107483:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107486	obj/kern/kernel.asm	/^f0107486:	72 30                	jb     f01074b8 <__udivdi3+0x118>$/;"	l
f0107488	obj/kern/kernel.asm	/^f0107488:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f010748c	obj/kern/kernel.asm	/^f010748c:	89 e9                	mov    %ebp,%ecx$/;"	l
f010748e	obj/kern/kernel.asm	/^f010748e:	d3 e2                	shl    %cl,%edx$/;"	d
f0107490	obj/kern/kernel.asm	/^f0107490:	39 c2                	cmp    %eax,%edx$/;"	l
f0107492	obj/kern/kernel.asm	/^f0107492:	73 05                	jae    f0107499 <__udivdi3+0xf9>$/;"	l
f0107494	obj/kern/kernel.asm	/^f0107494:	3b 34 24             	cmp    (%esp),%esi$/;"	l
f0107497	obj/kern/kernel.asm	/^f0107497:	74 1f                	je     f01074b8 <__udivdi3+0x118>$/;"	l
f0107499	obj/kern/kernel.asm	/^f0107499:	89 f8                	mov    %edi,%eax$/;"	l
f010749b	obj/kern/kernel.asm	/^f010749b:	31 d2                	xor    %edx,%edx$/;"	l
f010749d	obj/kern/kernel.asm	/^f010749d:	e9 7a ff ff ff       	jmp    f010741c <__udivdi3+0x7c>$/;"	l
f01074a2	obj/kern/kernel.asm	/^f01074a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01074a8	obj/kern/kernel.asm	/^f01074a8:	31 d2                	xor    %edx,%edx$/;"	l
f01074aa	obj/kern/kernel.asm	/^f01074aa:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01074af	obj/kern/kernel.asm	/^f01074af:	e9 68 ff ff ff       	jmp    f010741c <__udivdi3+0x7c>$/;"	l
f01074b4	obj/kern/kernel.asm	/^f01074b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01074b8	obj/kern/kernel.asm	/^f01074b8:	8d 47 ff             	lea    -0x1(%edi),%eax$/;"	l
f01074bb	obj/kern/kernel.asm	/^f01074bb:	31 d2                	xor    %edx,%edx$/;"	l
f01074bd	obj/kern/kernel.asm	/^f01074bd:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01074c0	obj/kern/kernel.asm	/^f01074c0:	5e                   	pop    %esi$/;"	l
f01074c1	obj/kern/kernel.asm	/^f01074c1:	5f                   	pop    %edi$/;"	l
f01074c2	obj/kern/kernel.asm	/^f01074c2:	5d                   	pop    %ebp$/;"	l
f01074c3	obj/kern/kernel.asm	/^f01074c3:	c3                   	ret    $/;"	l
f01074c4	obj/kern/kernel.asm	/^f01074c4:	66 90                	xchg   %ax,%ax$/;"	l
f01074c6	obj/kern/kernel.asm	/^f01074c6:	66 90                	xchg   %ax,%ax$/;"	l
f01074c8	obj/kern/kernel.asm	/^f01074c8:	66 90                	xchg   %ax,%ax$/;"	l
f01074ca	obj/kern/kernel.asm	/^f01074ca:	66 90                	xchg   %ax,%ax$/;"	l
f01074cc	obj/kern/kernel.asm	/^f01074cc:	66 90                	xchg   %ax,%ax$/;"	l
f01074ce	obj/kern/kernel.asm	/^f01074ce:	66 90                	xchg   %ax,%ax$/;"	l
f01074d0	obj/kern/kernel.asm	/^f01074d0 <__umoddi3>:$/;"	l
f01074d0	obj/kern/kernel.asm	/^f01074d0:	55                   	push   %ebp$/;"	l
f01074d1	obj/kern/kernel.asm	/^f01074d1:	57                   	push   %edi$/;"	l
f01074d2	obj/kern/kernel.asm	/^f01074d2:	56                   	push   %esi$/;"	l
f01074d3	obj/kern/kernel.asm	/^f01074d3:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01074d6	obj/kern/kernel.asm	/^f01074d6:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f01074da	obj/kern/kernel.asm	/^f01074da:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f01074de	obj/kern/kernel.asm	/^f01074de:	8b 74 24 2c          	mov    0x2c(%esp),%esi$/;"	l
f01074e2	obj/kern/kernel.asm	/^f01074e2:	89 c7                	mov    %eax,%edi$/;"	l
f01074e4	obj/kern/kernel.asm	/^f01074e4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01074e8	obj/kern/kernel.asm	/^f01074e8:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f01074ec	obj/kern/kernel.asm	/^f01074ec:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f01074f0	obj/kern/kernel.asm	/^f01074f0:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01074f3	obj/kern/kernel.asm	/^f01074f3:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01074f7	obj/kern/kernel.asm	/^f01074f7:	85 c0                	test   %eax,%eax$/;"	l
f01074f9	obj/kern/kernel.asm	/^f01074f9:	89 c2                	mov    %eax,%edx$/;"	l
f01074fb	obj/kern/kernel.asm	/^f01074fb:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01074ff	obj/kern/kernel.asm	/^f01074ff:	75 17                	jne    f0107518 <__umoddi3+0x48>$/;"	l
f0107501	obj/kern/kernel.asm	/^f0107501:	39 fe                	cmp    %edi,%esi$/;"	l
f0107503	obj/kern/kernel.asm	/^f0107503:	76 4b                	jbe    f0107550 <__umoddi3+0x80>$/;"	l
f0107505	obj/kern/kernel.asm	/^f0107505:	89 c8                	mov    %ecx,%eax$/;"	l
f0107507	obj/kern/kernel.asm	/^f0107507:	89 fa                	mov    %edi,%edx$/;"	l
f0107509	obj/kern/kernel.asm	/^f0107509:	f7 f6                	div    %esi$/;"	l
f010750b	obj/kern/kernel.asm	/^f010750b:	89 d0                	mov    %edx,%eax$/;"	l
f010750d	obj/kern/kernel.asm	/^f010750d:	31 d2                	xor    %edx,%edx$/;"	l
f010750f	obj/kern/kernel.asm	/^f010750f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107512	obj/kern/kernel.asm	/^f0107512:	5e                   	pop    %esi$/;"	l
f0107513	obj/kern/kernel.asm	/^f0107513:	5f                   	pop    %edi$/;"	l
f0107514	obj/kern/kernel.asm	/^f0107514:	5d                   	pop    %ebp$/;"	l
f0107515	obj/kern/kernel.asm	/^f0107515:	c3                   	ret    $/;"	l
f0107516	obj/kern/kernel.asm	/^f0107516:	66 90                	xchg   %ax,%ax$/;"	l
f0107518	obj/kern/kernel.asm	/^f0107518:	39 f8                	cmp    %edi,%eax$/;"	l
f010751a	obj/kern/kernel.asm	/^f010751a:	77 54                	ja     f0107570 <__umoddi3+0xa0>$/;"	l
f010751c	obj/kern/kernel.asm	/^f010751c:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f010751f	obj/kern/kernel.asm	/^f010751f:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0107522	obj/kern/kernel.asm	/^f0107522:	75 5c                	jne    f0107580 <__umoddi3+0xb0>$/;"	l
f0107524	obj/kern/kernel.asm	/^f0107524:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f0107528	obj/kern/kernel.asm	/^f0107528:	39 3c 24             	cmp    %edi,(%esp)$/;"	l
f010752b	obj/kern/kernel.asm	/^f010752b:	0f 87 e7 00 00 00    	ja     f0107618 <__umoddi3+0x148>$/;"	l
f0107531	obj/kern/kernel.asm	/^f0107531:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0107535	obj/kern/kernel.asm	/^f0107535:	29 f1                	sub    %esi,%ecx$/;"	l
f0107537	obj/kern/kernel.asm	/^f0107537:	19 c7                	sbb    %eax,%edi$/;"	l
f0107539	obj/kern/kernel.asm	/^f0107539:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010753d	obj/kern/kernel.asm	/^f010753d:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0107541	obj/kern/kernel.asm	/^f0107541:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0107545	obj/kern/kernel.asm	/^f0107545:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0107549	obj/kern/kernel.asm	/^f0107549:	83 c4 14             	add    $0x14,%esp$/;"	l
f010754c	obj/kern/kernel.asm	/^f010754c:	5e                   	pop    %esi$/;"	l
f010754d	obj/kern/kernel.asm	/^f010754d:	5f                   	pop    %edi$/;"	l
f010754e	obj/kern/kernel.asm	/^f010754e:	5d                   	pop    %ebp$/;"	l
f010754f	obj/kern/kernel.asm	/^f010754f:	c3                   	ret    $/;"	l
f0107550	obj/kern/kernel.asm	/^f0107550:	85 f6                	test   %esi,%esi$/;"	l
f0107552	obj/kern/kernel.asm	/^f0107552:	89 f5                	mov    %esi,%ebp$/;"	l
f0107554	obj/kern/kernel.asm	/^f0107554:	75 0b                	jne    f0107561 <__umoddi3+0x91>$/;"	l
f0107556	obj/kern/kernel.asm	/^f0107556:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010755b	obj/kern/kernel.asm	/^f010755b:	31 d2                	xor    %edx,%edx$/;"	l
f010755d	obj/kern/kernel.asm	/^f010755d:	f7 f6                	div    %esi$/;"	l
f010755f	obj/kern/kernel.asm	/^f010755f:	89 c5                	mov    %eax,%ebp$/;"	l
f0107561	obj/kern/kernel.asm	/^f0107561:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0107565	obj/kern/kernel.asm	/^f0107565:	31 d2                	xor    %edx,%edx$/;"	l
f0107567	obj/kern/kernel.asm	/^f0107567:	f7 f5                	div    %ebp$/;"	l
f0107569	obj/kern/kernel.asm	/^f0107569:	89 c8                	mov    %ecx,%eax$/;"	l
f010756b	obj/kern/kernel.asm	/^f010756b:	f7 f5                	div    %ebp$/;"	l
f010756d	obj/kern/kernel.asm	/^f010756d:	eb 9c                	jmp    f010750b <__umoddi3+0x3b>$/;"	l
f010756f	obj/kern/kernel.asm	/^f010756f:	90                   	nop$/;"	l
f0107570	obj/kern/kernel.asm	/^f0107570:	89 c8                	mov    %ecx,%eax$/;"	l
f0107572	obj/kern/kernel.asm	/^f0107572:	89 fa                	mov    %edi,%edx$/;"	l
f0107574	obj/kern/kernel.asm	/^f0107574:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107577	obj/kern/kernel.asm	/^f0107577:	5e                   	pop    %esi$/;"	l
f0107578	obj/kern/kernel.asm	/^f0107578:	5f                   	pop    %edi$/;"	l
f0107579	obj/kern/kernel.asm	/^f0107579:	5d                   	pop    %ebp$/;"	l
f010757a	obj/kern/kernel.asm	/^f010757a:	c3                   	ret    $/;"	l
f010757b	obj/kern/kernel.asm	/^f010757b:	90                   	nop$/;"	l
f010757c	obj/kern/kernel.asm	/^f010757c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107580	obj/kern/kernel.asm	/^f0107580:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0107583	obj/kern/kernel.asm	/^f0107583:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
f0107588	obj/kern/kernel.asm	/^f0107588:	89 e9                	mov    %ebp,%ecx$/;"	l
f010758a	obj/kern/kernel.asm	/^f010758a:	29 ee                	sub    %ebp,%esi$/;"	l
f010758c	obj/kern/kernel.asm	/^f010758c:	d3 e2                	shl    %cl,%edx$/;"	d
f010758e	obj/kern/kernel.asm	/^f010758e:	89 f1                	mov    %esi,%ecx$/;"	l
f0107590	obj/kern/kernel.asm	/^f0107590:	d3 e8                	shr    %cl,%eax$/;"	d
f0107592	obj/kern/kernel.asm	/^f0107592:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107594	obj/kern/kernel.asm	/^f0107594:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107598	obj/kern/kernel.asm	/^f0107598:	8b 04 24             	mov    (%esp),%eax$/;"	l
f010759b	obj/kern/kernel.asm	/^f010759b:	09 54 24 04          	or     %edx,0x4(%esp)$/;"	l
f010759f	obj/kern/kernel.asm	/^f010759f:	89 fa                	mov    %edi,%edx$/;"	l
f01075a1	obj/kern/kernel.asm	/^f01075a1:	d3 e0                	shl    %cl,%eax$/;"	d
f01075a3	obj/kern/kernel.asm	/^f01075a3:	89 f1                	mov    %esi,%ecx$/;"	l
f01075a5	obj/kern/kernel.asm	/^f01075a5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01075a9	obj/kern/kernel.asm	/^f01075a9:	8b 44 24 10          	mov    0x10(%esp),%eax$/;"	l
f01075ad	obj/kern/kernel.asm	/^f01075ad:	d3 ea                	shr    %cl,%edx$/;"	d
f01075af	obj/kern/kernel.asm	/^f01075af:	89 e9                	mov    %ebp,%ecx$/;"	l
f01075b1	obj/kern/kernel.asm	/^f01075b1:	d3 e7                	shl    %cl,%edi$/;"	d
f01075b3	obj/kern/kernel.asm	/^f01075b3:	89 f1                	mov    %esi,%ecx$/;"	l
f01075b5	obj/kern/kernel.asm	/^f01075b5:	d3 e8                	shr    %cl,%eax$/;"	d
f01075b7	obj/kern/kernel.asm	/^f01075b7:	89 e9                	mov    %ebp,%ecx$/;"	l
f01075b9	obj/kern/kernel.asm	/^f01075b9:	09 f8                	or     %edi,%eax$/;"	l
f01075bb	obj/kern/kernel.asm	/^f01075bb:	8b 7c 24 10          	mov    0x10(%esp),%edi$/;"	l
f01075bf	obj/kern/kernel.asm	/^f01075bf:	f7 74 24 04          	divl   0x4(%esp)$/;"	l
f01075c3	obj/kern/kernel.asm	/^f01075c3:	d3 e7                	shl    %cl,%edi$/;"	d
f01075c5	obj/kern/kernel.asm	/^f01075c5:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01075c9	obj/kern/kernel.asm	/^f01075c9:	89 d7                	mov    %edx,%edi$/;"	l
f01075cb	obj/kern/kernel.asm	/^f01075cb:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f01075cf	obj/kern/kernel.asm	/^f01075cf:	39 d7                	cmp    %edx,%edi$/;"	l
f01075d1	obj/kern/kernel.asm	/^f01075d1:	89 c1                	mov    %eax,%ecx$/;"	l
f01075d3	obj/kern/kernel.asm	/^f01075d3:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01075d6	obj/kern/kernel.asm	/^f01075d6:	72 2c                	jb     f0107604 <__umoddi3+0x134>$/;"	l
f01075d8	obj/kern/kernel.asm	/^f01075d8:	39 44 24 0c          	cmp    %eax,0xc(%esp)$/;"	l
f01075dc	obj/kern/kernel.asm	/^f01075dc:	72 22                	jb     f0107600 <__umoddi3+0x130>$/;"	l
f01075de	obj/kern/kernel.asm	/^f01075de:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f01075e2	obj/kern/kernel.asm	/^f01075e2:	29 c8                	sub    %ecx,%eax$/;"	l
f01075e4	obj/kern/kernel.asm	/^f01075e4:	19 d7                	sbb    %edx,%edi$/;"	l
f01075e6	obj/kern/kernel.asm	/^f01075e6:	89 e9                	mov    %ebp,%ecx$/;"	l
f01075e8	obj/kern/kernel.asm	/^f01075e8:	89 fa                	mov    %edi,%edx$/;"	l
f01075ea	obj/kern/kernel.asm	/^f01075ea:	d3 e8                	shr    %cl,%eax$/;"	d
f01075ec	obj/kern/kernel.asm	/^f01075ec:	89 f1                	mov    %esi,%ecx$/;"	l
f01075ee	obj/kern/kernel.asm	/^f01075ee:	d3 e2                	shl    %cl,%edx$/;"	d
f01075f0	obj/kern/kernel.asm	/^f01075f0:	89 e9                	mov    %ebp,%ecx$/;"	l
f01075f2	obj/kern/kernel.asm	/^f01075f2:	d3 ef                	shr    %cl,%edi$/;"	d
f01075f4	obj/kern/kernel.asm	/^f01075f4:	09 d0                	or     %edx,%eax$/;"	l
f01075f6	obj/kern/kernel.asm	/^f01075f6:	89 fa                	mov    %edi,%edx$/;"	l
f01075f8	obj/kern/kernel.asm	/^f01075f8:	83 c4 14             	add    $0x14,%esp$/;"	l
f01075fb	obj/kern/kernel.asm	/^f01075fb:	5e                   	pop    %esi$/;"	l
f01075fc	obj/kern/kernel.asm	/^f01075fc:	5f                   	pop    %edi$/;"	l
f01075fd	obj/kern/kernel.asm	/^f01075fd:	5d                   	pop    %ebp$/;"	l
f01075fe	obj/kern/kernel.asm	/^f01075fe:	c3                   	ret    $/;"	l
f01075ff	obj/kern/kernel.asm	/^f01075ff:	90                   	nop$/;"	l
f0107600	obj/kern/kernel.asm	/^f0107600:	39 d7                	cmp    %edx,%edi$/;"	l
f0107602	obj/kern/kernel.asm	/^f0107602:	75 da                	jne    f01075de <__umoddi3+0x10e>$/;"	l
f0107604	obj/kern/kernel.asm	/^f0107604:	8b 14 24             	mov    (%esp),%edx$/;"	l
f0107607	obj/kern/kernel.asm	/^f0107607:	89 c1                	mov    %eax,%ecx$/;"	l
f0107609	obj/kern/kernel.asm	/^f0107609:	2b 4c 24 08          	sub    0x8(%esp),%ecx$/;"	l
f010760d	obj/kern/kernel.asm	/^f010760d:	1b 54 24 04          	sbb    0x4(%esp),%edx$/;"	l
f0107611	obj/kern/kernel.asm	/^f0107611:	eb cb                	jmp    f01075de <__umoddi3+0x10e>$/;"	l
f0107613	obj/kern/kernel.asm	/^f0107613:	90                   	nop$/;"	l
f0107614	obj/kern/kernel.asm	/^f0107614:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107618	obj/kern/kernel.asm	/^f0107618:	3b 44 24 0c          	cmp    0xc(%esp),%eax$/;"	l
f010761c	obj/kern/kernel.asm	/^f010761c:	0f 82 0f ff ff ff    	jb     f0107531 <__umoddi3+0x61>$/;"	l
f0107622	obj/kern/kernel.asm	/^f0107622:	e9 1a ff ff ff       	jmp    f0107541 <__umoddi3+0x71>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon5
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/ns.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/ns.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testinput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testinput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testoutput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testoutput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echosrv.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echosrv.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echotest.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echotest.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/httpd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/httpd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/httpd.asm	/^	fd = open(req->url, O_RDONLY);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sendpage.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sendpage.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fd	obj/user/testtime.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testtime.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon3	typeref:struct:Fd::__anon3::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN + DHCP_SNAME_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_SNAME_LEN;$/;"	d
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_size	obj/user/httpd.asm	/^	file_size = stat.st_size;$/;"	d
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first	obj/net/ns.asm	/^        first = 0;$/;"	d
first	obj/net/testinput.asm	/^		first = 0;$/;"	d
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flags	obj/net/ns.asm	/^  flags = TCPH_FLAGS(tcphdr) & TCP_FLAGS;$/;"	d
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
for_us	obj/net/ns.asm	/^    for_us = 0;$/;"	d
for_us	obj/net/ns.asm	/^    for_us = ip_addr_cmp(&dipaddr, &(netif->ip_addr));$/;"	d
fork	lib/fork.c	/^fork(void)$/;"	f
fork	lib/orig_fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
fraghdr	obj/net/ns.asm	/^    fraghdr = (struct ip_hdr*)(ipr->p->payload);$/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)new_p->payload; $/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)p->payload;$/;"	d
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
free_pbuf_and_return	obj/net/ns.asm	/^free_pbuf_and_return:$/;"	l
freepbuf	obj/net/ns.asm	/^freepbuf:$/;"	l
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/ns.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testinput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testoutput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echosrv.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echotest.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/httpd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sendpage.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testtime.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen_primes	grade-lab5	/^def gen_primes(n):$/;"	f
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
grow	obj/net/ns.asm	/^  grow = new_len - p->tot_len;$/;"	d
h	obj/net/ns.asm	/^      h   = tmptimeout->h;$/;"	d
h	obj/net/ns.asm	/^      h = tmptimeout->h;$/;"	d
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
hdr	obj/net/ns.asm	/^  hdr = p->payload;$/;"	d
hdrlen	obj/net/ns.asm	/^  hdrlen = TCPH_HDRLEN(tcphdr);$/;"	d
header	obj/net/ns.asm	/^    header = pbuf_alloc(PBUF_LINK, 0, PBUF_RAM);$/;"	d
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
hlen	obj/net/ns.asm	/^  hlen = IPH_HL(iphdr) * 4;$/;"	d
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/net/ns.asm	/^		i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = empty;$/;"	d
i	obj/net/ns.asm	/^    i = old_pending;$/;"	d
i	obj/net/ns.asm	/^    i = old_queue;$/;"	d
i	obj/net/ns.asm	/^    i = old_stable;$/;"	d
i	obj/net/ns.asm	/^    i = sys_sem_wait_timeout(select_cb.sem, msectimeout);$/;"	d
i	obj/net/ns.asm	/^  i = alloc_socket(conn);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY, NULL);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD, netif);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags, netif);$/;"	d
i	obj/net/testinput.asm	/^		i = 0;$/;"	d
i	obj/net/testinput.asm	/^    i = 0;$/;"	d
i	obj/net/testoutput.asm	/^		i = 0;$/;"	d
i	obj/user/echosrv.asm	/^    i = 0;$/;"	d
i	obj/user/echotest.asm	/^    i = 0;$/;"	d
i	obj/user/httpd.asm	/^    i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
idle	obj/kern/kernel.asm	/^			idle = &envs[env_id];$/;"	d
idle	obj/kern/kernel.asm	/^		idle = curenv;$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idur	obj/net/ns.asm	/^  idur = q->payload;$/;"	d
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
iecho	obj/net/ns.asm	/^    iecho = p->payload;$/;"	d
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inactive	obj/net/ns.asm	/^      inactive = pcb;$/;"	d
inactive	obj/net/ns.asm	/^  inactive = NULL;$/;"	d
inactivity	obj/net/ns.asm	/^      inactivity = tcp_ticks - pcb->tmr;$/;"	d
inactivity	obj/net/ns.asm	/^  inactivity = 0;$/;"	d
inb	inc/x86.h	/^inb(int port)$/;"	f
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = -header_size_increment;$/;"	d
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = header_size_increment;$/;"	d
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
init_transmit	kern/temp_e1000.c	/^void init_transmit()$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
input_envid	obj/net/ns.asm	/^	input_envid = fork();$/;"	d
input_envid	obj/net/testinput.asm	/^	input_envid = fork();$/;"	d
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int attach_E1000(struct pci_func *func)$/;"	l
int	obj/kern/kernel.asm	/^int receive(void *va)$/;"	l
int	obj/kern/kernel.asm	/^int transmit(void *va, int len)$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/net/ns.asm	/^int$/;"	l
int	obj/net/testinput.asm	/^int$/;"	l
int	obj/net/testoutput.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/echosrv.asm	/^int$/;"	l
int	obj/user/echotest.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/httpd.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/testtime.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/net/ns.asm	/^int32_t$/;"	l
int32_t	obj/net/testinput.asm	/^int32_t$/;"	l
int32_t	obj/net/testoutput.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/echosrv.asm	/^int32_t$/;"	l
int32_t	obj/user/echotest.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/httpd.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int32_t	obj/user/testtime.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipaddr	obj/net/ns.asm	/^        ipaddr = &(netif->gw);$/;"	d
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
ipcb	obj/net/ns.asm	/^        ipcb = ipcb->next;$/;"	d
ipcb	obj/net/ns.asm	/^        ipcb = udp_pcbs;$/;"	d
ipcb	obj/net/ns.asm	/^    ipcb = udp_pcbs;$/;"	d
iphdr	obj/net/ns.asm	/^      iphdr = r->payload;$/;"	d
iphdr	obj/net/ns.asm	/^    iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = original_iphdr;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = rambuf->payload;$/;"	d
iphdr_hlen	obj/net/ns.asm	/^  iphdr_hlen = IPH_HL(iphdr);$/;"	d
iphdr_len	obj/net/ns.asm	/^  iphdr_len = ntohs(IPH_LEN(iphdr));$/;"	d
ipr	obj/net/ns.asm	/^      ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr	obj/net/ns.asm	/^  ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
iprh	obj/net/ns.asm	/^          iprh = (struct ip_reass_helper*)q->payload;$/;"	d
iprh	obj/net/ns.asm	/^      iprh = (struct ip_reass_helper*)r->payload;$/;"	d
iprh	obj/net/ns.asm	/^    iprh = (struct ip_reass_helper *)p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper *)ipr->p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper*)new_p->payload;$/;"	d
iprh_prev	obj/net/ns.asm	/^          iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^        iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^    iprh_prev = iprh_tmp;$/;"	d
iprh_tmp	obj/net/ns.asm	/^    iprh_tmp = (struct ip_reass_helper*)q->payload;$/;"	d
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
iss	obj/net/ns.asm	/^    iss = tcp_next_iss();$/;"	d
iss	obj/net/ns.asm	/^  iss = tcp_next_iss();$/;"	d
istrap	obj/kern/kernel.asm	/^	istrap: 0 for intterupt gate$/;"	l
jif	obj/net/ns.asm	/^    jif = mem_malloc(sizeof(struct jif));$/;"	d
jif	obj/net/ns.asm	/^    jif = netif->state;$/;"	d
k	obj/net/ns.asm	/^  k = ETHARP_HWADDR_LEN;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	f
kstacktop_i	obj/kern/kernel.asm	/^		kstacktop_i = KSTACKTOP - (i * (KSTKSIZE + KSTKGAP));$/;"	d
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last	obj/net/ns.asm	/^    last = (left <= mtu - IP_HLEN);$/;"	d
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lba_length	inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc
lba_start	inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
left	obj/net/ns.asm	/^  left = len;$/;"	d
left	obj/net/ns.asm	/^  left = p->tot_len - IP_HLEN;$/;"	d
len	obj/net/ns.asm	/^      len = 0;$/;"	d
len	obj/net/ns.asm	/^      len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^      len = p_from->len - offset_from;$/;"	d
len	obj/net/ns.asm	/^      len = p_to->len - offset_to;$/;"	d
len	obj/net/ns.asm	/^    len = 0;$/;"	d
len	obj/net/ns.asm	/^    len = 0xffff;$/;"	d
len	obj/net/ns.asm	/^    len = conn->write_msg->msg.w.len - conn->write_offset;$/;"	d
len	obj/net/ns.asm	/^    len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);$/;"	d
len	obj/net/ns.asm	/^  len = 0;$/;"	d
len	obj/net/ns.asm	/^  len = ntohs(IPH_LEN(fraghdr)) - IPH_HL(fraghdr) * 4;$/;"	d
lenerr	obj/net/ns.asm	/^lenerr:$/;"	l
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
length	kern/working_e1000.h	/^    uint16_t length;$/;"	m	struct:rx_desc
length	kern/working_e1000.h	/^    uint16_t length;$/;"	m	struct:tx_desc
level	obj/net/ns.asm	/^  level = data->level;$/;"	d
lexceptset	obj/net/ns.asm	/^      lexceptset = *exceptset;$/;"	d
lexceptset	obj/net/ns.asm	/^    lexceptset = *exceptset;$/;"	d
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/ns.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testinput.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testoutput.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echosrv.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echotest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/httpd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testtime.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfree	obj/net/ns.asm	/^            lfree = (struct mem *)&ram[lfree->next];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = (struct mem *)&ram[ptr2];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem2;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = pmem;$/;"	d
lfree	obj/net/ns.asm	/^    lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^  lfree = (struct mem *)ram;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	user/num.c	/^int line = 0;$/;"	v
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
local_match	obj/net/ns.asm	/^        local_match = 1;$/;"	d
local_match	obj/net/ns.asm	/^    local_match = 0;$/;"	d
local_mem_free_count	obj/net/ns.asm	/^        local_mem_free_count = mem_free_count;$/;"	d
local_port	obj/net/ns.asm	/^    local_port = pcb->local_port;$/;"	d
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
lock_tcpip_core	obj/net/ns.asm	/^  lock_tcpip_core = sys_sem_new(1);$/;"	d
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/net/ns.asm	/^long$/;"	l
long	obj/net/testinput.asm	/^long$/;"	l
long	obj/net/testoutput.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/echosrv.asm	/^long$/;"	l
long	obj/user/echotest.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/httpd.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/testtime.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpcb	obj/net/ns.asm	/^  lpcb = memp_malloc(MEMP_TCP_PCB_LISTEN);$/;"	d
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
lreadset	obj/net/ns.asm	/^      lreadset = *readset;$/;"	d
lreadset	obj/net/ns.asm	/^    lreadset = *readset;$/;"	d
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
lwriteset	obj/net/ns.asm	/^      lwriteset = *writeset;$/;"	d
lwriteset	obj/net/ns.asm	/^    lwriteset = *writeset;$/;"	d
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/ns.asm	/^		m = n - tot;$/;"	d
m	obj/net/ns.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^        m = -m;$/;"	d
m	obj/net/ns.asm	/^      m = (s16_t)(tcp_ticks - pcb->rttest);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sa >> 3);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sv >> 2);$/;"	d
m	obj/net/testinput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testinput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testinput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/testoutput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testoutput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testoutput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^		m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^		m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^		m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^		m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echosrv.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echosrv.asm	/^		m = n - tot;$/;"	d
m	obj/user/echosrv.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echotest.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echotest.asm	/^		m = n - tot;$/;"	d
m	obj/user/echotest.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^		m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^		m = n - tot;$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/httpd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/httpd.asm	/^		m = n - tot;$/;"	d
m	obj/user/httpd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sendpage.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sendpage.asm	/^		m = n - tot;$/;"	d
m	obj/user/sendpage.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^		m = n - tot;$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^		m = n - tot;$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^		m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^		m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testtime.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testtime.asm	/^		m = n - tot;$/;"	d
m	obj/user/testtime.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^		m = n - tot;$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
max_tid	obj/net/ns.asm	/^    max_tid = 0;$/;"	d
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mbox	obj/net/ns.asm	/^  mbox = sys_mbox_new(TCPIP_MBOX_SIZE);$/;"	d
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem	obj/net/ns.asm	/^      mem = (struct mem *)&ram[ptr];$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)((u8_t *)rmem - SIZEOF_STRUCT_MEM);$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)ram;$/;"	d
mem2	obj/net/ns.asm	/^          mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^    mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^  mem2 = (struct mem *)&ram[mem->next];$/;"	d
mem_free_count	obj/net/ns.asm	/^      mem_free_count = 0;$/;"	d
mem_free_count	obj/net/ns.asm	/^  mem_free_count = 1;$/;"	d
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
mem_sem	obj/net/ns.asm	/^  mem_sem = sys_sem_new(1);$/;"	d
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memerr	obj/net/ns.asm	/^memerr:$/;"	l
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memp	obj/net/ns.asm	/^      memp = (struct memp *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]);$/;"	d
memp	obj/net/ns.asm	/^  memp = LWIP_MEM_ALIGN(memp_memory);$/;"	d
memp	obj/net/ns.asm	/^  memp = memp_tab[type];$/;"	d
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mprio	obj/net/ns.asm	/^      mprio = pcb->prio;$/;"	d
mprio	obj/net/ns.asm	/^  mprio = TCP_PRIO_MAX;$/;"	d
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
mptr	obj/net/ns.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/net/ns.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/net/ns.asm	/^		mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = mbegin;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 10*1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 500;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 2000 : 20 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? (dhcp->tries + 1) * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? dhcp->tries * 1000 : 4 * 1000;$/;"	d
msectimeout	obj/net/ns.asm	/^        msectimeout = 1;$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout =  ((timeout->tv_sec * 1000) + ((timeout->tv_usec + 500)\/1000));$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout = 0;$/;"	d
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_API);$/;"	d
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_INPKT);$/;"	d
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon10	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon10	file:
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg_type	obj/net/ns.asm	/^  msg_type = dhcp_get_option_byte(options_ptr + 2);$/;"	d
mss	obj/net/ns.asm	/^        mss = (opts[c + 2] << 8) | opts[c + 3];$/;"	d
mss_s	obj/net/ns.asm	/^    mss_s = outif->mtu - IP_HLEN - TCP_HLEN;$/;"	d
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/kern/kernel.asm	/^	n = (size_t)ROUNDDOWN((char*)(0xffffffff - KERNBASE), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV * sizeof(struct Env), PGSIZE); $/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages * sizeof(struct PageInfo), PGSIZE); $/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/net/ns.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/ns.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/net/ns.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testinput.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/testinput.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testoutput.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/badsegment.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/breakpoint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/divzero.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/dumbfork.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echosrv.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echosrv.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/echotest.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echotest.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/evilhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/fairness.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultalloc.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultallocbad.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultdie.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultnostack.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultread.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultregs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwrite.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/forktree.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/hello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/httpd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/httpd.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/user/httpd.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/idle.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpong.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpongs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primes.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sendpage.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/softint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spin.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/stresssched.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testbss.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testtime.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/yield.asm	/^		n = thisenv->env_runs;$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
netbuf	obj/net/ns.asm	/^netbuf *netbuf_new(void)$/;"	l
netif	obj/net/ns.asm	/^        netif = inp;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif_list;$/;"	d
netif	obj/net/ns.asm	/^    netif = inp;$/;"	d
netif	obj/net/ns.asm	/^    netif = ip_route(&(pcb->remote_ip));$/;"	d
netif	obj/net/ns.asm	/^    netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route((ip_addr_ismulticast(dst_ip))?(&(pcb->multicast_ip)):(dst_ip));$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route(dst_ip);$/;"	d
netif_default	obj/net/ns.asm	/^  netif_default = netif;$/;"	d
netif_list	obj/net/ns.asm	/^    netif_list = netif->next;$/;"	d
netif_list	obj/net/ns.asm	/^  netif_list = netif;$/;"	d
new_entry	obj/net/ns.asm	/^        new_entry = memp_malloc(MEMP_ARP_QUEUE);$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
new_tot_len	obj/net/ns.asm	/^        new_tot_len = (u16_t)(inseg.p->tot_len - off);$/;"	d
newconn	obj/net/ns.asm	/^    newconn = NULL;$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_accept(sock->conn);$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_alloc(conn->type, conn->callback);$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/ns.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testinput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testoutput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echosrv.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echotest.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/httpd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sendpage.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testtime.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newsize	obj/net/ns.asm	/^    newsize = MIN_SIZE_ALIGNED;$/;"	d
newsize	obj/net/ns.asm	/^  newsize = LWIP_MEM_ALIGN_SIZE(newsize);$/;"	d
newsock	obj/net/ns.asm	/^  newsock = alloc_socket(newconn);$/;"	d
next	obj/net/ns.asm	/^                    next = cseg->next;$/;"	d
next	obj/net/ns.asm	/^        next = pcb->unacked;$/;"	d
next	obj/net/ns.asm	/^      next = pcb->unsent;$/;"	d
next	obj/net/ns.asm	/^    next = mem2->next;$/;"	d
next	obj/net/ns.asm	/^    next = seg->next;$/;"	d
next_env	obj/kern/kernel.asm	/^			next_env = 0;$/;"	d
next_env	obj/kern/kernel.asm	/^			next_env = curenv->env_id;$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^	nextfree = ROUNDUP((nextfree + n), PGSIZE);$/;"	d
nfb	obj/net/ns.asm	/^  nfb = (mtu - IP_HLEN) \/ 8;$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nmem	obj/net/ns.asm	/^  nmem = (struct mem *)&ram[mem->next];$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/ns.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/testinput.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/testoutput.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/badsegment.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/breakpoint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/divzero.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/dumbfork.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echosrv.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echotest.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/evilhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/fairness.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultalloc.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultallocbad.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultbadhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultdie.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultevilhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultnostack.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultread.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultreadkernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultregs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwrite.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwritekernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/forktree.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/hello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/httpd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/idle.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpongs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primes.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sendpage.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/softint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spin.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/stresssched.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testbss.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testtime.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/yield.asm	/^		nn = thisenv->env_runs;$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
now	obj/net/ns.asm	/^	now = sys_time_msec();$/;"	d
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
npcb	obj/net/ns.asm	/^    npcb = tcp_alloc(pcb->prio);$/;"	d
nready	obj/net/ns.asm	/^    nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nready	obj/net/ns.asm	/^  nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nsenv	obj/fs/fs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/ns.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testinput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testoutput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/badsegment.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/breakpoint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/cat.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/divzero.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/dumbfork.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echo.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echosrv.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echotest.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/evilhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/fairness.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultalloc.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultallocbad.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultbadhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultdie.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultevilhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultnostack.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultread.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultreadkernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultregs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwrite.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwritekernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/forktree.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/hello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/httpd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/icode.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/idle.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/init.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/ls.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/lsfd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/num.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpong.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpongs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primes.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primespipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/sendpage.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/sh.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/softint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spawnhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spin.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/stresssched.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testbss.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfdsharing.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfile.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testkbd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpiperace.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpiperace2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpteshare.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testshell.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testtime.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/yield.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsock	obj/net/ns.asm	/^  nsock = &sockets[newsock];$/;"	d
nullreturn	obj/net/ns.asm	/^nullreturn:$/;"	l
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/ns.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/ns.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^  num = name[2] - '0';$/;"	d
num	obj/net/testinput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testinput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testinput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testinput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testoutput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testoutput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echosrv.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echosrv.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echotest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echotest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/httpd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/httpd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testtime.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testtime.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/net/ns.asm	/^		number:$/;"	l
number	obj/net/testinput.asm	/^		number:$/;"	l
number	obj/net/testoutput.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/cat.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echo.asm	/^		number:$/;"	l
number	obj/user/echosrv.asm	/^		number:$/;"	l
number	obj/user/echotest.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/httpd.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/ls.asm	/^		number:$/;"	l
number	obj/user/lsfd.asm	/^		number:$/;"	l
number	obj/user/num.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/primespipe.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/sh.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spawnhello.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testkbd.asm	/^		number:$/;"	l
number	obj/user/testpipe.asm	/^		number:$/;"	l
number	obj/user/testpiperace.asm	/^		number:$/;"	l
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
number	obj/user/testpteshare.asm	/^		number:$/;"	l
number	obj/user/testshell.asm	/^		number:$/;"	l
number	obj/user/testtime.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/ns.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testinput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testoutput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echosrv.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echotest.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/httpd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sendpage.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testtime.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
nwrap	obj/net/ns.asm	/^	nwrap = 0;$/;"	d
nwrap	obj/user/httpd.asm	/^	nwrap = 0;$/;"	d
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
octetptr	obj/net/ns.asm	/^  octetptr = (u8_t*)dataptr;$/;"	d
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off	obj/kern/kernel.asm	/^	off: trap_handler array specified in trapentry.S$/;"	l
off	obj/net/ns.asm	/^      off = pcb->rcv_nxt - seqno;$/;"	d
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset	obj/net/ns.asm	/^      offset = 0;$/;"	d
offset	obj/net/ns.asm	/^  offset = (ntohs(IPH_OFFSET(fraghdr)) & IP_OFFMASK) * 8;$/;"	d
offset	obj/net/ns.asm	/^  offset = 0;$/;"	d
offset_from	obj/net/ns.asm	/^      offset_from = 0;$/;"	d
offset_to	obj/net/ns.asm	/^      offset_to = 0;$/;"	d
offsetof	inc/types.h	71;"	d
ofo	obj/net/ns.asm	/^  ofo = tmp & IP_OFFMASK;$/;"	d
old_cwnd	obj/net/ns.asm	/^        old_cwnd = pcb->cwnd;$/;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
old_pending	obj/net/ns.asm	/^          old_pending = i;$/;"	d
old_queue	obj/net/ns.asm	/^          old_queue = i;$/;"	d
old_stable	obj/net/ns.asm	/^        old_stable = i;$/;"	d
oldest	obj/net/ns.asm	/^          oldest = r;$/;"	d
oldest	obj/net/ns.asm	/^    oldest = NULL;$/;"	d
omf	obj/net/ns.asm	/^  omf = tmp & IP_MF;$/;"	d
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
opencons	lib/console.c	/^opencons(void)$/;"	f
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
opt	obj/net/ns.asm	/^      opt = opts[c];$/;"	d
optdata	obj/net/ns.asm	/^    optdata = TCP_BUILD_MSS_OPTION();$/;"	d
optdata	obj/net/ns.asm	/^  optdata = TCP_BUILD_MSS_OPTION();$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_BROADCAST);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_DNS_SERVER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_LEASE_TIME);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_ROUTER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_SUBNET_MASK);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T1);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T2);$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->file;$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->sname;$/;"	d
options_ptr	obj/net/ns.asm	/^  options_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_MESSAGE_TYPE);$/;"	d
optname	obj/net/ns.asm	/^  optname = data->optname;$/;"	d
opts	obj/net/ns.asm	/^  opts = (u8_t *)tcphdr + TCP_HLEN;$/;"	d
optval	obj/net/ns.asm	/^  optval = data->optval;$/;"	d
original_iphdr	obj/net/ns.asm	/^  original_iphdr = p->payload;$/;"	d
other_datagrams	obj/net/ns.asm	/^    other_datagrams = 0;$/;"	d
out	obj/net/ns.asm	/^out:$/;"	l
out	obj/net/testinput.asm	/^			out = buf + snprintf(buf, end - buf,$/;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outif	obj/net/ns.asm	/^  outif = ip_route(addr);$/;"	d
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
output_envid	obj/net/ns.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/ns.asm	/^    output_envid = (envid_t *)netif->state;$/;"	d
output_envid	obj/net/testinput.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/testoutput.asm	/^	output_envid = fork();$/;"	d
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/ns.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testinput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testoutput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echosrv.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echotest.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/httpd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sendpage.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testtime.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
overload	obj/net/ns.asm	/^        overload = options[offset++];$/;"	d
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/net/ns.asm	/^				p = "(null)";$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = sys_time_msec();$/;"	d
p	obj/net/ns.asm	/^          p = NULL;$/;"	d
p	obj/net/ns.asm	/^          p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = NULL;$/;"	d
p	obj/net/ns.asm	/^        p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^        p = q;$/;"	d
p	obj/net/ns.asm	/^      p = NULL;$/;"	d
p	obj/net/ns.asm	/^      p = inseg.p;$/;"	d
p	obj/net/ns.asm	/^      p = memp_malloc(MEMP_PBUF_POOL);$/;"	d
p	obj/net/ns.asm	/^      p = q;$/;"	d
p	obj/net/ns.asm	/^      p = r;$/;"	d
p	obj/net/ns.asm	/^    p = (struct pbuf*)mem_malloc(LWIP_MEM_ALIGN_SIZE(SIZEOF_STRUCT_PBUF + offset) + LWIP_MEM_ALIGN_SIZE(length));$/;"	d
p	obj/net/ns.asm	/^    p = ip_reass(p);$/;"	d
p	obj/net/ns.asm	/^    p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^    p = iprh->next_pbuf;$/;"	d
p	obj/net/ns.asm	/^    p = memp_malloc(MEMP_PBUF);$/;"	d
p	obj/net/ns.asm	/^    p = p->next;$/;"	d
p	obj/net/ns.asm	/^    p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^    p = q->p;$/;"	d
p	obj/net/ns.asm	/^  p = NULL;$/;"	d
p	obj/net/ns.asm	/^  p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^  p = mem_malloc(count * size);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN + 1, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_LINK, sizeof(struct etharp_hdr), PBUF_RAM);$/;"	d
p	obj/net/testinput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^				p = "(null)";$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^				p = "(null)";$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^				p = "(null)";$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^				p = "(null)";$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_from	obj/net/ns.asm	/^      p_from = p_from->next;$/;"	d
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:
p_sock	obj/net/ns.asm	/^      p_sock = get_socket(i);$/;"	d
p_to	obj/net/ns.asm	/^      p_to = p_to->next;$/;"	d
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^		pa = page2pa(pp);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PTE_ADDR(*pte);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/net/ns.asm	/^			padc = '-';$/;"	d
padc	obj/net/ns.asm	/^			padc = '0';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '0';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '-';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '0';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '-';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '-';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '-';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *) boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
payload	obj/net/ns.asm	/^  payload = p->payload;$/;"	d
pbufs_freed_current	obj/net/ns.asm	/^      pbufs_freed_current = ip_reass_free_complete_datagram(oldest, prev);$/;"	d
pcb	obj/net/ns.asm	/^        pcb = next;$/;"	d
pcb	obj/net/ns.asm	/^        pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb2;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = uncon_pcb;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^    pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = conn->pcb.tcp;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_RAW_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_UDP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = raw_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_tw_pcbs;$/;"	d
pcb2	obj/net/ns.asm	/^      pcb2 = pcb->next;$/;"	d
pcb_remove	obj/net/ns.asm	/^    pcb_remove = 0;$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pcur	obj/net/ns.asm	/^    pcur = p;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/net/ns.asm	/^		perm = 0;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
pg	obj/fs/fs.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pg	obj/net/ns.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/net/testinput.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/net/testoutput.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/badsegment.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/breakpoint.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/buggyhello.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/buggyhello2.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/cat.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/divzero.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/dumbfork.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/echo.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/echosrv.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/echotest.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/evilhello.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/fairness.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultalloc.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultallocbad.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultbadhandler.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultdie.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultevilhandler.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultnostack.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultread.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultreadkernel.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultregs.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultwrite.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultwritekernel.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/forktree.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/hello.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/httpd.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/icode.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/idle.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/init.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/ls.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/lsfd.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/num.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/pingpong.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/pingpongs.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/primes.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/primespipe.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/sendpage.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/sh.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/softint.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/spawnhello.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/spin.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/stresssched.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/testbss.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/testfdsharing.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/testfile.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/testkbd.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/testpipe.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/testpiperace.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/testpiperace2.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/testpteshare.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/testshell.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/testtime.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/yield.asm	/^		pg = (void*)UTOP;$/;"	d
pg_table	obj/kern/kernel.asm	/^		pg_table = pgdir_walk(pg_dir, (void*)va_start, 0);$/;"	d
pg_table	obj/kern/kernel.asm	/^	pg_table = pgdir_walk(pg_dir, (void*)va, 0);$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	lib/orig_fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) ((uint8_t *) elfhdr + elfhdr->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
phy_addr	obj/kern/kernel.asm	/^		phy_addr = page2pa(pp);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f
pmem	obj/net/ns.asm	/^  pmem = (struct mem *)&ram[mem->prev];$/;"	d
poff	obj/net/ns.asm	/^    poff = newpbuflen;$/;"	d
port	obj/net/ns.asm	/^      port = netbuf_fromport(buf);$/;"	d
port	obj/net/ns.asm	/^    port = TCP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = UDP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = tcp_new_port();$/;"	d
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp	obj/kern/kernel.asm	/^		pp = page_alloc(0);	\/\/avoiding zeroing out of pages	$/;"	d
pp	obj/kern/kernel.asm	/^		pp = page_alloc(1);$/;"	d
pp	obj/kern/kernel.asm	/^		pp = page_lookup(curenv->env_pgdir, srcva, &pte);$/;"	d
pp	obj/kern/kernel.asm	/^	pp = pa2page(pa);$/;"	d
pp	obj/kern/kernel.asm	/^	pp = page_alloc(ALLOC_ZERO);$/;"	d
pp	obj/kern/kernel.asm	/^	pp = page_free_list;$/;"	d
pp	obj/kern/kernel.asm	/^	pp = page_lookup(pgdir, (void *)va, &pte_store);$/;"	d
pp	obj/kern/kernel.asm	/^	pp = page_lookup(src_env->env_pgdir, srcva, &pte);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/net/ns.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/ns.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/ns.asm	/^		precision = -1;$/;"	d
precision	obj/net/testinput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testinput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testinput.asm	/^		precision = -1;$/;"	d
precision	obj/net/testoutput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testoutput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testoutput.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^		precision = -1;$/;"	d
precision	obj/user/echosrv.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echosrv.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echosrv.asm	/^		precision = -1;$/;"	d
precision	obj/user/echotest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echotest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echotest.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/httpd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/httpd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/httpd.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^		precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^		precision = -1;$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^		precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^		precision = -1;$/;"	d
precision	obj/user/testtime.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testtime.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testtime.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
prev	obj/net/ns.asm	/^          prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^        prev = r;$/;"	d
prev	obj/net/ns.asm	/^      prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = r;$/;"	d
prev	obj/net/ns.asm	/^    prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^    prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;    $/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_regs	lib/orig_fork.c	/^static void print_regs(struct PushRegs *regs)$/;"	f	file:
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
print_utrapframe	lib/orig_fork.c	/^static void print_utrapframe(struct UTrapframe* utf)$/;"	f	file:
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/net/ns.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testinput.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testoutput.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echosrv.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echotest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/httpd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testtime.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
proto	obj/net/ns.asm	/^  proto = IPH_PROTO(iphdr);$/;"	d
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/kern/kernel.asm	/^		pte = (pte_t *) KADDR(PTE_ADDR(pde));$/;"	d
pte	obj/kern/kernel.asm	/^		pte = (pte_t *) KADDR(phy_addr);$/;"	d
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk(pgdir, (void *)va, 1);$/;"	d
pte	obj/kern/kernel.asm	/^	pte = pgdir_walk(pgdir, (void *)va, 0);$/;"	d
pte	obj/kern/kernel.asm	/^	pte = pgdir_walk(pgdir, (void *)va, 1);$/;"	d
pte	obj/net/ns.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/testinput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/testoutput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/badsegment.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echosrv.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echotest.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/httpd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sendpage.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testtime.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte_offset	obj/kern/kernel.asm	/^		pte_offset = pte + PTX(va);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
ptr	obj/net/ns.asm	/^         ptr = ((struct mem *)&ram[ptr])->next) {$/;"	d
ptr	obj/net/ns.asm	/^    ptr = (void *)((u8_t *)ptr + seglen);$/;"	d
ptr	obj/net/ns.asm	/^  ptr = (u8_t *)mem - ram;$/;"	d
ptr	obj/net/ns.asm	/^  ptr = arg;$/;"	d
ptr2	obj/net/ns.asm	/^          ptr2 = ptr + SIZEOF_STRUCT_MEM + size;$/;"	d
ptr2	obj/net/ns.asm	/^    ptr2 = ptr + SIZEOF_STRUCT_MEM + newsize;$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
q	obj/net/ns.asm	/^          q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^        q = NULL;$/;"	d
q	obj/net/ns.asm	/^        q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^      q = memp_malloc(MEMP_PBUF_POOL);$/;"	d
q	obj/net/ns.asm	/^      q = p->next;$/;"	d
q	obj/net/ns.asm	/^    q = NULL;$/;"	d
q	obj/net/ns.asm	/^    q = iprh_tmp->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^    q = mem_realloc(q, (u8_t *)q->payload - (u8_t *)q + rem_len);$/;"	d
q	obj/net/ns.asm	/^    q = p;$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, 0, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, UDP_HLEN, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = q->next;$/;"	d
q	obj/net/ns.asm	/^  q = p->next;$/;"	d
q	obj/net/ns.asm	/^  q = p;$/;"	d
q	obj/net/ns.asm	/^  q = pbuf_alloc(PBUF_IP, sizeof(struct icmp_dur_hdr) + IP_HLEN + ICMP_DEST_UNREACH_DATASIZE,$/;"	d
queue	obj/net/ns.asm	/^      queue = seg;$/;"	d
queuelen	obj/net/ns.asm	/^  queuelen = pcb->snd_queuelen;$/;"	d
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^		r = alloc_block();$/;"	d
r	obj/fs/fs.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/fs/fs.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/fs/fs.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/fs/fs.asm	/^	r = file_block_walk(f, filebno, &ppdiskbno, 1);$/;"	d
r	obj/fs/fs.asm	/^	r = file_read(o->o_file, ret->ret_buf, req->req_n, o->o_fd->fd_offset);$/;"	d
r	obj/fs/fs.asm	/^	r = file_set_size(o->o_file, o->o_file->f_size+req->req_n);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/fs/fs.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/fs/fs.asm	/^	r = sys_page_alloc(0, addr, perm);$/;"	d
r	obj/fs/fs.asm	/^	r = sys_page_map(0, addr, 0, addr, uvpt[PGNUM(addr)] & PTE_SYSCALL);$/;"	d
r	obj/fs/fs.asm	/^        r = file_write(o->o_file, req->req_buf, req->req_n, o->o_fd->fd_offset);$/;"	d
r	obj/kern/kernel.asm	/^			r = -E_NO_MEM;$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^		r = page_insert(dst_env->env_pgdir, pp, dst_env->env_ipc_dstva, perm);$/;"	d
r	obj/kern/kernel.asm	/^		r = page_insert(e->env_pgdir,(void*) pp, i, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/kern/kernel.asm	/^	r = env_alloc(&e, 0);$/;"	d
r	obj/kern/kernel.asm	/^	r = env_alloc(&new_env, curenv->env_id);$/;"	d
r	obj/kern/kernel.asm	/^	r = envid2env(dstenvid, &dst_env, 1);$/;"	d
r	obj/kern/kernel.asm	/^	r = envid2env(envid, &dst_env, 0);$/;"	d
r	obj/kern/kernel.asm	/^	r = envid2env(envid, &temp_env, 1);$/;"	d
r	obj/kern/kernel.asm	/^	r = envid2env(srcenvid, &src_env, 1);$/;"	d
r	obj/kern/kernel.asm	/^	r = page_insert(dst_env->env_pgdir, pp, dstva, perm);$/;"	d
r	obj/kern/kernel.asm	/^	r = page_insert(temp_env->env_pgdir, pp, va, perm);$/;"	d
r	obj/kern/kernel.asm	/^        r = envid2env(envid, &temp_env, 1);$/;"	d
r	obj/net/ns.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/ns.asm	/^			r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^		r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = ipc_recv((envid_t*)&sender, (void *)packet, &perm_store);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_accept(req->accept.req_s, &ret.ret_addr,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_bind(req->bind.req_s, &req->bind.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_close(req->close.req_s);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_connect(req->connect.req_s, &req->connect.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_listen(req->listen.req_s, req->listen.req_backlog);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_recv(req->recv.req_s, req->recvRet.ret_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_send(req->send.req_s, &req->send.req_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_shutdown(req->shutdown.req_s, req->shutdown.req_how);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_socket(req->socket.req_domain, req->socket.req_type,$/;"	d
r	obj/net/ns.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/net/ns.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/net/ns.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/net/ns.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/net/ns.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/net/ns.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/net/ns.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/net/ns.asm	/^		r = sys_receive(temp);$/;"	d
r	obj/net/ns.asm	/^		r = sys_transmit(nsipcbuf.pkt.jp_data, nsipcbuf.pkt.jp_len);$/;"	d
r	obj/net/ns.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/ns.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/ns.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/net/ns.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/net/ns.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/net/ns.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/net/ns.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/net/ns.asm	/^              r = r->next;$/;"	d
r	obj/net/ns.asm	/^            r = arp_table[i].q;$/;"	d
r	obj/net/ns.asm	/^      r = iprh->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^      r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);$/;"	d
r	obj/net/ns.asm	/^      r = q;$/;"	d
r	obj/net/ns.asm	/^      r = r->next;$/;"	d
r	obj/net/ns.asm	/^    r = ((struct ip_reass_helper*)ipr->p->payload)->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^    r = p;$/;"	d
r	obj/net/ns.asm	/^    r = q;$/;"	d
r	obj/net/ns.asm	/^    r = reassdatagrams;$/;"	d
r	obj/net/ns.asm	/^  r = reassdatagrams;$/;"	d
r	obj/net/testinput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testinput.asm	/^			r = 0;$/;"	d
r	obj/net/testinput.asm	/^		r = ipc_recv((envid_t*)&sender, (void *)packet, &perm_store);$/;"	d
r	obj/net/testinput.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/net/testinput.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/net/testinput.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/net/testinput.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/net/testinput.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/net/testinput.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/net/testinput.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/net/testinput.asm	/^		r = sys_receive(temp);$/;"	d
r	obj/net/testinput.asm	/^		r = sys_transmit(nsipcbuf.pkt.jp_data, nsipcbuf.pkt.jp_len);$/;"	d
r	obj/net/testinput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testinput.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/testinput.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/net/testinput.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/net/testinput.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/net/testinput.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/net/testinput.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/net/testoutput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testoutput.asm	/^			r = 0;$/;"	d
r	obj/net/testoutput.asm	/^		r = ipc_recv((envid_t*)&sender, (void *)packet, &perm_store);$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_receive(temp);$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_transmit(nsipcbuf.pkt.jp_data, nsipcbuf.pkt.jp_len);$/;"	d
r	obj/net/testoutput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testoutput.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/testoutput.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/net/testoutput.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/net/testoutput.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/net/testoutput.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/net/testoutput.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/badsegment.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/breakpoint.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/cat.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/divzero.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/dumbfork.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/echosrv.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echosrv.asm	/^			r = 0;$/;"	d
r	obj/user/echosrv.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/echosrv.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echosrv.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echosrv.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/echotest.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echotest.asm	/^			r = 0;$/;"	d
r	obj/user/echotest.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/echotest.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echotest.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echotest.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/evilhello.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/fairness.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/faultalloc.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultalloc.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultalloc.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/faultallocbad.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultallocbad.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/faultdie.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultdie.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultdie.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/faultnostack.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultnostack.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultnostack.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultread.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/faultregs.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultregs.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultregs.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwrite.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/user/forktree.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/hello.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/httpd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/httpd.asm	/^			r = 0;$/;"	d
r	obj/user/httpd.asm	/^		r = http_request_parse(req, buffer);$/;"	d
r	obj/user/httpd.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/httpd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/httpd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/httpd.asm	/^	r = readn(fd, temp, 2048);$/;"	d
r	obj/user/httpd.asm	/^	r = send_data(req, fd);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 128, "Content-Type: %s\\r\\n", type);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 512, "HTTP\/" HTTP_VERSION" %d %s\\r\\n"$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 64, "Content-Length: %ld\\r\\n", (long)size);$/;"	d
r	obj/user/httpd.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/httpd.asm	/^	r = write(req->sock, temp, r);$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^		                r = sys_page_map(0, va, child, va, uvpt[PGNUM(pg_addr)] & PTE_SYSCALL);$/;"	d
r	obj/user/icode.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/icode.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/idle.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		                r = sys_page_map(0, va, child, va, uvpt[PGNUM(pg_addr)] & PTE_SYSCALL);$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/user/pingpong.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/user/pingpongs.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/primes.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primes.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/user/primes.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/primespipe.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/primespipe.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/primespipe.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/user/primespipe.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/sendpage.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sendpage.asm	/^			r = 0;$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/user/sendpage.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sendpage.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sendpage.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/sendpage.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/sendpage.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/sendpage.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/user/sendpage.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^		                r = sys_page_map(0, va, child, va, uvpt[PGNUM(pg_addr)] & PTE_SYSCALL);$/;"	d
r	obj/user/sh.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/sh.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/sh.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/sh.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/sh.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/user/sh.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/softint.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^		                r = sys_page_map(0, va, child, va, uvpt[PGNUM(pg_addr)] & PTE_SYSCALL);$/;"	d
r	obj/user/spawnhello.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/spin.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/spin.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/spin.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/spin.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/user/spin.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/user/stresssched.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testbss.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testfdsharing.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testfdsharing.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/user/testfdsharing.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfile.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testpipe.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testpipe.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testpipe.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/user/testpipe.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testpiperace.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testpiperace.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testpiperace.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/user/testpiperace.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testpiperace2.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testpiperace2.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/user/testpiperace2.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^		                r = sys_page_map(0, va, child, va, uvpt[PGNUM(pg_addr)] & PTE_SYSCALL);$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testpteshare.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testpteshare.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testpteshare.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/user/testpteshare.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^		                r = sys_page_map(0, va, child, va, uvpt[PGNUM(pg_addr)] & PTE_SYSCALL);$/;"	d
r	obj/user/testshell.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/testshell.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_alloc(0, (void*)(UXSTACKTOP-PGSIZE), (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_alloc(env_id, (void*)(UXSTACKTOP - PGSIZE), (PTE_U | PTE_W | PTE_P));$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_map(0, va, 0, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_map(0, va, envid, va, (PTE_P | PTE_U | PTE_COW));$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_map(0, va, envid, va, req_perm);$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testshell.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testshell.asm	/^	r = sys_page_map(0, (void*)PFTEMP, 0, addr, (PTE_P|PTE_U|PTE_W));$/;"	d
r	obj/user/testshell.asm	/^	r = sys_page_unmap(0, (void*)PFTEMP);$/;"	d
r	obj/user/testshell.asm	/^                r = sys_page_map(0, va, envid, va, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testtime.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testtime.asm	/^			r = 0;$/;"	d
r	obj/user/testtime.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testtime.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testtime.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testtime.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/yield.asm	/^	r = sys_ipc_recv(pg);$/;"	d
ram	obj/net/ns.asm	/^  ram = LWIP_MEM_ALIGN(ram_heap);$/;"	d
ram_end	obj/net/ns.asm	/^  ram_end = (struct mem *)&ram[MEM_SIZE_ALIGNED];$/;"	d
rambuf	obj/net/ns.asm	/^  rambuf = pbuf_alloc(PBUF_LINK, 0, PBUF_REF);$/;"	d
raw_pcbs	obj/net/ns.asm	/^            raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = raw_pcbs->next;$/;"	d
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/ns.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testinput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testoutput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echosrv.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echotest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/httpd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testtime.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reassdatagrams	obj/net/ns.asm	/^    reassdatagrams = ipr->next;$/;"	d
reassdatagrams	obj/net/ns.asm	/^  reassdatagrams = ipr;$/;"	d
rebind	obj/net/ns.asm	/^      rebind = 1;$/;"	d
rebind	obj/net/ns.asm	/^  rebind = 0;$/;"	d
recv_data	obj/net/ns.asm	/^              recv_data = cseg->p;$/;"	d
recv_data	obj/net/ns.asm	/^          recv_data = inseg.p;$/;"	d
recv_data	obj/net/ns.asm	/^    recv_data = NULL;$/;"	d
recv_flags	obj/net/ns.asm	/^            recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^          recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_CLOSED;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_RESET;$/;"	d
recv_flags	obj/net/ns.asm	/^    recv_flags = 0;$/;"	d
ref	obj/net/ns.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
ref	obj/net/ns.asm	/^    ref = --(p->ref);$/;"	d
ref	obj/user/httpd.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
rem	obj/net/ns.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/net/testinput.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echosrv.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echotest.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/httpd.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem_len	obj/net/ns.asm	/^    rem_len = length - p->len;$/;"	d
rem_len	obj/net/ns.asm	/^  rem_len = new_len;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = 0;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = ntohs(((struct sockaddr_in *)to)->sin_port);$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port = pcb->remote_port;$/;"	d
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
reqno	obj/net/ns.asm	/^		reqno = ipc_recv((int32_t *) &whom, (void *) va, &perm);$/;"	d
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
result	obj/kern/kernel.asm	/^	result = ROUNDUP(((char*)pages) + (npages * sizeof(struct PageInfo)) - 0xf0000000, PGSIZE);	\/\/Test this alternative as well$/;"	d
result	obj/kern/kernel.asm	/^	result = ROUNDUP(result + sizeof(struct Env) * NENV, PGSIZE);$/;"	d
result	obj/kern/kernel.asm	/^	result = nextfree;$/;"	d
result	obj/net/ns.asm	/^          result = ERR_OK;$/;"	d
result	obj/net/ns.asm	/^      result = etharp_send_ip(netif, q, srcaddr, &(arp_table[i].ethaddr));$/;"	d
result	obj/net/ns.asm	/^    result = etharp_request(netif, ipaddr);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_create_request(netif);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_discover(netif);$/;"	d
result	obj/net/ns.asm	/^  result = etharp_query(netif, &dhcp->offered_ip_addr, NULL);$/;"	d
result	obj/net/ns.asm	/^  result = netif->linkoutput(netif, p);$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/net/ns.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testinput.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testoutput.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echosrv.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echotest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/httpd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testtime.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/ns.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^      ret = ip_output_if(p, &(iphdr->src), IP_HDRINCL,$/;"	d
ret	obj/net/ns.asm	/^    ret = pbuf_copy_partial(dhcp->p, dhcp->options_in, dhcp->options_in_len, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN);$/;"	d
ret	obj/net/ns.asm	/^  ret = pbuf_copy_partial(dhcp->p, dhcp->msg_in, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN, 0);$/;"	d
ret	obj/net/ns.asm	/^  ret = tcp_enqueue(pcb, NULL, 0, TCP_SYN, 0, (u8_t *)&optdata, 4);$/;"	d
ret	obj/net/testinput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testinput.asm	/^	ret = dst;$/;"	d
ret	obj/net/testoutput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testoutput.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/echosrv.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echosrv.asm	/^	ret = dst;$/;"	d
ret	obj/user/echotest.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echotest.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/httpd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/httpd.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
ret	obj/user/testtime.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testtime.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
ret_val	obj/kern/kernel.asm	/^		ret_val = syscall(tf->tf_regs.reg_eax,$/;"	d
ret_val	obj/kern/kernel.asm	/^		ret_val = user_mem_check(curenv, stabs, stab_end-stabs, (PTE_P | PTE_U));$/;"	d
ret_val	obj/kern/kernel.asm	/^		ret_val = user_mem_check(curenv, stabstr, stabstr_end-stabstr, (PTE_P | PTE_U));$/;"	d
ret_val	obj/kern/kernel.asm	/^		ret_val = user_mem_check(curenv, usd, sizeof(usd), (PTE_P | PTE_U));$/;"	d
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
right_wnd_edge	obj/net/ns.asm	/^    right_wnd_edge = pcb->snd_wnd + pcb->snd_wl1;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rp	obj/net/ns.asm	/^  rp = str;$/;"	d
rp	obj/net/testinput.asm	/^  rp = str;$/;"	d
rp	obj/user/echosrv.asm	/^  rp = str;$/;"	d
rp	obj/user/echotest.asm	/^  rp = str;$/;"	d
rp	obj/user/httpd.asm	/^  rp = str;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon8	file:
rseg	obj/net/ns.asm	/^      rseg = pcb->unacked;$/;"	d
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
rx_desc	kern/working_e1000.h	/^struct rx_desc$/;"	s
rx_descs	kern/working_e1000.c	/^static struct rx_desc rx_descs[NRDESC];$/;"	v	typeref:struct:rx_desc	file:
rx_packets	kern/working_e1000.c	/^static char rx_packets[MAXPKTLEN * NRDESC];$/;"	v	file:
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^    s = conn->socket;$/;"	d
s	obj/net/ns.asm	/^  s = data->s;$/;"	d
s	obj/net/testinput.asm	/^	s = src;$/;"	d
s	obj/net/testoutput.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/echosrv.asm	/^	s = src;$/;"	d
s	obj/user/echotest.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/httpd.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s	obj/user/testtime.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s8_t	obj/net/ns.asm	/^s8_t$/;"	l
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
seg	obj/net/ns.asm	/^      seg = NULL;$/;"	d
seg	obj/net/ns.asm	/^    seg = memp_malloc(MEMP_TCP_SEG);$/;"	d
seg	obj/net/ns.asm	/^    seg = next;$/;"	d
seg	obj/net/ns.asm	/^    seg = pcb->unsent;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked->next;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unsent;$/;"	d
seglen	obj/net/ns.asm	/^    seglen = left > pcb->mss? pcb->mss: left;$/;"	d
seglen	obj/net/ns.asm	/^  seglen = 0;$/;"	d
sel	obj/kern/kernel.asm	/^	sel: GD_KT since each segment in IDT is 8 bytes in size$/;"	l
select_cb_list	obj/net/ns.asm	/^      select_cb_list = select_cb.next;$/;"	d
select_cb_list	obj/net/ns.asm	/^    select_cb_list = &select_cb;$/;"	d
selectsem	obj/net/ns.asm	/^  selectsem = sys_sem_new(1);$/;"	d
sendmss	obj/net/ns.asm	/^    sendmss = LWIP_MIN(sendmss, mss_s);$/;"	d
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
seqno	obj/net/ns.asm	/^          seqno = pcb->ooseq->tcphdr->seqno;$/;"	d
seqno	obj/net/ns.asm	/^    seqno = pcb->snd_nxt;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = pcb->snd_lbb;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = tcphdr->seqno = ntohl(tcphdr->seqno);$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfork	lib/fork.c	/^sfork(void)$/;"	f
sfork	lib/orig_fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_IO_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_MEM_SIZE(rv);$/;"	d
size	obj/net/ns.asm	/^    size = MIN_SIZE_ALIGNED;$/;"	d
size	obj/net/ns.asm	/^  size = LWIP_MEM_ALIGN_SIZE(size);$/;"	d
size	obj/net/ns.asm	/^  size = mem->next - ptr - SIZEOF_STRUCT_MEM;$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/net/ns.asm	/^size_t$/;"	l
size_t	obj/net/testinput.asm	/^size_t$/;"	l
size_t	obj/net/testoutput.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/echosrv.asm	/^size_t$/;"	l
size_t	obj/user/echotest.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/httpd.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/testtime.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
so	obj/net/ns.asm	/^       so do nothing here! *\/$/;"	d
sock	obj/net/ns.asm	/^    sock = get_socket(s);$/;"	d
sock	obj/net/ns.asm	/^  sock = &sockets[s];$/;"	d
sock	obj/net/ns.asm	/^  sock = data->sock;$/;"	d
sock	obj/net/ns.asm	/^  sock = get_socket(s);$/;"	d
socksem	obj/net/ns.asm	/^  socksem   = sys_sem_new(1);$/;"	d
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
special	kern/working_e1000.h	/^    uint16_t special;$/;"	m	struct:rx_desc
special	kern/working_e1000.h	/^    uint16_t special;$/;"	m	struct:tx_desc
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
src	obj/net/ns.asm	/^    src = (*octetptr) << 8;$/;"	d
src	obj/net/ns.asm	/^  src = ntohs(udphdr->src);$/;"	d
src_ip	obj/net/ns.asm	/^    src_ip = &(netif->ip_addr);$/;"	d
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/net/ns.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testinput.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testoutput.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echosrv.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echotest.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/httpd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sendpage.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testtime.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
stacktop	obj/net/ns.asm	/^    stacktop = stacktop - 4;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/kern/kernel.asm	/^		start = kstacktop_i - KSTKSIZE;$/;"	d
start	obj/net/ns.asm	/^	start = sys_time_msec();$/;"	d
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^	static struct pci_bus root_bus;$/;"	t
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static char rp[MAXPACKETLEN * MAXRECVDESC];\/\/continuous memory$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int __attribute__((warn_unused_result))$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static rx_desc rd[MAXRECVDESC];$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned int ticks;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/net/ns.asm	/^static LIST_HEAD(thread_list, sys_thread) threads[thread_hash_size];$/;"	l
static	obj/net/ns.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/ns.asm	/^static err_t$/;"	l
static	obj/net/ns.asm	/^static inline struct thread_context *$/;"	l
static	obj/net/ns.asm	/^static inline void $/;"	l
static	obj/net/ns.asm	/^static inline void$/;"	l
static	obj/net/ns.asm	/^static int$/;"	l
static	obj/net/ns.asm	/^static long long$/;"	l
static	obj/net/ns.asm	/^static ssize_t$/;"	l
static	obj/net/ns.asm	/^static struct ip_reassdata*$/;"	t
static	obj/net/ns.asm	/^static struct lwip_socket *$/;"	t
static	obj/net/ns.asm	/^static struct pbuf *$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue kill_queue;$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue thread_queue;$/;"	t
static	obj/net/ns.asm	/^static thread_id_t$/;"	l
static	obj/net/ns.asm	/^static u16_t$/;"	l
static	obj/net/ns.asm	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	l
static	obj/net/ns.asm	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	l
static	obj/net/ns.asm	/^static u8_t$/;"	l
static	obj/net/ns.asm	/^static unsigned long long$/;"	l
static	obj/net/ns.asm	/^static void *$/;"	l
static	obj/net/ns.asm	/^static void __attribute__((noreturn))$/;"	l
static	obj/net/ns.asm	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	l
static	obj/net/ns.asm	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	l
static	obj/net/ns.asm	/^static void$/;"	l
static	obj/net/testinput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testinput.asm	/^static int$/;"	l
static	obj/net/testinput.asm	/^static long long$/;"	l
static	obj/net/testinput.asm	/^static ssize_t$/;"	l
static	obj/net/testinput.asm	/^static unsigned long long$/;"	l
static	obj/net/testinput.asm	/^static void$/;"	l
static	obj/net/testoutput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testoutput.asm	/^static int$/;"	l
static	obj/net/testoutput.asm	/^static long long$/;"	l
static	obj/net/testoutput.asm	/^static ssize_t$/;"	l
static	obj/net/testoutput.asm	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	t
static	obj/net/testoutput.asm	/^static unsigned long long$/;"	l
static	obj/net/testoutput.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/echosrv.asm	/^static int$/;"	l
static	obj/user/echosrv.asm	/^static long long$/;"	l
static	obj/user/echosrv.asm	/^static ssize_t$/;"	l
static	obj/user/echosrv.asm	/^static unsigned long long$/;"	l
static	obj/user/echosrv.asm	/^static void$/;"	l
static	obj/user/echotest.asm	/^static int$/;"	l
static	obj/user/echotest.asm	/^static long long$/;"	l
static	obj/user/echotest.asm	/^static ssize_t$/;"	l
static	obj/user/echotest.asm	/^static unsigned long long$/;"	l
static	obj/user/echotest.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/httpd.asm	/^static int$/;"	l
static	obj/user/httpd.asm	/^static long long$/;"	l
static	obj/user/httpd.asm	/^static ssize_t$/;"	l
static	obj/user/httpd.asm	/^static unsigned long long$/;"	l
static	obj/user/httpd.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static int$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static ssize_t$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpteshare.asm	/^static __inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testshell.asm	/^static __inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/testtime.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testtime.asm	/^static __inline void$/;"	l
static	obj/user/testtime.asm	/^static int$/;"	l
static	obj/user/testtime.asm	/^static long long$/;"	l
static	obj/user/testtime.asm	/^static ssize_t$/;"	l
static	obj/user/testtime.asm	/^static unsigned long long$/;"	l
static	obj/user/testtime.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
status	kern/working_e1000.h	/^    uint8_t status;$/;"	m	struct:rx_desc
status	kern/working_e1000.h	/^    uint8_t status;$/;"	m	struct:tx_desc
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop	obj/net/ns.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testinput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testoutput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
swapped	obj/net/ns.asm	/^      swapped = 1 - swapped;$/;"	d
swapped	obj/net/ns.asm	/^  swapped = 0;$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_mbox_t	obj/net/ns.asm	/^sys_mbox_t$/;"	l
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_sem_t	obj/net/ns.asm	/^sys_sem_t$/;"	l
sys_thread_t	obj/net/ns.asm	/^sys_thread_t$/;"	l
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
t	obj/net/ns.asm	/^    t = malloc(sizeof(*t));$/;"	d
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
tail_gone	obj/net/ns.asm	/^    tail_gone = pbuf_free(q);$/;"	d
tc	obj/net/ns.asm	/^	tc = tc->tc_queue_link;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb->next;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = NULL;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = pcb;$/;"	d
tcp_tw_pcbs	obj/net/ns.asm	/^        tcp_tw_pcbs = pcb->next;$/;"	d
tcphdr	obj/net/ns.asm	/^    tcphdr = p->payload;$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = (struct tcp_hdr *)((u8_t *)p->payload + IPH_HL(iphdr) * 4);$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = p->payload;$/;"	d
tcpip_init_done	obj/net/ns.asm	/^  tcpip_init_done = initfunc;$/;"	d
tcpip_init_done_arg	obj/net/ns.asm	/^  tcpip_init_done_arg = arg;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 0;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 1;$/;"	d
tcplen	obj/net/ns.asm	/^        tcplen = TCP_TCPLEN(&inseg);$/;"	d
tcplen	obj/net/ns.asm	/^  tcplen = p->tot_len + ((flags & TCP_FIN || flags & TCP_SYN)? 1: 0);$/;"	d
td	kern/temp_e1000.c	/^static tx_desc td[MAXTRANDESC];$/;"	v	file:
tehdr	obj/net/ns.asm	/^  tehdr = q->payload;$/;"	d
temp	obj/kern/kernel.asm	/^	temp = ((uint32_t)result) \/ PGSIZE;$/;"	d
temp_tail	obj/kern/kernel.asm	/^		temp_tail = (temp_tail + 1) % MAXTRANDESC; \/\/loop back if end of queue$/;"	d
temp_tail	obj/kern/kernel.asm	/^	temp_tail = (temp_tail + 1 ) % MAXRECVDESC;$/;"	d
temp_user_ptr	obj/kern/kernel.asm	/^			temp_user_ptr = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
temp_user_ptr	obj/kern/kernel.asm	/^			temp_user_ptr = (struct UTrapframe *)(tf->tf_esp - sizeof(uint32_t) - sizeof(struct UTrapframe));$/;"	d
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	kern/init.c	/^test_backtrace(int x)$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_fd_share	grade-lab5	/^def test_fd_share():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_primespipe	grade-lab5	/^def test_primespipe():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_pte_share	grade-lab5	/^def test_pte_share():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spawn	grade-lab5	/^def test_spawn():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_testfile	grade-lab5	/^def test_testfile():$/;"	f
test_testshell	grade-lab5	/^def test_testshell():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_size	obj/kern/kernel.asm	/^	tf_size = sizeof(struct Trapframe);$/;"	d
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/ns.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/ns.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testinput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testinput.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testoutput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testoutput.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echosrv.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echotest.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/httpd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testtime.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
ticks	obj/kern/kernel.asm	/^	ticks = 0;$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = SYS_ARCH_TIMEOUT;$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_mbox_fetch(mbox, msg, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_sem_wait(sem, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^    time_needed = sys_arch_mbox_fetch(mbox, msg, 0);$/;"	d
timeout	obj/net/ns.asm	/^      timeout = 0xffff;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t1_renew + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t2_rebind + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^  timeout = memp_malloc(MEMP_SYS_TIMEOUT);$/;"	d
timeouts	obj/net/ns.asm	/^  timeouts = sys_arch_timeouts();$/;"	d
timer_envid	obj/net/ns.asm	/^	timer_envid = fork();$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
tmp	obj/net/ns.asm	/^      tmp = r;$/;"	d
tmp	obj/net/ns.asm	/^      tmp = tmp | IP_MF;$/;"	d
tmp	obj/net/ns.asm	/^    tmp = omf | (IP_OFFMASK & (ofo));$/;"	d
tmp	obj/net/ns.asm	/^  tmp = ntohs(IPH_OFFSET(iphdr));$/;"	d
tmptimeout	obj/net/ns.asm	/^      tmptimeout = timeouts->next;$/;"	d
to	obj/net/ns.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/ns.asm	/^	to = TIMER_INTERVAL - (now - start);$/;"	d
to	obj/net/testinput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/testoutput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
tp	kern/temp_e1000.c	/^static char tp[MAXPACKETLEN * MAXTRANDESC];\/\/continuous memory$/;"	v	file:
transmit	kern/temp_e1000.c	/^int transmit(void *addr, uint16_t length)$/;"	f
transmit	kern/working_e1000.c	/^int transmit(void* addr, uint16_t length) {$/;"	f
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_handler	kern/trapentry.S	/^trap_handler:$/;"	l
trap_handler	obj/kern/kernel.asm	/^trap_handler:$/;"	l
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon5
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
tx_desc	kern/working_e1000.h	/^struct tx_desc$/;"	s
tx_descs	kern/working_e1000.c	/^static struct tx_desc tx_descs[NTDESC];$/;"	v	typeref:struct:tx_desc	file:
tx_packets	kern/working_e1000.c	/^static char tx_packets[MAXPKTLEN * NTDESC];$/;"	v	file:
type	inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
type	obj/net/ns.asm	/^      type = p->type;$/;"	d
type	obj/net/ns.asm	/^  type = *((u8_t *)p->payload);$/;"	d
type	obj/net/ns.asm	/^  type = p->type;$/;"	d
type	obj/user/httpd.asm	/^	type = mime_type(req->url);$/;"	d
u16_t	obj/net/ns.asm	/^u16_t$/;"	l
u16_t	obj/net/testinput.asm	/^u16_t$/;"	l
u16_t	obj/user/echosrv.asm	/^u16_t$/;"	l
u16_t	obj/user/echotest.asm	/^u16_t$/;"	l
u16_t	obj/user/httpd.asm	/^u16_t$/;"	l
u32_t	obj/net/ns.asm	/^u32_t $/;"	l
u32_t	obj/net/ns.asm	/^u32_t$/;"	l
u32_t	obj/net/testinput.asm	/^u32_t$/;"	l
u32_t	obj/user/echosrv.asm	/^u32_t$/;"	l
u32_t	obj/user/echotest.asm	/^u32_t$/;"	l
u32_t	obj/user/httpd.asm	/^u32_t$/;"	l
u8_t	obj/net/ns.asm	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t netif_is_up(struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t$/;"	l
udp_pcbs	obj/net/ns.asm	/^          udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = udp_pcbs->next;$/;"	d
udp_pcbs	obj/net/ns.asm	/^  udp_pcbs = pcb;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = (struct udp_hdr *)p->payload;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = q->payload;$/;"	d
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/net/ns.asm	/^uint32_t$/;"	l
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
uncon_pcb	obj/net/ns.asm	/^          uncon_pcb = pcb;$/;"	d
uncon_pcb	obj/net/ns.asm	/^    uncon_pcb = NULL;$/;"	d
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/fs/fs.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/net/ns.asm	/^unsigned int$/;"	l
unsigned	obj/net/testinput.asm	/^unsigned int$/;"	l
unsigned	obj/net/testoutput.asm	/^unsigned int$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
unsigned	obj/user/breakpoint.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello2.asm	/^unsigned int$/;"	l
unsigned	obj/user/cat.asm	/^unsigned int$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
unsigned	obj/user/dumbfork.asm	/^unsigned int$/;"	l
unsigned	obj/user/echo.asm	/^unsigned int$/;"	l
unsigned	obj/user/echosrv.asm	/^unsigned int$/;"	l
unsigned	obj/user/echotest.asm	/^unsigned int$/;"	l
unsigned	obj/user/evilhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/fairness.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultalloc.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultallocbad.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultbadhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultdie.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultevilhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultnostack.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultregs.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwrite.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwritekernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/httpd.asm	/^unsigned int$/;"	l
unsigned	obj/user/icode.asm	/^unsigned int$/;"	l
unsigned	obj/user/idle.asm	/^unsigned int$/;"	l
unsigned	obj/user/init.asm	/^unsigned int$/;"	l
unsigned	obj/user/ls.asm	/^unsigned int$/;"	l
unsigned	obj/user/lsfd.asm	/^unsigned int$/;"	l
unsigned	obj/user/num.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpong.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpongs.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
unsigned	obj/user/sendpage.asm	/^unsigned int$/;"	l
unsigned	obj/user/sh.asm	/^unsigned int$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
unsigned	obj/user/spawnhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
unsigned	obj/user/stresssched.asm	/^unsigned int$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfdsharing.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfile.asm	/^unsigned int$/;"	l
unsigned	obj/user/testkbd.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpiperace.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpiperace2.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpteshare.asm	/^unsigned int$/;"	l
unsigned	obj/user/testshell.asm	/^unsigned int$/;"	l
unsigned	obj/user/testtime.asm	/^unsigned int$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
url	obj/user/httpd.asm	/^	url = request;$/;"	d
url_len	obj/user/httpd.asm	/^	url_len = request - url;$/;"	d
usage	fs/fsformat.c	/^usage(void)$/;"	f
usage	user/ls.c	/^usage(void)$/;"	f
usage	user/lsfd.c	/^usage(void)$/;"	f
usage	user/sh.c	/^usage(void)$/;"	f
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
useg	obj/net/ns.asm	/^          useg = useg->next;$/;"	d
useg	obj/net/ns.asm	/^    useg = NULL;$/;"	d
useg	obj/net/ns.asm	/^  useg = pcb->unacked;$/;"	d
useg	obj/net/ns.asm	/^  useg = queue = seg = NULL;$/;"	d
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^				user_mem_check_addr = (uintptr_t)va_start;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = (uintptr_t)va;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
v	obj/net/ns.asm	/^			v = mptr;$/;"	d
v	obj/net/ns.asm	/^	v = mptr;$/;"	d
v	obj/user/httpd.asm	/^			v = mptr;$/;"	d
v	obj/user/httpd.asm	/^	v = mptr;$/;"	d
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/net/ns.asm	/^		va = get_buffer();$/;"	d
va	obj/net/ns.asm	/^	va = (void *)(REQVA + i * PGSIZE);$/;"	d
va	obj/net/ns.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/net/testinput.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/net/testoutput.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/badsegment.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/breakpoint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/divzero.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/dumbfork.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echosrv.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echotest.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/evilhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/fairness.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultalloc.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultallocbad.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultbadhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultdie.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultevilhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultnostack.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultread.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultreadkernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultregs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwrite.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwritekernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/hello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/httpd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^				va = (void*) (PGNUM(pg_addr) << PGSHIFT);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^				va = (void*) (PGNUM(pg_addr) << PGSHIFT);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpongs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sendpage.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^				va = (void*) (PGNUM(pg_addr) << PGSHIFT);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/softint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^				va = (void*) (PGNUM(pg_addr) << PGSHIFT);$/;"	d
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spin.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/stresssched.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testbss.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^				va = (void*) (PGNUM(pg_addr) << PGSHIFT);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^				va = (void*) (PGNUM(pg_addr) << PGSHIFT);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testtime.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/yield.asm	/^	va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	obj/net/ns.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/ns.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/ns.asm	/^    val = 0;$/;"	d
val	obj/net/testinput.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/testinput.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/testinput.asm	/^    val = 0;$/;"	d
val	obj/user/echosrv.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echosrv.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echosrv.asm	/^    val = 0;$/;"	d
val	obj/user/echotest.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echotest.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echotest.asm	/^    val = 0;$/;"	d
val	obj/user/httpd.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/httpd.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/httpd.asm	/^    val = 0;$/;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
valid	obj/net/ns.asm	/^            valid = 0;$/;"	d
valid	obj/net/ns.asm	/^          valid = 0;$/;"	d
valid	obj/net/ns.asm	/^        valid = 0;$/;"	d
value	obj/net/ns.asm	/^  value = (u32_t)(*ptr++) << 24;$/;"	d
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
version	obj/user/httpd.asm	/^	version = request;$/;"	d
version_len	obj/user/httpd.asm	/^	version_len = request - version;$/;"	d
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void init_receive()$/;"	l
void	obj/kern/kernel.asm	/^void init_transmit()$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/net/ns.asm	/^void *$/;"	l
void	obj/net/ns.asm	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	l
void	obj/net/ns.asm	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	l
void	obj/net/ns.asm	/^void netif_remove(struct netif * netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_down(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_up(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/ns.asm	/^void$/;"	l
void	obj/net/testinput.asm	/^void *$/;"	l
void	obj/net/testinput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testinput.asm	/^void$/;"	l
void	obj/net/testoutput.asm	/^void *$/;"	l
void	obj/net/testoutput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testoutput.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/echosrv.asm	/^void *$/;"	l
void	obj/user/echosrv.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echosrv.asm	/^void$/;"	l
void	obj/user/echotest.asm	/^void *$/;"	l
void	obj/user/echotest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echotest.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/echotest.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/httpd.asm	/^void *$/;"	l
void	obj/user/httpd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/httpd.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/testtime.asm	/^void *$/;"	l
void	obj/user/testtime.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testtime.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
we	obj/net/ns.asm	/^       we do NOT return to the application thread, since ERR_MEM is$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/net/ns.asm	/^				width = 0;$/;"	d
width	obj/net/ns.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/ns.asm	/^		width = -1;$/;"	d
width	obj/net/testinput.asm	/^				width = 0;$/;"	d
width	obj/net/testinput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testinput.asm	/^		width = -1;$/;"	d
width	obj/net/testoutput.asm	/^				width = 0;$/;"	d
width	obj/net/testoutput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testoutput.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^		width = -1;$/;"	d
width	obj/user/echosrv.asm	/^				width = 0;$/;"	d
width	obj/user/echosrv.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echosrv.asm	/^		width = -1;$/;"	d
width	obj/user/echotest.asm	/^				width = 0;$/;"	d
width	obj/user/echotest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echotest.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/httpd.asm	/^				width = 0;$/;"	d
width	obj/user/httpd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/httpd.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^		width = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^		width = -1;$/;"	d
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^		width = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^		width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^		width = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^		width = -1;$/;"	d
width	obj/user/testtime.asm	/^				width = 0;$/;"	d
width	obj/user/testtime.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testtime.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wnd	obj/net/ns.asm	/^  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon8	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
write_finished	obj/net/ns.asm	/^      write_finished = 1;$/;"	d
write_finished	obj/net/ns.asm	/^    write_finished = 1;$/;"	d
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
